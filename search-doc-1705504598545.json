{"searchDocs":[{"title":"@boardzilla/core","type":0,"sectionRef":"#","url":"/api","content":"@boardzilla/core","keywords":"","version":"Next"},{"title":"Class: Player<P, B>","type":0,"sectionRef":"#","url":"/api/classes/Player","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: Player<P, B>","url":"/api/classes/Player#type-parameters","content":" Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  ","version":"Next","tagName":"h2"},{"title":"Methods​","type":1,"pageTitle":"Class: Player<P, B>","url":"/api/classes/Player#methods","content":" ","version":"Next","tagName":"h2"},{"title":"allMy​","type":1,"pageTitle":"Class: Player<P, B>","url":"/api/classes/Player#allmy","content":" ▸ allMy&lt;F&gt;(this, className, ...finders): ElementCollection&lt;F&gt;  Finds all elements of a given type that are owned by this player. This is equivalent to calling board.all(...) with {owner: this} as one of the search terms. Also see GameElement#owner.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypethis\tP className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Defined in​  boardzilla-core/src/player/player.ts:59    ","version":"Next","tagName":"h3"},{"title":"has​","type":1,"pageTitle":"Class: Player<P, B>","url":"/api/classes/Player#has","content":" ▸ has&lt;F&gt;(this, className, ...finders): boolean  Returns true if any element of a given type is owned by this player. This is equivalent to calling board.has(...) with {owner: this} as one of the search terms. Also see GameElement#owner.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypethis\tP className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  boolean  Defined in​  boardzilla-core/src/player/player.ts:91    ","version":"Next","tagName":"h3"},{"title":"my​","type":1,"pageTitle":"Class: Player<P, B>","url":"/api/classes/Player#my","content":" ▸ my&lt;F&gt;(this, className, ...finders): undefined | F  Finds the first element of a given type that is owned by this player. This is equivalent to calling board.first(...) with {owner: this} as one of the search terms. Also see GameElement#owner.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypethis\tP className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Defined in​  boardzilla-core/src/player/player.ts:75    ","version":"Next","tagName":"h3"},{"title":"other​","type":1,"pageTitle":"Class: Player<P, B>","url":"/api/classes/Player#other","content":" ▸ other(this): P  Returns the other player. Only allowed in 2 player games  Parameters​  Name\tTypethis\tP  Returns​  P  Defined in​  boardzilla-core/src/player/player.ts:49    ","version":"Next","tagName":"h3"},{"title":"others​","type":1,"pageTitle":"Class: Player<P, B>","url":"/api/classes/Player#others","content":" ▸ others(this): P[]  Returns an array of all other players.  Parameters​  Name\tTypethis\tP  Returns​  P[]  Defined in​  boardzilla-core/src/player/player.ts:42    ","version":"Next","tagName":"h3"},{"title":"setCurrent​","type":1,"pageTitle":"Class: Player<P, B>","url":"/api/classes/Player#setcurrent","content":" ▸ setCurrent(this): void  Set this player as the current player  Parameters​  Name\tTypethis\tP  Returns​  void  Defined in​  boardzilla-core/src/player/player.ts:35 ","version":"Next","tagName":"h3"},{"title":"Class: Game<P, B>","type":0,"sectionRef":"#","url":"/api/classes/Game","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#type-parameters","content":" Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  ","version":"Next","tagName":"h2"},{"title":"Actions​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#actions","content":" ","version":"Next","tagName":"h2"},{"title":"action​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#action","content":" ▸ action&lt;A&gt;(definition?): Action&lt;P, A&gt;  Create an Action. An action is a single move that a player can take. Some actions require choices, sometimes several, before they can be executed. Some don't have any choices, like if a player can simply 'pass'. What defines where one action ends and another begins is how much you as a player can decide before you &quot;commit&quot;. For example, in chess you select a piece to move and then a place to put it. These are a single move, not separate. (Unless playing touch-move, which is rarely done in digital chess.) In hearts, you pass 3 cards to another players. These are a single move, not 3. You can change your mind as you select the cards, rather than have to commit to each one. Similarly, other players do not see any information about your choices until you actually commit the entire move.  This function is called for each action in the game actions you define indefineActions. These actions are initially declared with an optional prompt and condition. Further information is added to the action by chaining methods that add choices and behaviour. See (@link Action) for more.  If this action accepts prior arguments besides the ones chosen by the player during the execution of this action (especially common for followUp actions) then a generic can be added for these arguments to help Typescript type these parameters, e.g.:player =&gt; action&lt;{ cards: number}&gt;(...)  Type parameters​  Name\tTypeA\textends Record&lt;string, Argument&lt;P&gt;&gt; = {}  Parameters​  Name\tType\tDescriptiondefinition\tObject\t- definition.condition?\tboolean | (args: A) =&gt; boolean\tA boolean or a function returning a boolean that determines whether the action is currently allowed. Note that the choices you define for your action will further determine if the action is allowed. E.g. if you have a play card action and you add a choice for cards in your hand, Boardzilla will automatically disallow this action if there are no cards in your hand based on the face that there are no valid choices to complete the action. You do not need to specify a condition for these types of limitations. If using the function form, the function will receive an object with any arguments passed to this action, e.g. from followUp. definition.prompt?\tstring\tThe prompt that will appear for the player to explain what the action does. Further prompts can be defined for each choice they subsequently make to complete the action.  Returns​  Action&lt;P, A&gt;  Example  action({ prompt: 'Flip one of your cards' }).chooseOnBoard({ choices: board.find(Card, {mine: true}) }).do( card =&gt; card.hideFromAll() )   Defined in​  boardzilla-core/src/game.ts:339  ","version":"Next","tagName":"h3"},{"title":"Other​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#other","content":" ","version":"Next","tagName":"h2"},{"title":"board​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#board","content":" • board: B  The board for this game. See Board  Defined in​  boardzilla-core/src/game.ts:80    ","version":"Next","tagName":"h3"},{"title":"flowCommands​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#flowcommands","content":" • flowCommands: Object  The flow commands available for this game. See Flow  Type declaration​  Name\tTypeeachPlayer\ttypeof eachPlayer everyPlayer\ttypeof everyPlayer forEach\ttypeof forEach forLoop\ttypeof forLoop ifElse\ttypeof ifElse loop\ttypeof loop playerActions\ttypeof playerActions switchCase\ttypeof switchCase whileLoop\ttypeof whileLoop  Defined in​  boardzilla-core/src/game.ts:95    ","version":"Next","tagName":"h3"},{"title":"players​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#players","content":" • players: PlayerCollection&lt;P&gt;  The players in this game. See Player  Defined in​  boardzilla-core/src/game.ts:76    ","version":"Next","tagName":"h3"},{"title":"addDelay​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#adddelay","content":" ▸ addDelay(): void  Add a delay in the animation of the state change at this point for player as they receive game updates.  Returns​  void  Defined in​  boardzilla-core/src/game.ts:273    ","version":"Next","tagName":"h3"},{"title":"defineActions​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#defineactions","content":" ▸ defineActions(actions): void  Define your game's actions.  Parameters​  Name\tType\tDescriptionactions\tRecord&lt;string, (player: P) =&gt; Action&lt;P, Record&lt;string, Argument&lt;P&gt;&gt;&gt;&gt;\tAn object consisting of actions where the key is the name of the action and value is a function that accepts a player taking the action and returns the result of calling action and chaining choices, results and messages onto the result  Returns​  void  Defined in​  boardzilla-core/src/game.ts:154    ","version":"Next","tagName":"h3"},{"title":"defineFlow​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#defineflow","content":" ▸ defineFlow(...flow): void  Define your game's flow.  Parameters​  Name\tType\tDescription...flow\tFlowStep&lt;P&gt;[]\tAny number of the following: - playerActions - loop - whileLoop - forEach - forLoop - eachPlayer - everyPlayer - ifElse - switchCase  Returns​  void  Defined in​  boardzilla-core/src/game.ts:141    ","version":"Next","tagName":"h3"},{"title":"finish​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#finish","content":" ▸ finish(winner?): void  End the game  Parameters​  Name\tType\tDescriptionwinner?\tP | P[]\ta player or players that are the winners of the game. In a solo game if no winner is provided, this is considered a loss.  Returns​  void  Defined in​  boardzilla-core/src/game.ts:195    ","version":"Next","tagName":"h3"},{"title":"followUp​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#followup","content":" ▸ followUp(action): void  Queue up a follow-up action while processing an action. If called during the processing of a game action, the follow-up action given will be added as a new action immediately following the current one, before the game's flow can resume normally. This is common for card games where the play of a certain card may require more actions be taken.  Parameters​  Name\tType\tDescriptionaction\tFollowUp&lt;P&gt;\tThe action added to the follow-up queue.  Returns​  void  Example  defineAction({ ... playCard: player =&gt; action() .chooseOnBoard('card', cards) .do( ({ card }) =&gt; { if (card.damage) { // this card allows another action to do damage to another Card game.followUp({ name: 'doDamage', args: { amount: card.damage } }); } } )   Defined in​  boardzilla-core/src/game.ts:391    ","version":"Next","tagName":"h3"},{"title":"getState​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#getstate","content":" ▸ getState(player?): GameState&lt;P&gt;  state functions  Parameters​  Name\tTypeplayer?\tP  Returns​  GameState&lt;P&gt;  Defined in​  boardzilla-core/src/game.ts:204    ","version":"Next","tagName":"h3"},{"title":"message​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#message","content":" ▸ message(message, args?): void  Add a message that will be broadcast in the chat at the next game update, based on the current state of the game.  Parameters​  Name\tType\tDescriptionmessage\tstring\tThe message to send. This can contain interpolated strings with double braces, i.e. {{player}} that are defined in args. Of course, strings can be interpolated normally using template literals. However game objects (e.g. players or pieces) passed in as args will be displayed specially by Boardzilla. args?\tRecord&lt;string, Argument&lt;P&gt;&gt;\tAN object of key-value pairs of strings for interpolation in the message.  Returns​  void  Example  game.message( '{{player}} has a score of {{score}}', { player, score: player.score() } );   Defined in​  boardzilla-core/src/game.ts:556    ","version":"Next","tagName":"h3"},{"title":"setting​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#setting","content":" ▸ setting(key): any  Retrieve the selected setting value for a setting defined in render.  Parameters​  Name\tTypekey\tstring  Returns​  any  Defined in​  boardzilla-core/src/game.ts:167    ","version":"Next","tagName":"h3"},{"title":"start​","type":1,"pageTitle":"Class: Game<P, B>","url":"/api/classes/Game#start","content":" ▸ start(): void  flow functions  Returns​  void  Defined in​  boardzilla-core/src/game.ts:180 ","version":"Next","tagName":"h3"},{"title":"Deploy your site","type":0,"sectionRef":"#","url":"/game/actions","content":"","keywords":"","version":"Next"},{"title":"Build your site​","type":1,"pageTitle":"Deploy your site","url":"/game/actions#build-your-site","content":" Build your site for production:  npm run build   The static files are generated in the build folder.  ","version":"Next","tagName":"h2"},{"title":"Deploy your site​","type":1,"pageTitle":"Deploy your site","url":"/game/actions#deploy-your-site-1","content":" Test your production build locally:  npm run serve   The build folder is now served at http://localhost:3000/.  You can now deploy the build folder almost anywhere easily, for free or very small cost (read the Deployment Guide). ","version":"Next","tagName":"h2"},{"title":"Create a Blog Post","type":0,"sectionRef":"#","url":"/game/create-a-blog-post","content":"","keywords":"","version":"Next"},{"title":"Create your first Post​","type":1,"pageTitle":"Create a Blog Post","url":"/game/create-a-blog-post#create-your-first-post","content":" Create a file at blog/2021-02-28-greetings.md:  blog/2021-02-28-greetings.md --- slug: greetings title: Greetings! authors: - name: Joel Marcey title: Co-creator of Docusaurus 1 url: https://github.com/JoelMarcey image_url: https://github.com/JoelMarcey.png - name: Sébastien Lorber title: Docusaurus maintainer url: https://sebastienlorber.com image_url: https://github.com/slorber.png tags: [greetings] --- Congratulations, you have made your first post! Feel free to play around and edit this post as much you like.   A new blog post is now available at http://localhost:3000/blog/greetings. ","version":"Next","tagName":"h2"},{"title":"Actions","type":0,"sectionRef":"#","url":"/game/create-a-document","content":"Actions ...","keywords":"","version":"Next"},{"title":"Define your flow","type":0,"sectionRef":"#","url":"/game/define-flow","content":"Define your flow Some stuff about flow","keywords":"","version":"Next"},{"title":"Class: PlayerCollection<P>","type":0,"sectionRef":"#","url":"/api/classes/PlayerCollection","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#type-parameters","content":" Name\tTypeP\textends Player  ","version":"Next","tagName":"h2"},{"title":"Hierarchy​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#hierarchy","content":" Array&lt;P&gt; ↳ PlayerCollection  ","version":"Next","tagName":"h2"},{"title":"Other​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#other","content":" ","version":"Next","tagName":"h2"},{"title":"[unscopables]​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#unscopables","content":" • Readonly [unscopables]: Object  Is an object whose properties have the value 'true' when they will be absent when used in a 'with' statement.  Type declaration​  Name\tType\tDescription[unscopables]?\tboolean\tIs an object whose properties have the value 'true' when they will be absent when used in a 'with' statement. length?\tboolean\tGets or sets the length of the array. This is a number one higher than the highest index in the array.  Inherited from​  Array.[unscopables]  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:97    ","version":"Next","tagName":"h3"},{"title":"currentPosition​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#currentposition","content":" • currentPosition: number[]  An array of table positions that may currently act.  Defined in​  boardzilla-core/src/player/collection.ts:20    ","version":"Next","tagName":"h3"},{"title":"game​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#game","content":" • game: Game&lt;P, Board&lt;P, any&gt;&gt;  A reference to the Game class  Defined in​  boardzilla-core/src/player/collection.ts:25    ","version":"Next","tagName":"h3"},{"title":"length​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#length","content":" • length: number  Gets or sets the length of the array. This is a number one higher than the highest index in the array.  Inherited from​  Array.length  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1325    ","version":"Next","tagName":"h3"},{"title":"[iterator]​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#iterator","content":" ▸ [iterator](): IterableIterator&lt;P&gt;  Iterator  Returns​  IterableIterator&lt;P&gt;  Inherited from​  Array.[iterator]  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:58    ","version":"Next","tagName":"h3"},{"title":"after​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#after","content":" ▸ after(player): P  Return the next player to act based on player order.  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  P  Defined in​  boardzilla-core/src/player/collection.ts:109    ","version":"Next","tagName":"h3"},{"title":"allCurrent​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#allcurrent","content":" ▸ allCurrent(): P[]  Returns the array of all players that may currently act.  Returns​  P[]  Defined in​  boardzilla-core/src/player/collection.ts:56    ","version":"Next","tagName":"h3"},{"title":"at​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#at","content":" ▸ at(index): undefined | P  Takes an integer value and returns the item at that index, allowing for positive and negative integers. Negative integers count back from the last item in the array.  Parameters​  Name\tTypeindex\tnumber  Returns​  undefined | P  Inherited from​  Array.at  Defined in​  boardzilla-core/node_modules/@types/node/globals.d.ts:114    ","version":"Next","tagName":"h3"},{"title":"atPosition​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#atposition","content":" ▸ atPosition(position): undefined | P  Returns the player at a given table position.  Parameters​  Name\tTypeposition\tnumber  Returns​  undefined | P  Defined in​  boardzilla-core/src/player/collection.ts:40    ","version":"Next","tagName":"h3"},{"title":"concat​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#concat","content":" ▸ concat(...items): P[]  Combines two or more arrays. This method returns a new array without modifying any existing arrays.  Parameters​  Name\tType\tDescription...items\tConcatArray&lt;P&gt;[]\tAdditional arrays and/or items to add to the end of the array.  Returns​  P[]  Inherited from​  Array.concat  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1349  ▸ concat(...items): P[]  Combines two or more arrays. This method returns a new array without modifying any existing arrays.  Parameters​  Name\tType\tDescription...items\t(P | ConcatArray&lt;P&gt;)[]\tAdditional arrays and/or items to add to the end of the array.  Returns​  P[]  Inherited from​  Array.concat  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1355    ","version":"Next","tagName":"h3"},{"title":"copyWithin​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#copywithin","content":" ▸ copyWithin(target, start, end?): this  Returns the this object after copying a section of the array identified by start and end to the same array starting at position target  Parameters​  Name\tType\tDescriptiontarget\tnumber\tIf target is negative, it is treated as length+target where length is the length of the array. start\tnumber\tIf start is negative, it is treated as length+start. If end is negative, it is treated as length+end. end?\tnumber\tIf not specified, length of the this object is used as its default value.  Returns​  this  Inherited from​  Array.copyWithin  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:62    ","version":"Next","tagName":"h3"},{"title":"current​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#current","content":" ▸ current(): undefined | P  Returns the player that may currently act. It is an error to call current when multiple players can act  Returns​  undefined | P  Defined in​  boardzilla-core/src/player/collection.ts:48    ","version":"Next","tagName":"h3"},{"title":"entries​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#entries","content":" ▸ entries(): IterableIterator&lt;[number, P]&gt;  Returns an iterable of key, value pairs for every entry in the array  Returns​  IterableIterator&lt;[number, P]&gt;  Inherited from​  Array.entries  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:63    ","version":"Next","tagName":"h3"},{"title":"every​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#every","content":" ▸ every&lt;S&gt;(predicate, thisArg?): this is S[]  Determines whether all the members of an array satisfy the specified test.  Type parameters​  Name\tTypeS\textends Player&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionpredicate\t(value: P, index: number, array: P[]) =&gt; value is S\tA function that accepts up to three arguments. The every method calls the predicate function for each element in the array until the predicate returns a value which is coercible to the Boolean value false, or until the end of the array. thisArg?\tany\tAn object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.  Returns​  this is S[]  Inherited from​  Array.every  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1432  ▸ every(predicate, thisArg?): boolean  Determines whether all the members of an array satisfy the specified test.  Parameters​  Name\tType\tDescriptionpredicate\t(value: P, index: number, array: P[]) =&gt; unknown\tA function that accepts up to three arguments. The every method calls the predicate function for each element in the array until the predicate returns a value which is coercible to the Boolean value false, or until the end of the array. thisArg?\tany\tAn object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.  Returns​  boolean  Inherited from​  Array.every  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1441    ","version":"Next","tagName":"h3"},{"title":"fill​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#fill","content":" ▸ fill(value, start?, end?): this  Changes all array elements from start to end index to a static value and returns the modified array  Parameters​  Name\tType\tDescriptionvalue\tP\tvalue to fill array section with start?\tnumber\tindex to start filling the array at. If start is negative, it is treated as length+start where length is the length of the array. end?\tnumber\tindex to stop filling the array at. If end is negative, it is treated as length+end.  Returns​  this  Inherited from​  Array.fill  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:51    ","version":"Next","tagName":"h3"},{"title":"filter​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#filter","content":" ▸ filter&lt;S&gt;(predicate, thisArg?): S[]  Returns the elements of an array that meet the condition specified in a callback function.  Type parameters​  Name\tTypeS\textends Player&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionpredicate\t(value: P, index: number, array: P[]) =&gt; value is S\tA function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array. thisArg?\tany\tAn object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.  Returns​  S[]  Inherited from​  Array.filter  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1468  ▸ filter(predicate, thisArg?): P[]  Returns the elements of an array that meet the condition specified in a callback function.  Parameters​  Name\tType\tDescriptionpredicate\t(value: P, index: number, array: P[]) =&gt; unknown\tA function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array. thisArg?\tany\tAn object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.  Returns​  P[]  Inherited from​  Array.filter  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1474    ","version":"Next","tagName":"h3"},{"title":"find​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#find","content":" ▸ find&lt;S&gt;(predicate, thisArg?): undefined | S  Returns the value of the first element in the array where predicate is true, and undefined otherwise.  Type parameters​  Name\tTypeS\textends Player&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionpredicate\t(value: P, index: number, obj: P[]) =&gt; value is S\tfind calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true. If such an element is found, find immediately returns that element value. Otherwise, find returns undefined. thisArg?\tany\tIf provided, it will be used as the this value for each invocation of predicate. If it is not provided, undefined is used instead.  Returns​  undefined | S  Inherited from​  Array.find  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:29    ","version":"Next","tagName":"h3"},{"title":"findIndex​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#findindex","content":" ▸ findIndex(predicate, thisArg?): number  Returns the index of the first element in the array where predicate is true, and -1 otherwise.  Parameters​  Name\tType\tDescriptionpredicate\t(value: P, index: number, obj: P[]) =&gt; unknown\tfind calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true. If such an element is found, findIndex immediately returns that element index. Otherwise, findIndex returns -1. thisArg?\tany\tIf provided, it will be used as the this value for each invocation of predicate. If it is not provided, undefined is used instead.  Returns​  number  Inherited from​  Array.findIndex  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:41    ","version":"Next","tagName":"h3"},{"title":"flat​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#flat","content":" ▸ flat&lt;A, D&gt;(this, depth?): FlatArray&lt;A, D&gt;[]  Returns a new array with all sub-array elements concatenated into it recursively up to the specified depth.  Type parameters​  Name\tTypeA\tA D\textends number = 1  Parameters​  Name\tType\tDescriptionthis\tA\t- depth?\tD\tThe maximum recursion depth  Returns​  FlatArray&lt;A, D&gt;[]  Inherited from​  Array.flat  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2019.array.d.ts:75    ","version":"Next","tagName":"h3"},{"title":"flatMap​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#flatmap","content":" ▸ flatMap&lt;U, This&gt;(callback, thisArg?): U[]  Calls a defined callback function on each element of an array. Then, flattens the result into a new array. This is identical to a map followed by flat with depth 1.  Type parameters​  Name\tTypeU\tU This\tundefined  Parameters​  Name\tType\tDescriptioncallback\t(this: This, value: P, index: number, array: P[]) =&gt; U | readonly U[]\tA function that accepts up to three arguments. The flatMap method calls the callback function one time for each element in the array. thisArg?\tThis\tAn object to which the this keyword can refer in the callback function. If thisArg is omitted, undefined is used as the this value.  Returns​  U[]  Inherited from​  Array.flatMap  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2019.array.d.ts:64    ","version":"Next","tagName":"h3"},{"title":"forEach​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#foreach","content":" ▸ forEach(callbackfn, thisArg?): void  Performs the specified action for each element in an array.  Parameters​  Name\tType\tDescriptioncallbackfn\t(value: P, index: number, array: P[]) =&gt; void\tA function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. thisArg?\tany\tAn object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.  Returns​  void  Inherited from​  Array.forEach  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1456    ","version":"Next","tagName":"h3"},{"title":"host​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#host","content":" ▸ host(): P  Returns the host player  Returns​  P  Defined in​  boardzilla-core/src/player/collection.ts:63    ","version":"Next","tagName":"h3"},{"title":"inPositionOrder​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#inpositionorder","content":" ▸ inPositionOrder(): PlayerCollection&lt;P&gt;  Returns the array of players in the order of table positions. Does not alter the actual player order.  Returns​  PlayerCollection&lt;P&gt;  Defined in​  boardzilla-core/src/player/collection.ts:78    ","version":"Next","tagName":"h3"},{"title":"includes​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#includes","content":" ▸ includes(searchElement, fromIndex?): boolean  Determines whether an array includes a certain element, returning true or false as appropriate.  Parameters​  Name\tType\tDescriptionsearchElement\tP\tThe element to search for. fromIndex?\tnumber\tThe position in this array at which to begin searching for searchElement.  Returns​  boolean  Inherited from​  Array.includes  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2016.array.include.d.ts:25    ","version":"Next","tagName":"h3"},{"title":"indexOf​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#indexof","content":" ▸ indexOf(searchElement, fromIndex?): number  Returns the index of the first occurrence of a value in an array, or -1 if it is not present.  Parameters​  Name\tType\tDescriptionsearchElement\tP\tThe value to locate in the array. fromIndex?\tnumber\tThe array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.  Returns​  number  Inherited from​  Array.indexOf  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1417    ","version":"Next","tagName":"h3"},{"title":"join​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#join","content":" ▸ join(separator?): string  Adds all the elements of an array into a string, separated by the specified separator string.  Parameters​  Name\tType\tDescriptionseparator?\tstring\tA string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.  Returns​  string  Inherited from​  Array.join  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1360    ","version":"Next","tagName":"h3"},{"title":"keys​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#keys","content":" ▸ keys(): IterableIterator&lt;number&gt;  Returns an iterable of keys in the array  Returns​  IterableIterator&lt;number&gt;  Inherited from​  Array.keys  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:68    ","version":"Next","tagName":"h3"},{"title":"lastIndexOf​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#lastindexof","content":" ▸ lastIndexOf(searchElement, fromIndex?): number  Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.  Parameters​  Name\tType\tDescriptionsearchElement\tP\tThe value to locate in the array. fromIndex?\tnumber\tThe array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.  Returns​  number  Inherited from​  Array.lastIndexOf  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1423    ","version":"Next","tagName":"h3"},{"title":"map​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#map","content":" ▸ map&lt;U&gt;(callbackfn, thisArg?): U[]  Calls a defined callback function on each element of an array, and returns an array that contains the results.  Type parameters​  NameU  Parameters​  Name\tType\tDescriptioncallbackfn\t(value: P, index: number, array: P[]) =&gt; U\tA function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array. thisArg?\tany\tAn object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.  Returns​  U[]  Inherited from​  Array.map  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1462    ","version":"Next","tagName":"h3"},{"title":"next​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#next","content":" ▸ next(): P  Advance the current player to act to the next player based on player order.  Returns​  P  Defined in​  boardzilla-core/src/player/collection.ts:97    ","version":"Next","tagName":"h3"},{"title":"notCurrent​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#notcurrent","content":" ▸ notCurrent(): P[]  Returns the array of players that may not currently act.  Returns​  P[]  Defined in​  boardzilla-core/src/player/collection.ts:70    ","version":"Next","tagName":"h3"},{"title":"pop​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#pop","content":" ▸ pop(): undefined | P  Removes the last element from an array and returns it. If the array is empty, undefined is returned and the array is not modified.  Returns​  undefined | P  Inherited from​  Array.pop  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1338    ","version":"Next","tagName":"h3"},{"title":"push​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#push","content":" ▸ push(...items): number  Appends new elements to the end of an array, and returns the new length of the array.  Parameters​  Name\tType\tDescription...items\tP[]\tNew elements to add to the array.  Returns​  number  Inherited from​  Array.push  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1343    ","version":"Next","tagName":"h3"},{"title":"reduce​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#reduce","content":" ▸ reduce(callbackfn): P  Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.  Parameters​  Name\tType\tDescriptioncallbackfn\t(previousValue: P, currentValue: P, currentIndex: number, array: P[]) =&gt; P\tA function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.  Returns​  P  Inherited from​  Array.reduce  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1480  ▸ reduce&lt;U&gt;(callbackfn, initialValue): U  Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.  Type parameters​  NameU  Parameters​  Name\tType\tDescriptioncallbackfn\t(previousValue: U, currentValue: P, currentIndex: number, array: P[]) =&gt; U\tA function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array. initialValue\tU\tIf initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.  Returns​  U  Inherited from​  Array.reduce  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1487    ","version":"Next","tagName":"h3"},{"title":"reduceRight​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#reduceright","content":" ▸ reduceRight(callbackfn): P  Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.  Parameters​  Name\tType\tDescriptioncallbackfn\t(previousValue: P, currentValue: P, currentIndex: number, array: P[]) =&gt; P\tA function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.  Returns​  P  Inherited from​  Array.reduceRight  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1493  ▸ reduceRight&lt;U&gt;(callbackfn, initialValue): U  Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.  Type parameters​  NameU  Parameters​  Name\tType\tDescriptioncallbackfn\t(previousValue: U, currentValue: P, currentIndex: number, array: P[]) =&gt; U\tA function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array. initialValue\tU\tIf initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.  Returns​  U  Inherited from​  Array.reduceRight  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1500    ","version":"Next","tagName":"h3"},{"title":"reverse​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#reverse","content":" ▸ reverse(): P[]  Reverses the elements in an array in place. This method mutates the array and returns a reference to the same array.  Returns​  P[]  Inherited from​  Array.reverse  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1365    ","version":"Next","tagName":"h3"},{"title":"seatedNext​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#seatednext","content":" ▸ seatedNext(player, steps?): P  Return the player next to this player at the table.  Parameters​  Name\tType\tDefault value\tDescriptionplayer\tP\tundefined\t- steps\tnumber\t1\t1 = one step to the left, -1 = one step to the right, etc  Returns​  P  Defined in​  boardzilla-core/src/player/collection.ts:117    ","version":"Next","tagName":"h3"},{"title":"setCurrent​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#setcurrent","content":" ▸ setCurrent(players): void  Set the current player(s).  Parameters​  Name\tType\tDescriptionplayers\tnumber | number[] | P | P[]\tThe Player or table position of the player to act, or an array of either.  Returns​  void  Defined in​  boardzilla-core/src/player/collection.ts:88    ","version":"Next","tagName":"h3"},{"title":"shift​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#shift","content":" ▸ shift(): undefined | P  Removes the first element from an array and returns it. If the array is empty, undefined is returned and the array is not modified.  Returns​  undefined | P  Inherited from​  Array.shift  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1370    ","version":"Next","tagName":"h3"},{"title":"slice​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#slice","content":" ▸ slice(start?, end?): P[]  Returns a copy of a section of an array. For both start and end, a negative index can be used to indicate an offset from the end of the array. For example, -2 refers to the second to last element of the array.  Parameters​  Name\tType\tDescriptionstart?\tnumber\tThe beginning index of the specified portion of the array. If start is undefined, then the slice begins at index 0. end?\tnumber\tThe end index of the specified portion of the array. This is exclusive of the element at the index 'end'. If end is undefined, then the slice extends to the end of the array.  Returns​  P[]  Inherited from​  Array.slice  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1380    ","version":"Next","tagName":"h3"},{"title":"some​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#some","content":" ▸ some(predicate, thisArg?): boolean  Determines whether the specified callback function returns true for any element of an array.  Parameters​  Name\tType\tDescriptionpredicate\t(value: P, index: number, array: P[]) =&gt; unknown\tA function that accepts up to three arguments. The some method calls the predicate function for each element in the array until the predicate returns a value which is coercible to the Boolean value true, or until the end of the array. thisArg?\tany\tAn object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.  Returns​  boolean  Inherited from​  Array.some  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1450    ","version":"Next","tagName":"h3"},{"title":"sort​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#sort","content":" ▸ sort(compareFn?): this  Sorts an array in place. This method mutates the array and returns a reference to the same array.  Parameters​  Name\tType\tDescriptioncompareFn?\t(a: P, b: P) =&gt; number\tFunction used to determine the order of the elements. It is expected to return a negative value if the first argument is less than the second argument, zero if they're equal, and a positive value otherwise. If omitted, the elements are sorted in ascending, ASCII character order. ts [11,2,22,1].sort((a, b) =&gt; a - b)   Returns​  this  Inherited from​  Array.sort  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1391    ","version":"Next","tagName":"h3"},{"title":"sortBy​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#sortby","content":" ▸ sortBy(key, direction?): PlayerCollection&lt;P&gt;  Sorts the players by some means, changing the turn order.  Parameters​  Name\tType\tDescriptionkey\tSorter&lt;P&gt; | Sorter&lt;P&gt;[]\tA key of function for sorting, or a list of such. See Sorter direction?\t&quot;desc&quot; | &quot;asc&quot;\t&quot;asc&quot; to cause players to be sorted from lowest to highest, &quot;desc&quot; for highest to lower  Returns​  PlayerCollection&lt;P&gt;  Defined in​  boardzilla-core/src/player/collection.ts:140    ","version":"Next","tagName":"h3"},{"title":"splice​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#splice","content":" ▸ splice(start, deleteCount?): P[]  Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.  Parameters​  Name\tType\tDescriptionstart\tnumber\tThe zero-based location in the array from which to start removing elements. deleteCount?\tnumber\tThe number of elements to remove.  Returns​  P[]  An array containing the elements that were deleted.  Inherited from​  Array.splice  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1398  ▸ splice(start, deleteCount, ...items): P[]  Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.  Parameters​  Name\tType\tDescriptionstart\tnumber\tThe zero-based location in the array from which to start removing elements. deleteCount\tnumber\tThe number of elements to remove. ...items\tP[]\tElements to insert into the array in place of the deleted elements.  Returns​  P[]  An array containing the elements that were deleted.  Inherited from​  Array.splice  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1406    ","version":"Next","tagName":"h3"},{"title":"toLocaleString​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#tolocalestring","content":" ▸ toLocaleString(): string  Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.  Returns​  string  Inherited from​  Array.toLocaleString  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1333    ","version":"Next","tagName":"h3"},{"title":"toString​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#tostring","content":" ▸ toString(): string  Returns a string representation of an array.  Returns​  string  Inherited from​  Array.toString  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1329    ","version":"Next","tagName":"h3"},{"title":"turnOrderOf​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#turnorderof","content":" ▸ turnOrderOf(player): number  Returns the turn order of the given player, starting with 0. This is distinct from Player#position. Turn order can be altered during a game, whereas table position cannot.  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  number  Defined in​  boardzilla-core/src/player/collection.ts:126    ","version":"Next","tagName":"h3"},{"title":"unshift​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#unshift","content":" ▸ unshift(...items): number  Inserts new elements at the start of an array, and returns the new length of the array.  Parameters​  Name\tType\tDescription...items\tP[]\tElements to insert at the start of the array.  Returns​  number  Inherited from​  Array.unshift  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1411    ","version":"Next","tagName":"h3"},{"title":"values​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#values","content":" ▸ values(): IterableIterator&lt;P&gt;  Returns an iterable of values in the array  Returns​  IterableIterator&lt;P&gt;  Inherited from​  Array.values  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:73    ","version":"Next","tagName":"h3"},{"title":"from​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#from","content":" ▸ from&lt;T&gt;(arrayLike): T[]  Creates an array from an array-like object.  Type parameters​  NameT  Parameters​  Name\tType\tDescriptionarrayLike\tArrayLike&lt;T&gt;\tAn array-like object to convert to an array.  Returns​  T[]  Inherited from​  Array.from  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:70  ▸ from&lt;T, U&gt;(arrayLike, mapfn, thisArg?): U[]  Creates an array from an iterable object.  Type parameters​  NameT U  Parameters​  Name\tType\tDescriptionarrayLike\tArrayLike&lt;T&gt;\tAn array-like object to convert to an array. mapfn\t(v: T, k: number) =&gt; U\tA mapping function to call on every element of the array. thisArg?\tany\tValue of 'this' used to invoke the mapfn.  Returns​  U[]  Inherited from​  Array.from  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:78  ▸ from&lt;T&gt;(iterable): T[]  Creates an array from an iterable object.  Type parameters​  NameT  Parameters​  Name\tType\tDescriptioniterable\tIterable&lt;T&gt; | ArrayLike&lt;T&gt;\tAn iterable object to convert to an array.  Returns​  T[]  Inherited from​  Array.from  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:81  ▸ from&lt;T, U&gt;(iterable, mapfn, thisArg?): U[]  Creates an array from an iterable object.  Type parameters​  NameT U  Parameters​  Name\tType\tDescriptioniterable\tIterable&lt;T&gt; | ArrayLike&lt;T&gt;\tAn iterable object to convert to an array. mapfn\t(v: T, k: number) =&gt; U\tA mapping function to call on every element of the array. thisArg?\tany\tValue of 'this' used to invoke the mapfn.  Returns​  U[]  Inherited from​  Array.from  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:89    ","version":"Next","tagName":"h3"},{"title":"of​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#of","content":" ▸ of&lt;T&gt;(...items): T[]  Returns a new array from a set of elements.  Type parameters​  NameT  Parameters​  Name\tType\tDescription...items\tT[]\tA set of elements to include in the new array object.  Returns​  T[]  Inherited from​  Array.of  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:84  ","version":"Next","tagName":"h3"},{"title":"Structure​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#structure","content":" ","version":"Next","tagName":"h2"},{"title":"sortedBy​","type":1,"pageTitle":"Class: PlayerCollection<P>","url":"/api/classes/PlayerCollection#sortedby","content":" ▸ sortedBy(key, direction?): PlayerCollection&lt;P&gt;  Returns a copy of this collection sorted by some Sorter.  Parameters​  Name\tType\tDefault valuekey\tSorter&lt;P&gt; | Sorter&lt;P&gt;[]\tundefined direction\t&quot;desc&quot; | &quot;asc&quot;\t&quot;asc&quot;  Returns​  PlayerCollection&lt;P&gt;  Defined in​  boardzilla-core/src/player/collection.ts:159 ","version":"Next","tagName":"h3"},{"title":"Class: Action<P, A>","type":0,"sectionRef":"#","url":"/api/classes/Action","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#type-parameters","content":" Name\tTypeP\textends Player A\textends Record&lt;string, Argument&lt;P&gt;&gt; = NonNullable&lt;unknown&gt;  ","version":"Next","tagName":"h2"},{"title":"Methods​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#methods","content":" ","version":"Next","tagName":"h2"},{"title":"chooseFrom​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#choosefrom","content":" ▸ chooseFrom&lt;N, T&gt;(name, choices, options?): Action&lt;P, A &amp; { [key in string]: T }&gt;  Add a choice to this action from a list of options. These choices will be displayed as buttons in the UI.  Type parameters​  Name\tTypeN\textends string T\textends string | number | boolean | Player&lt;any, any&gt; | GameElement&lt;P, any&gt;  Parameters​  Name\tType\tDescriptionname\tN\tThe name of this choice. This name will be used in all functions that accept the player's choices choices\tT[] | Record&lt;string, T&gt; | (args: A) =&gt; T[] | Record&lt;string, T&gt;\tEither an array of choices or an object with a key-value pair of choices. Use the object style when you want player text to contain additional logic that you don't want to reference in the game logic, similiar to &lt;option value=&quot;key&quot;&gt;Some text&lt;/option&gt; in HTML. This can also be a function that returns the choice array/object. This function will accept arguments for each choice the player has made up to this point in the action. options?\tObject options.confirm?\tstring | [string, undefined | Record&lt;string, Argument&lt;P&gt;&gt; | (args: A &amp; { [key in string]: T }) =&gt; Record&lt;string, Argument&lt;P&gt;&gt;]\tA confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as message with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices, and returns the interpolation object. options.prompt?\tstring | (args: A) =&gt; string\tPrompt displayed to the user for this choice. options.skipIf?\t&quot;always&quot; | &quot;never&quot; | &quot;only-one&quot; | (args: A) =&gt; boolean\tOne of 'always', 'never' or 'only-one' or a function returning a boolean. (Default 'only-one'). - only-one: If there is only valid choice in the choices given, the game will skip this choice, prompting the player for subsequent choices, if any, or completing the action otherwise. - always: Rather than present this choice directly, the player will be prompted with choices from the next choice in the action for each possible choice here, essentially expanding the choices ahead of time to save the player a step. This option only has relevance if there are subsequent choices in the action. - never: Always present this choice, even if the choice is forced - function: A function that accepts all player choices up to this point and returns a boolean. If returning true, this choice will be skipped. This form is useful in the rare situations where the choice at the time may be meaningless, e.g. selecting from a set of identical tokens. In this case the game will make the choice for the player using the first viable option. options.validate?\t(args: A &amp; { [key in string]: T }) =&gt; undefined | string | boolean\tA function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit this choice. If a string is returned, this will display as the reason for disallowing these selections.  Returns​  Action&lt;P, A &amp; { [key in string]: T }&gt;  Example  action({ prompt: 'Choose color', }).chooseFrom( 'color', ['white', 'blue', 'red'], ).do( ({ color }) =&gt; ... color will be equal to the player-selected color ... ) // a more complex example: action({ prompt: 'Take resources', }).chooseFrom( 'resource', ['lumber', 'steel', 'oil'], { prompt: 'Select resource' } ).chooseFrom( // Use the functional style to include the resource choice in the text // Also use object style to have the value simply be &quot;high&quot; or &quot;low&quot; 'grade', resource =&gt; ({ high: `High grade ${resource}`, low: `Low grade ${resource}` }), { // A follow-up choice that doesn't apply to &quot;oil&quot; skipIf: ({ resource }) =&gt; resource === 'oil', // Add an 'are you sure?' message confirm: ['Buy {{grade}} grade {{resource}}?', ({ grade }) = ({ grade: grade.toUpperCase() })] } ).do ( ({ resource, grade }) =&gt; { // resource will equal 'lumber', 'steel' or 'oil' // grade will equal 'high' or 'low' } )   Defined in​  boardzilla-core/src/action/action.ts:406    ","version":"Next","tagName":"h3"},{"title":"chooseGroup​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#choosegroup","content":" ▸ chooseGroup&lt;R&gt;(choices, options?): Action&lt;P, ExpandGroup&lt;P, A, R&gt;&gt;  Create a multi-selection choice. These selections will be presented all at once as a form.  Type parameters​  Name\tTypeR\textends Group&lt;P&gt;  Parameters​  Name\tType\tDescriptionchoices\tR\tAn object containing the selections. This is a set of key-value pairs where each key is the name of the selection and each value is an array of options where the first array element is a string indicating the type of choice ('number', 'select', 'board', 'text') and subsequent elements contain the options for the appropriate choice function (chooseNumber, chooseFrom, chooseOnBoard or enterText). options?\tObject\t- options.confirm?\tstring | [string, undefined | Record&lt;string, Argument&lt;P&gt;&gt; | (args: ExpandGroup&lt;P, A, R&gt;) =&gt; Record&lt;string, Argument&lt;P&gt;&gt;]\tA confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as message with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices, and returns the interpolation object. options.validate?\t(args: ExpandGroup&lt;P, A, R&gt;) =&gt; undefined | string | boolean\tA function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit these choices. If a string is returned, this will display as the reason for disallowing these selections.  Returns​  Action&lt;P, ExpandGroup&lt;P, A, R&gt;&gt;  Example  action({ prompt: 'purchase' }).chooseGroup({ lumber: ['number', { min: 2 }], steel: ['number', { min: 2 }] }, { // may not purchase more than 10 total resource validate: ({ lumber, steel }) =&gt; lumber + steel &lt;= 10 });   Defined in​  boardzilla-core/src/action/action.ts:726    ","version":"Next","tagName":"h3"},{"title":"chooseNumber​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#choosenumber","content":" ▸ chooseNumber&lt;N&gt;(name, options?): Action&lt;P, A &amp; { [key in string]: number }&gt;  Add a numerical choice for this action. This will be presented with a number picker.  Type parameters​  Name\tTypeN\textends string  Parameters​  Name\tType\tDescriptionname\tN\tThe name of this choice. This name will be used in all functions that accept the player's choices options\tObject options.confirm?\tstring | [string, undefined | Record&lt;string, Argument&lt;P&gt;&gt; | (args: A &amp; { [key in string]: number }) =&gt; Record&lt;string, Argument&lt;P&gt;&gt;]\tA confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as message with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices, and returns the interpolation object. options.initial?\tnumber | (args: A) =&gt; number\tInitial value to display in the picker options.max?\tnumber | (args: A) =&gt; number\tMaximum allowed. Default Infinity options.min?\tnumber | (args: A) =&gt; number\tMinimum allowed. Default 1. options.prompt?\tstring | (args: A) =&gt; string\tPrompt displayed to the user for entering this number. options.skipIf?\t&quot;always&quot; | &quot;never&quot; | &quot;only-one&quot; | (args: A) =&gt; boolean\tOne of 'always', 'never' or 'only-one' or a function returning a boolean. (Default 'only-one'). - only-one: If there is only valid choice in the choices given, the game will skip this choice, prompting the player for subsequent choices, if any, or completing the action otherwise. - always: Rather than present this choice directly, the player will be prompted with choices from the next choice in the action for each possible choice here, essentially expanding the choices ahead of time to save the player a step. This option only has relevance if there are subsequent choices in the action. - never: Always present this choice, even if the choice is forced - function: A function that accepts all player choices up to this point and returns a boolean. If returning true, this choice will be skipped. This form is useful in the rare situations where the choice at the time may be meaningless, e.g. selecting from a set of identical tokens. In this case the game will make the choice for the player using the first viable option. options.validate?\t(args: A &amp; { [key in string]: number }) =&gt; undefined | string | boolean\tA function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit this choice. If a string is returned, this will display as the reason for disallowing these selections.  Returns​  Action&lt;P, A &amp; { [key in string]: number }&gt;  Example  player =&gt; action({ prompt: 'Buy resources', }).chooseNumber( 'amount', { min: 5, max: 10 // select from 5 - 10 }).do( ({ amount }) =&gt; player.resource += amount );   Defined in​  boardzilla-core/src/action/action.ts:521    ","version":"Next","tagName":"h3"},{"title":"chooseOnBoard​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#chooseonboard","content":" ▸ chooseOnBoard&lt;T, N&gt;(name, choices, options?): Action&lt;P, A &amp; { [key in string]: T }&gt;  Add a choice to this action using the board. Users will click on the board to make their choice.  Type parameters​  Name\tTypeT\textends GameElement&lt;P, any&gt; N\textends string  Parameters​  Name\tType\tDescriptionname\tN\tThe name of this choice. This name will be used in all functions that accept the player's choices choices\tBoardQueryMulti&lt;P, T, A&gt;\tElements that may be chosen. This can either be an array of elements or a function returning an array, if the choices depend on previous choices. If using a function, it will accept arguments for each choice the player has made up to this point in the action. options?\tObject options.confirm?\tstring | [string, undefined | Record&lt;string, Argument&lt;P&gt;&gt; | (args: A &amp; { [key in string]: T }) =&gt; Record&lt;string, Argument&lt;P&gt;&gt;]\tA confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as message with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices up to this point, including this one, and returns the interpolation object. options.max?\tundefined\tIf supplied, the choice is for a set of elements and the maximum allowed is max. options.min?\tundefined\tIf supplied, the choice is for a set of elements and the minimum required is min. options.number?\tundefined\tIf supplied, the choice is for a set of exactly number elements. For example, if the player is being asked to pass 3 cards from their hand, the choices should be to the cards in their hand and the number to 3. options.prompt?\tstring | (args: A) =&gt; string\tPrompt displayed to the user for this choice. options.skipIf?\t&quot;always&quot; | &quot;never&quot; | &quot;only-one&quot; | (args: A) =&gt; boolean\tOne of 'always', 'never' or 'only-one' or a function returning a boolean. (Default 'only-one'). - only-one: If there is only valid choice in the choices given, the game will skip this choice, prompting the player for subsequent choices, if any, or completing the action otherwise. - always: Rather than present this choice directly, the player will be prompted with choices from the next choice in the action for each possible choice here, essentially expanding the choices ahead of time to save the player a step. This option only has relevance if there are subsequent choices in the action. - never: Always present this choice, even if the choice is forced - function: A function that accepts all player choices up to this point and returns a boolean. If returning true, this choice will be skipped. This form is useful in the rare situations where the choice at the time may be meaningless, e.g. selecting from a set of identical tokens. In this case the game will make the choice for the player using the first viable option. options.validate?\t(args: A &amp; { [key in string]: T | T[] }) =&gt; undefined | string | boolean\tA function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit this choice. If a string is returned, this will display as the reason for disallowing these selections.  Returns​  Action&lt;P, A &amp; { [key in string]: T }&gt;  Example  player =&gt; action({ prompt: 'Mulligan', }).chooseOnBoard( 'cards', player.allMy(Card), { prompt: 'Mulligan 1-3 cards', // select 1-3 cards from hand min: 1, max: 3 ).do( ({ cards }) =&gt; { // `cards` is an ElementCollection of the cards selected cards.putInto($.discard); $.deck.firstN(cards.length, Card).putInto(player.my('hand')!); } )   Defined in​  boardzilla-core/src/action/action.ts:613    ","version":"Next","tagName":"h3"},{"title":"do​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#do","content":" ▸ do(move): Action&lt;P, A&gt;  Add behavior to this action to alter game state. After adding the choices to an action, calling do causes Boardzilla to use the player choices to actually do something with those choices. Call this method after all the methods for player choices so that the choices are properly available to the do function.  Parameters​  Name\tType\tDescriptionmove\t(args: A) =&gt; any\tThe action to perform. This function accepts one argument with key-value pairs for each choice added to the action using the provided names.  Returns​  Action&lt;P, A&gt;  Example  player =&gt; action({ prompt: 'Take resources', }).chooseFrom({ 'resource', ['lumber', 'steel'], { prompt: 'Select resource' } }).chooseNumber( 'amount', { prompt: 'Select amount', max: 3 }).do(({ resource, amount }) =&gt; { // the choices are automatically passed in with their proper type board.firstN(amount, Resource, {resource}).putInto( player.my('stockPile') ); })   Defined in​  boardzilla-core/src/action/action.ts:279    ","version":"Next","tagName":"h3"},{"title":"enterText​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#entertext","content":" ▸ enterText&lt;N&gt;(name, options?): Action&lt;P, A &amp; { [key in string]: string }&gt;  Prompt the user for text entry. Use this in games where players submit text, like word-guessing games.  Type parameters​  Name\tTypeN\textends string  Parameters​  Name\tType\tDescriptionname\tN\tThe name of this text input. This name will be used in all functions that accept the player's choices options?\tObject options.initial?\tstring | (args: A) =&gt; string\tDefault text that can appear initially before a user types. options.prompt?\tstring | (args: A) =&gt; string\tPrompt displayed to the user for entering this text. options.regexp?\tRegExp\t- options.validate?\t(args: A &amp; { [key in string]: string }) =&gt; undefined | string | boolean\tA function that takes an object of key-value pairs for all player choices and returns a boolean. If false, the game will not allow the player to submit this text. If a string is returned, this will display as the reason for disallowing this text.  Returns​  Action&lt;P, A &amp; { [key in string]: string }&gt;  Example  action({ prompt: 'Guess a word', }).enterText({ 'guess', { prompt: 'Your guess', } }).message( guess =&gt; `{{player}} guessed ${guess}` })   Defined in​  boardzilla-core/src/action/action.ts:449    ","version":"Next","tagName":"h3"},{"title":"message​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#message","content":" ▸ message(message, args?): Action&lt;P, A&gt;  Add a message to this action that will be broadcast in the chat. Call this method after all the methods for player choices so that the choices are properly available to the message function. However the message should be called before or after any do behaviour depending on whether you want the message to reflect the game state before or after the move is performs. The action's message and do functions can be intermixed in this way to generate messages at different points int the execution of a move.  Parameters​  Name\tType\tDescriptionmessage\tstring\tThe message to send. This can contain interpolated strings with double braces just as when calling Game#message directly. However when using this method, the player performing the action, plus any choices made in the action are automatically made available. args?\tRecord&lt;string, Argument&lt;P&gt;&gt; | (a: A) =&gt; Record&lt;string, Argument&lt;P&gt;&gt;\tIf additional strings are needed in the message besides 'player' and the player choices, these can be specified here. This can also be specified as a function that accepts the player choices and returns key-value pairs of strings for interpolation.  Returns​  Action&lt;P, A&gt;  Example  action({ prompt: 'Say something', }).enterText({ 'message', }).message( '{{player}} said {{message}}' // no args needed ).message( `I said, {{player}} said {{loudMessage}}, ({ message }) =&gt; ({ loudMessage: message.toUpperCase() }) )   Defined in​  boardzilla-core/src/action/action.ts:316    ","version":"Next","tagName":"h3"},{"title":"move​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#move","content":" ▸ move(piece, into): Action&lt;P, A&gt;  Indicates that this action does a move with the selected elements. This is almost the equivalent of calling Action#do and adding a putInto command, except that the game will also permit the UI to allow a mouse drag for the move.  Parameters​  Name\tType\tDescriptionpiece\tkeyof A | Piece&lt;any, any&gt;\tA Piece to move or the name of the piece selection in this action into\tGameElement&lt;any, any&gt; | keyof A\tA GameElement to move into or the name of the destination selection in this action. player =&gt; action({ prompt: 'Discard a card from hand' }).chooseOnBoard( 'card', player.my(Card) ).move( 'card', $.discard )  Returns​  Action&lt;P, A&gt;  Defined in​  boardzilla-core/src/action/action.ts:771    ","version":"Next","tagName":"h3"},{"title":"placePiece​","type":1,"pageTitle":"Class: Action<P, A>","url":"/api/classes/Action#placepiece","content":" ▸ placePiece(piece, into, options?): Action&lt;P, A &amp; { __placement__: [number, number] }&gt;  Add a placement selection to this action. This will be presented as a piece that players can move into the desired location, snapping to the grid of the destination as the player moves.  Parameters​  Name\tType\tDescriptionpiece\tkeyof A | Piece&lt;any, any&gt;\tA Piece to move or the name of the piece selection in this action into\tGameElement&lt;any, any&gt;\tA GameElement to move into options?\tObject\t- options.confirm?\tstring | [string, undefined | Record&lt;string, Argument&lt;P&gt;&gt; | (args: A) =&gt; Record&lt;string, Argument&lt;P&gt;&gt;]\tA confirmation message that the player will always see before commiting this choice. This can be useful to present additional information about the consequences of this choice, or simply to force the player to hit a button with a clear message. This can be a simple string, or a 2-celled array in the same form as message with a string message and a set of key-value pairs for string interpolation, optionally being a function that takes an object of key-value pairs for all player choices, and returns the interpolation object. player =&gt; action({ prompt: 'Place your tile' }).chooseOnBoard( 'tile', player.my(Tile) ).placePiece( 'tile', $.map, { confirm: ({ position }) =&gt; [ 'Place tile into row {{row}} and column {{column}}?', position ] }) options.prompt?\tstring | (args: A) =&gt; string\t- options.validate?\t(args: A) =&gt; undefined | string | boolean\tA function that takes an object of key-value pairs for all player choices and returns a boolean. The position selected will be available under the special choice name &quot;placement&quot;. If false, the game will not allow the player to submit these choices. If a string is returned, this will display as the reason for disallowing these selections.  Returns​  Action&lt;P, A &amp; { __placement__: [number, number] }&gt;  Defined in​  boardzilla-core/src/action/action.ts:820 ","version":"Next","tagName":"h3"},{"title":"Class: Die<P, B>","type":0,"sectionRef":"#","url":"/api/classes/Die","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#type-parameters","content":" Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  ","version":"Next","tagName":"h2"},{"title":"Hierarchy​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#hierarchy","content":" Piece&lt;P, B&gt; ↳ Die  ","version":"Next","tagName":"h2"},{"title":"Other​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#other","content":" ","version":"Next","tagName":"h2"},{"title":"_ui​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#_ui","content":" • _ui: ElementUI&lt;Die&lt;P, B&gt;&gt;  UI  Inherited from​  Piece._ui  Defined in​  boardzilla-core/src/board/element.ts:1030  ","version":"Next","tagName":"h3"},{"title":"Queries​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#queries","content":" ","version":"Next","tagName":"h2"},{"title":"name​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#name","content":" • name: string  Element name, used to distinguish elements. Elements with the same name are generally considered indistibuishable. Names are also used for easy searching of elements.  Inherited from​  Piece.name  Defined in​  boardzilla-core/src/board/element.ts:258    ","version":"Next","tagName":"h3"},{"title":"player​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#player","content":" • Optional player: P  Player with which this element is identified. This does not affect behaviour but will mark the element as mine in queries in the context of this player.  Inherited from​  Piece.player  Defined in​  boardzilla-core/src/board/element.ts:266    ","version":"Next","tagName":"h3"},{"title":"mine​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#mine","content":" • get mine(): boolean  Whether this element belongs to the &quot;current&quot; player. A player is considered the current player if this is called in the context of an action taken by a given player, or if this is called from a given player's view of the board. It is an error to call this method when not in a player context. When querying for elements using ElementFinder such asall and first, mine is available as a search key that accepts a value of true/false  Returns​  boolean  Inherited from​  Piece.mine  Defined in​  boardzilla-core/src/board/element.ts:674    ","version":"Next","tagName":"h3"},{"title":"adjacencies​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#adjacencies","content":" ▸ adjacencies&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Find all elements adjacent based on row/column placement or based on this element having connections created by Space#connectTo. Uses the same parameters as GameElement#all  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  Piece.adjacencies  Defined in​  boardzilla-core/src/board/element.ts:568    ","version":"Next","tagName":"h3"},{"title":"all​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#all","content":" ▸ all&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds all elements within this element recursively that match the arguments provided.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;F&gt;\tOptionally provide a class as the first argument as a class filter. This will only match elements which are instances of the provided class ...finders\tElementFinder&lt;F&gt;[]\tAll other parameters are filters. See ElementFinder for more information.  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found. The collection is typed to ElementCollection&lt;className&gt; if one was provided.  Inherited from​  Piece.all  Defined in​  boardzilla-core/src/board/element.ts:370    ","version":"Next","tagName":"h3"},{"title":"bottom​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#bottom","content":" ▸ bottom&lt;F&gt;(className, ...finders): undefined | F  Alias for last  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  Piece.bottom  Defined in​  boardzilla-core/src/board/element.ts:487    ","version":"Next","tagName":"h3"},{"title":"bottomN​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#bottomn","content":" ▸ bottomN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for lastN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  Piece.bottomN  Defined in​  boardzilla-core/src/board/element.ts:501    ","version":"Next","tagName":"h3"},{"title":"container​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#container","content":" ▸ container&lt;T&gt;(className?): undefined | T  Returns this elements parent.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName?\tElementClass&lt;T&gt;\tIf provided, searches up the parent tree to find the first matching element. E.g. if a Token is placed on a Card in a players Tableau. calling token.container(Tableau) can be used to find the grandparent.  Returns​  undefined | T  Inherited from​  Piece.container  Defined in​  boardzilla-core/src/board/element.ts:620    ","version":"Next","tagName":"h3"},{"title":"first​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#first","content":" ▸ first&lt;F&gt;(className, ...finders): undefined | F  Finds the first element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Inherited from​  Piece.first  Defined in​  boardzilla-core/src/board/element.ts:386    ","version":"Next","tagName":"h3"},{"title":"firstN​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#firstn","content":" ▸ firstN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the first n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Inherited from​  Piece.firstN  Defined in​  boardzilla-core/src/board/element.ts:406    ","version":"Next","tagName":"h3"},{"title":"has​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#has","content":" ▸ has&lt;F&gt;(className, ...finders): boolean  Return whether any element within this element recursively matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  boolean  Inherited from​  Piece.has  Defined in​  boardzilla-core/src/board/element.ts:535    ","version":"Next","tagName":"h3"},{"title":"last​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#last","content":" ▸ last&lt;F&gt;(className, ...finders): undefined | F  Finds the last element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Inherited from​  Piece.last  Defined in​  boardzilla-core/src/board/element.ts:423    ","version":"Next","tagName":"h3"},{"title":"lastN​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#lastn","content":" ▸ lastN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the last n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Inherited from​  Piece.lastN  Defined in​  boardzilla-core/src/board/element.ts:443    ","version":"Next","tagName":"h3"},{"title":"others​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#others","content":" ▸ others&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds &quot;sibling&quot; elements (elements that are directly inside the parent of this element) that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  Piece.others  Defined in​  boardzilla-core/src/board/element.ts:517    ","version":"Next","tagName":"h3"},{"title":"top​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#top","content":" ▸ top&lt;F&gt;(className, ...finders): undefined | F  Alias for first  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  Piece.top  Defined in​  boardzilla-core/src/board/element.ts:458    ","version":"Next","tagName":"h3"},{"title":"topN​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#topn","content":" ▸ topN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for firstN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  Piece.topN  Defined in​  boardzilla-core/src/board/element.ts:472  ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#querying","content":" ","version":"Next","tagName":"h2"},{"title":"atPosition​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#atposition","content":" ▸ atPosition(«destructured»): undefined | GameElement&lt;P, B&gt;  Returns the element at row and column within this element  Parameters​  Name\tType«destructured»\tObject › column\tnumber › row\tnumber  Returns​  undefined | GameElement&lt;P, B&gt;  Inherited from​  Piece.atPosition  Defined in​  boardzilla-core/src/board/element.ts:928  ","version":"Next","tagName":"h3"},{"title":"Structure​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#structure","content":" ","version":"Next","tagName":"h2"},{"title":"constructor​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#constructor","content":" • new Die&lt;P, B&gt;(ctx): Die&lt;P, B&gt;  Do not use the constructor directly. Instead Call GameElement#create or GameElement#createMany on the element in which you want to create a new element.  Type parameters​  Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  Parameters​  Name\tTypectx\tPartial&lt;ElementContext&lt;P, any&gt;&gt;  Returns​  Die&lt;P, B&gt;  Inherited from​  Piece.constructor  Defined in​  boardzilla-core/src/board/element.ts:319    ","version":"Next","tagName":"h3"},{"title":"board​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#board","content":" • board: B  The Board to which this element belongs  Inherited from​  Piece.board  Defined in​  boardzilla-core/src/board/element.ts:276    ","version":"Next","tagName":"h3"},{"title":"game​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#game","content":" • game: Game&lt;P, B&gt;  A reference to the Game  Inherited from​  Piece.game  Defined in​  boardzilla-core/src/board/element.ts:282    ","version":"Next","tagName":"h3"},{"title":"owner​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#owner","content":" • get owner(): undefined | P  The player that owns this element, or the first element that contains this element searching up through the parent hierarchy. This is related to, but different than player. E.g. if a standard playing card is in a player's hand, typically the hand.player will be assigned to that player but the card itself would not have a player. In this case the card.owner() will equal the player in whose hand the card is placed.  Returns​  undefined | P  Inherited from​  Piece.owner  Defined in​  boardzilla-core/src/board/element.ts:660    ","version":"Next","tagName":"h3"},{"title":"adjacentTo​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#adjacentto","content":" ▸ adjacentTo(element): boolean  If this element is adjacent to some other element, based on row/column placement or based on this element having a connection created by Space#connectTo.  Parameters​  Name\tTypeelement\tGameElement&lt;P, B&gt;  Returns​  boolean  Inherited from​  Piece.adjacentTo  Defined in​  boardzilla-core/src/board/element.ts:551    ","version":"Next","tagName":"h3"},{"title":"create​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#create","content":" ▸ create&lt;T&gt;(className, name, attributes?): T  Create an element inside this element. This can only be called during the game setup (see createGame. Any game elements that are required must be created before the game starts. Elements that only appear later in the game can be created inside the Board#pile or made invisible.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;T&gt;\tClass to create. This class must be included in the elementClasses in createGame. name\tstring\tSets name attributes?\tPartial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt;\tSets any attributes of the class that are defined in your own class that extend Space, Piece, or Board. Can also include player.  Returns​  T  Example  deck.create(Card, 'ace-of-hearts', { suit: 'H', value: '1' });   Inherited from​  Piece.create  Defined in​  boardzilla-core/src/board/element.ts:798    ","version":"Next","tagName":"h3"},{"title":"createMany​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#createmany","content":" ▸ createMany&lt;T&gt;(n, className, name, attributes?): ElementCollection&lt;T&gt;  Create n elements inside this element of the same class. This can only be called during the game setup (see createGame. Any game elements that are required must be created before the game starts. Elements that only appear later in the game can be created inside the Board#pileor made invisible.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tNumber to create className\tElementClass&lt;T&gt;\tClass to create. This class must be included in the elementClasses in createGame. name\tstring\tSets name attributes?\tPartial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt; | (n: number) =&gt; Partial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt;\tSets any attributes of the class that are defined in your own class that extend Space, Piece, or Board. Can also include player. If a function is supplied here, a single number argument will be passed with the number of the added element, starting with 1.  Returns​  ElementCollection&lt;T&gt;  Inherited from​  Piece.createMany  Defined in​  boardzilla-core/src/board/element.ts:836    ","version":"Next","tagName":"h3"},{"title":"isDescendantOf​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#isdescendantof","content":" ▸ isDescendantOf(el): boolean  Whether this element has the given element in its parent hierarchy  Parameters​  Name\tTypeel\tGameElement&lt;any, any&gt;  Returns​  boolean  Inherited from​  Piece.isDescendantOf  Defined in​  boardzilla-core/src/board/element.ts:936    ","version":"Next","tagName":"h3"},{"title":"isEmpty​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#isempty","content":" ▸ isEmpty(): boolean  Returns whether this element has no elements placed within it.  Returns​  boolean  Inherited from​  Piece.isEmpty  Defined in​  boardzilla-core/src/board/element.ts:631    ","version":"Next","tagName":"h3"},{"title":"putInto​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#putinto","content":" ▸ putInto(to, options?): void  Move this piece into another element. This triggers any onEnter callbacks in the destination.  Parameters​  Name\tType\tDescriptionto\tGameElement&lt;any, any&gt;\tDestination element options?\tObject\t- options.fromBottom?\tnumber\tPlace the piece into a specific numbered position counting from the last element options.fromTop?\tnumber\tPlace the piece into a specific numbered position counting from the first element options.placement?\tObject\tPlace the piece into a specific row and column of the container's grid. options.placement.column\tnumber\t- options.placement.row\tnumber\t- options.position?\tnumber\tPlace the piece into a specific numbered position relative to the other elements in this space. Positive numbers count from the beginning. Negative numbers count from the end.  Returns​  void  Inherited from​  Piece.putInto  Defined in​  boardzilla-core/src/board/piece.ts:29    ","version":"Next","tagName":"h3"},{"title":"remove​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#remove","content":" ▸ remove(): void  Remove this piece from the playing area and place it into Board#pile  Returns​  void  Inherited from​  Piece.remove  Defined in​  boardzilla-core/src/board/piece.ts:58    ","version":"Next","tagName":"h3"},{"title":"setOrder​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#setorder","content":" ▸ setOrder(order): void  Set this class to use a different ordering style.  Parameters​  Name\tType\tDescriptionorder\tundefined | &quot;normal&quot; | &quot;stacking&quot;\tordering style - &quot;normal&quot;: Elements placed into this element are put at the end of the list (default) - &quot;stacking&quot;: Elements placed into this element are put at the beginning of the list. This is prefered for elements that stack. E.g. if a stack of cards has order set to stacking the first method will return the last card placed in the stack, rather than the first one placed in the stack.  Returns​  void  Inherited from​  Piece.setOrder  Defined in​  boardzilla-core/src/board/element.ts:608    ","version":"Next","tagName":"h3"},{"title":"shuffle​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#shuffle","content":" ▸ shuffle(): void  Re-orders the elements directly contained within this element randomly.  Returns​  void  Inherited from​  Piece.shuffle  Defined in​  boardzilla-core/src/board/element.ts:647    ","version":"Next","tagName":"h3"},{"title":"sortBy​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#sortby","content":" ▸ sortBy&lt;E&gt;(key, direction?): ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Sorts the elements directly contained within this element by some Sorter.  Type parameters​  Name\tTypeE\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypekey\tSorter&lt;E&gt; | Sorter&lt;E&gt;[] direction?\t&quot;desc&quot; | &quot;asc&quot;  Returns​  ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Inherited from​  Piece.sortBy  Defined in​  boardzilla-core/src/board/element.ts:639    ","version":"Next","tagName":"h3"},{"title":"toString​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#tostring","content":" ▸ toString(): string  String used for representng this element in game messages when the object is passed directly, e.g. when taking the choice directly from a chooseOnBoard choice.  Returns​  string  Inherited from​  Piece.toString  Defined in​  boardzilla-core/src/board/element.ts:350  ","version":"Next","tagName":"h3"},{"title":"UI​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#ui","content":" ","version":"Next","tagName":"h2"},{"title":"appearance​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#appearance","content":" ▸ appearance(appearance): void  Define the appearance of this element. Any values provided override previous ones. See also ElementCollection#appearance  Parameters​  Name\tType\tDescriptionappearance\tObject\tPossible values are: appearance.aspectRatio?\tnumber\tThe aspect ratio for this element. This value is a ratio of width over height. All layouts defined in layout will respect this aspect ratio. appearance.className?\tstring\tA class name to add to the dom element appearance.connections?\tObject\tIf the elements immediately within this element are connected using Space#connectTo, this makes those connections visible as connecting lines. Providing a label will place a label over top of this line by calling the provided function with the distance of the connection specified in Space#connectTo and using the retured JSX. If labelScale is provided, the label is scaled by this amount. appearance.connections.color?\tstring\t- appearance.connections.fill?\tstring\t- appearance.connections.label?\t(__namedParameters: { distance: number ; from: Space&lt;any, any&gt; ; to: Space&lt;any, any&gt; }) =&gt; ReactNode\t- appearance.connections.labelScale?\tnumber\t- appearance.connections.style?\t&quot;solid&quot; | &quot;double&quot;\t- appearance.connections.thickness?\tnumber\t- appearance.effects?\t{ attributes: Partial&lt;Pick&lt;Die&lt;P, B&gt;, undefined | &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | &quot;current&quot; | &quot;flip&quot; | &quot;sides&quot;&gt;&gt; ; className: string }[]\tProvides a CSS class that will be applied to this element if its attributes change to match the provided ones. appearance.render?\tfalse | (el: Die&lt;P, B&gt;) =&gt; null | Element\tA function that takes this element as its only argument and returns JSX for the element. See /styling.md for more on usage. appearance.tooltip?\tfalse | (el: Die&lt;P, B&gt;) =&gt; ReactNode\t- appearance.zoomable?\tboolean | (el: Die&lt;P, B&gt;) =&gt; boolean\tSets the element to be zoomable to full screen using Boardzilla's zoom feature.  Returns​  void  Inherited from​  Piece.appearance  Defined in​  boardzilla-core/src/board/element.ts:1654    ","version":"Next","tagName":"h3"},{"title":"layout​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#layout","content":" ▸ layout&lt;T&gt;(this, applyTo, attributes): void  Apply a layout to some of the elements directly contained within this element. See also ElementCollection#layout  Type parameters​  Name\tTypeT\textends Die&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionthis\tT\t- applyTo\tstring | GameElement&lt;any, any&gt; | ElementCollection&lt;GameElement&lt;any, any&gt;&gt; | ElementClass&lt;any&gt;\tWhich elements this layout applies to. Provided value can be: - A specific GameElement - The name of an element - A specific set of elements (ElementCollection) - A class of elements If multiple layout declarations would apply to the same element, only one will be used. The order of specificity is as above. If a class is used and mutiple apply, the more specific class will be used. attributes\tPartial&lt;LayoutAttributes&lt;T&gt;&gt;\tA list of attributes describing the layout. All units of measurement are percentages of this elements width and height from 0-100, unless otherwise noted (See margin and gap)  Returns​  void  Inherited from​  Piece.layout  Defined in​  boardzilla-core/src/board/element.ts:1100  ","version":"Next","tagName":"h3"},{"title":"Visibility​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#visibility","content":" ","version":"Next","tagName":"h2"},{"title":"hideFrom​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#hidefrom","content":" ▸ hideFrom(...player): void  Hide this element from the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Inherited from​  Piece.hideFrom  Defined in​  boardzilla-core/src/board/element.ts:728    ","version":"Next","tagName":"h3"},{"title":"hideFromAll​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#hidefromall","content":" ▸ hideFromAll(): void  Hide this element from all players  Returns​  void  Inherited from​  Piece.hideFromAll  Defined in​  boardzilla-core/src/board/element.ts:719    ","version":"Next","tagName":"h3"},{"title":"isVisible​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#isvisible","content":" ▸ isVisible(): boolean  Returns whether this element is visible to the current player. Can only be called when in a player context, during an action taken by a player or while the board is viewed by a given player.  Returns​  boolean  Inherited from​  Piece.isVisible  Defined in​  boardzilla-core/src/board/element.ts:762    ","version":"Next","tagName":"h3"},{"title":"isVisibleTo​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#isvisibleto","content":" ▸ isVisibleTo(player): boolean  Returns whether this element is visible to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  boolean  Inherited from​  Piece.isVisibleTo  Defined in​  boardzilla-core/src/board/element.ts:746    ","version":"Next","tagName":"h3"},{"title":"showOnlyTo​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#showonlyto","content":" ▸ showOnlyTo(player): void  Show this element only to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  void  Inherited from​  Piece.showOnlyTo  Defined in​  boardzilla-core/src/board/element.ts:691    ","version":"Next","tagName":"h3"},{"title":"showTo​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#showto","content":" ▸ showTo(...player): void  Show this element to the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Inherited from​  Piece.showTo  Defined in​  boardzilla-core/src/board/element.ts:704    ","version":"Next","tagName":"h3"},{"title":"showToAll​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#showtoall","content":" ▸ showToAll(): void  Show this element to all players  Returns​  void  Inherited from​  Piece.showToAll  Defined in​  boardzilla-core/src/board/element.ts:683    ","version":"Next","tagName":"h3"},{"title":"revealWhenHidden​","type":1,"pageTitle":"Class: Die<P, B>","url":"/api/classes/Die#revealwhenhidden","content":" ▸ revealWhenHidden&lt;T&gt;(this, ...attrs): void  Provide list of attributes that remain visible even when these elements are not visible to players. E.g. In a game with multiple card decks with different backs, identified by Card#deck, the identity of the card when face-down is hidden, but the deck it belongs to is not, since the card art on the back would identify the deck. In this case callingCard.revealWhenHidden('deck') will cause all attributes other than 'deck' to be hidden when the card is face down, while still revealing which deck it is.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypethis\tElementClass&lt;T&gt; ...attrs\tstring &amp; keyof T[]  Returns​  void  Inherited from​  Piece.revealWhenHidden  Defined in​  boardzilla-core/src/board/element.ts:778 ","version":"Next","tagName":"h3"},{"title":"Markdown Features","type":0,"sectionRef":"#","url":"/game/markdown-features","content":"","keywords":"","version":"Next"},{"title":"Front Matter​","type":1,"pageTitle":"Markdown Features","url":"/game/markdown-features#front-matter","content":" Markdown documents have metadata at the top called Front Matter:  my-doc.md --- id: my-doc-id title: My document title description: My document description slug: /my-custom-url --- ## Markdown heading Markdown text with [links](./hello.md)   ","version":"Next","tagName":"h2"},{"title":"Images​","type":1,"pageTitle":"Markdown Features","url":"/game/markdown-features#images","content":" Regular Markdown images are supported.  ","version":"Next","tagName":"h2"},{"title":"Code Blocks​","type":1,"pageTitle":"Markdown Features","url":"/game/markdown-features#code-blocks","content":" Markdown code blocks are supported with Syntax highlighting.  src/components/HelloDocusaurus.js function HelloDocusaurus() { return ( &lt;h1&gt;Hello, Docusaurus!&lt;/h1&gt; ) }   src/components/HelloDocusaurus.js function HelloDocusaurus() { return &lt;h1&gt;Hello, Docusaurus!&lt;/h1&gt;; }   ","version":"Next","tagName":"h2"},{"title":"Admonitions​","type":1,"pageTitle":"Markdown Features","url":"/game/markdown-features#admonitions","content":" Docusaurus has a special syntax to create admonitions and callouts:  My tip Use this awesome feature option ::: Take care This action is dangerous My tip Use this awesome feature option  Take care This action is dangerous  ","version":"Next","tagName":"h2"},{"title":"MDX and React Components​","type":1,"pageTitle":"Markdown Features","url":"/game/markdown-features#mdx-and-react-components","content":" MDX can make your documentation more interactive and allows using any React components inside Markdown:  export const Highlight = ({children, color}) =&gt; ( &lt;span style={{ backgroundColor: color, borderRadius: '20px', color: '#fff', padding: '10px', cursor: 'pointer', }} onClick={() =&gt; { alert(`You clicked the color ${color} with label ${children}`) }}&gt; {children} &lt;/span&gt; ); This is &lt;Highlight color=&quot;#25c2a0&quot;&gt;Docusaurus green&lt;/Highlight&gt; ! This is &lt;Highlight color=&quot;#1877F2&quot;&gt;Facebook blue&lt;/Highlight&gt; !     This is Docusaurus green !  This is Facebook blue ! ","version":"Next","tagName":"h2"},{"title":"Class: GameElement<P, B>","type":0,"sectionRef":"#","url":"/api/classes/GameElement","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#type-parameters","content":" Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  ","version":"Next","tagName":"h2"},{"title":"Hierarchy​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#hierarchy","content":" GameElement ↳ Space ↳ Piece  ","version":"Next","tagName":"h2"},{"title":"Other​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#other","content":" ","version":"Next","tagName":"h2"},{"title":"_ui​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#_ui","content":" • _ui: ElementUI&lt;GameElement&lt;P, B&gt;&gt;  UI  Defined in​  boardzilla-core/src/board/element.ts:1030  ","version":"Next","tagName":"h3"},{"title":"Queries​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#queries","content":" ","version":"Next","tagName":"h2"},{"title":"name​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#name","content":" • name: string  Element name, used to distinguish elements. Elements with the same name are generally considered indistibuishable. Names are also used for easy searching of elements.  Defined in​  boardzilla-core/src/board/element.ts:258    ","version":"Next","tagName":"h3"},{"title":"player​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#player","content":" • Optional player: P  Player with which this element is identified. This does not affect behaviour but will mark the element as mine in queries in the context of this player.  Defined in​  boardzilla-core/src/board/element.ts:266    ","version":"Next","tagName":"h3"},{"title":"mine​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#mine","content":" • get mine(): boolean  Whether this element belongs to the &quot;current&quot; player. A player is considered the current player if this is called in the context of an action taken by a given player, or if this is called from a given player's view of the board. It is an error to call this method when not in a player context. When querying for elements using ElementFinder such asall and first, mine is available as a search key that accepts a value of true/false  Returns​  boolean  Defined in​  boardzilla-core/src/board/element.ts:674    ","version":"Next","tagName":"h3"},{"title":"adjacencies​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#adjacencies","content":" ▸ adjacencies&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Find all elements adjacent based on row/column placement or based on this element having connections created by Space#connectTo. Uses the same parameters as GameElement#all  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Defined in​  boardzilla-core/src/board/element.ts:568    ","version":"Next","tagName":"h3"},{"title":"all​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#all","content":" ▸ all&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds all elements within this element recursively that match the arguments provided.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;F&gt;\tOptionally provide a class as the first argument as a class filter. This will only match elements which are instances of the provided class ...finders\tElementFinder&lt;F&gt;[]\tAll other parameters are filters. See ElementFinder for more information.  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found. The collection is typed to ElementCollection&lt;className&gt; if one was provided.  Defined in​  boardzilla-core/src/board/element.ts:370    ","version":"Next","tagName":"h3"},{"title":"bottom​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#bottom","content":" ▸ bottom&lt;F&gt;(className, ...finders): undefined | F  Alias for last  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Defined in​  boardzilla-core/src/board/element.ts:487    ","version":"Next","tagName":"h3"},{"title":"bottomN​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#bottomn","content":" ▸ bottomN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for lastN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Defined in​  boardzilla-core/src/board/element.ts:501    ","version":"Next","tagName":"h3"},{"title":"container​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#container","content":" ▸ container&lt;T&gt;(className?): undefined | T  Returns this elements parent.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName?\tElementClass&lt;T&gt;\tIf provided, searches up the parent tree to find the first matching element. E.g. if a Token is placed on a Card in a players Tableau. calling token.container(Tableau) can be used to find the grandparent.  Returns​  undefined | T  Defined in​  boardzilla-core/src/board/element.ts:620    ","version":"Next","tagName":"h3"},{"title":"first​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#first","content":" ▸ first&lt;F&gt;(className, ...finders): undefined | F  Finds the first element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Defined in​  boardzilla-core/src/board/element.ts:386    ","version":"Next","tagName":"h3"},{"title":"firstN​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#firstn","content":" ▸ firstN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the first n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Defined in​  boardzilla-core/src/board/element.ts:406    ","version":"Next","tagName":"h3"},{"title":"has​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#has","content":" ▸ has&lt;F&gt;(className, ...finders): boolean  Return whether any element within this element recursively matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  boolean  Defined in​  boardzilla-core/src/board/element.ts:535    ","version":"Next","tagName":"h3"},{"title":"last​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#last","content":" ▸ last&lt;F&gt;(className, ...finders): undefined | F  Finds the last element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Defined in​  boardzilla-core/src/board/element.ts:423    ","version":"Next","tagName":"h3"},{"title":"lastN​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#lastn","content":" ▸ lastN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the last n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Defined in​  boardzilla-core/src/board/element.ts:443    ","version":"Next","tagName":"h3"},{"title":"others​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#others","content":" ▸ others&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds &quot;sibling&quot; elements (elements that are directly inside the parent of this element) that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Defined in​  boardzilla-core/src/board/element.ts:517    ","version":"Next","tagName":"h3"},{"title":"top​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#top","content":" ▸ top&lt;F&gt;(className, ...finders): undefined | F  Alias for first  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Defined in​  boardzilla-core/src/board/element.ts:458    ","version":"Next","tagName":"h3"},{"title":"topN​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#topn","content":" ▸ topN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for firstN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Defined in​  boardzilla-core/src/board/element.ts:472  ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#querying","content":" ","version":"Next","tagName":"h2"},{"title":"atPosition​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#atposition","content":" ▸ atPosition(«destructured»): undefined | GameElement&lt;P, B&gt;  Returns the element at row and column within this element  Parameters​  Name\tType«destructured»\tObject › column\tnumber › row\tnumber  Returns​  undefined | GameElement&lt;P, B&gt;  Defined in​  boardzilla-core/src/board/element.ts:928  ","version":"Next","tagName":"h3"},{"title":"Structure​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#structure","content":" ","version":"Next","tagName":"h2"},{"title":"constructor​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#constructor","content":" • new GameElement&lt;P, B&gt;(ctx): GameElement&lt;P, B&gt;  Do not use the constructor directly. Instead Call GameElement#create or GameElement#createMany on the element in which you want to create a new element.  Type parameters​  Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  Parameters​  Name\tTypectx\tPartial&lt;ElementContext&lt;P, any&gt;&gt;  Returns​  GameElement&lt;P, B&gt;  Defined in​  boardzilla-core/src/board/element.ts:319    ","version":"Next","tagName":"h3"},{"title":"board​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#board","content":" • board: B  The Board to which this element belongs  Defined in​  boardzilla-core/src/board/element.ts:276    ","version":"Next","tagName":"h3"},{"title":"game​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#game","content":" • game: Game&lt;P, B&gt;  A reference to the Game  Defined in​  boardzilla-core/src/board/element.ts:282    ","version":"Next","tagName":"h3"},{"title":"owner​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#owner","content":" • get owner(): undefined | P  The player that owns this element, or the first element that contains this element searching up through the parent hierarchy. This is related to, but different than player. E.g. if a standard playing card is in a player's hand, typically the hand.player will be assigned to that player but the card itself would not have a player. In this case the card.owner() will equal the player in whose hand the card is placed.  Returns​  undefined | P  Defined in​  boardzilla-core/src/board/element.ts:660    ","version":"Next","tagName":"h3"},{"title":"adjacentTo​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#adjacentto","content":" ▸ adjacentTo(element): boolean  If this element is adjacent to some other element, based on row/column placement or based on this element having a connection created by Space#connectTo.  Parameters​  Name\tTypeelement\tGameElement&lt;P, B&gt;  Returns​  boolean  Defined in​  boardzilla-core/src/board/element.ts:551    ","version":"Next","tagName":"h3"},{"title":"create​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#create","content":" ▸ create&lt;T&gt;(className, name, attributes?): T  Create an element inside this element. This can only be called during the game setup (see createGame. Any game elements that are required must be created before the game starts. Elements that only appear later in the game can be created inside the Board#pile or made invisible.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;T&gt;\tClass to create. This class must be included in the elementClasses in createGame. name\tstring\tSets name attributes?\tPartial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt;\tSets any attributes of the class that are defined in your own class that extend Space, Piece, or Board. Can also include player.  Returns​  T  Example  deck.create(Card, 'ace-of-hearts', { suit: 'H', value: '1' });   Defined in​  boardzilla-core/src/board/element.ts:798    ","version":"Next","tagName":"h3"},{"title":"createMany​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#createmany","content":" ▸ createMany&lt;T&gt;(n, className, name, attributes?): ElementCollection&lt;T&gt;  Create n elements inside this element of the same class. This can only be called during the game setup (see createGame. Any game elements that are required must be created before the game starts. Elements that only appear later in the game can be created inside the Board#pileor made invisible.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tNumber to create className\tElementClass&lt;T&gt;\tClass to create. This class must be included in the elementClasses in createGame. name\tstring\tSets name attributes?\tPartial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt; | (n: number) =&gt; Partial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt;\tSets any attributes of the class that are defined in your own class that extend Space, Piece, or Board. Can also include player. If a function is supplied here, a single number argument will be passed with the number of the added element, starting with 1.  Returns​  ElementCollection&lt;T&gt;  Defined in​  boardzilla-core/src/board/element.ts:836    ","version":"Next","tagName":"h3"},{"title":"isDescendantOf​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#isdescendantof","content":" ▸ isDescendantOf(el): boolean  Whether this element has the given element in its parent hierarchy  Parameters​  Name\tTypeel\tGameElement&lt;any, any&gt;  Returns​  boolean  Defined in​  boardzilla-core/src/board/element.ts:936    ","version":"Next","tagName":"h3"},{"title":"isEmpty​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#isempty","content":" ▸ isEmpty(): boolean  Returns whether this element has no elements placed within it.  Returns​  boolean  Defined in​  boardzilla-core/src/board/element.ts:631    ","version":"Next","tagName":"h3"},{"title":"setOrder​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#setorder","content":" ▸ setOrder(order): void  Set this class to use a different ordering style.  Parameters​  Name\tType\tDescriptionorder\tundefined | &quot;normal&quot; | &quot;stacking&quot;\tordering style - &quot;normal&quot;: Elements placed into this element are put at the end of the list (default) - &quot;stacking&quot;: Elements placed into this element are put at the beginning of the list. This is prefered for elements that stack. E.g. if a stack of cards has order set to stacking the first method will return the last card placed in the stack, rather than the first one placed in the stack.  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:608    ","version":"Next","tagName":"h3"},{"title":"shuffle​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#shuffle","content":" ▸ shuffle(): void  Re-orders the elements directly contained within this element randomly.  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:647    ","version":"Next","tagName":"h3"},{"title":"sortBy​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#sortby","content":" ▸ sortBy&lt;E&gt;(key, direction?): ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Sorts the elements directly contained within this element by some Sorter.  Type parameters​  Name\tTypeE\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypekey\tSorter&lt;E&gt; | Sorter&lt;E&gt;[] direction?\t&quot;desc&quot; | &quot;asc&quot;  Returns​  ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Defined in​  boardzilla-core/src/board/element.ts:639    ","version":"Next","tagName":"h3"},{"title":"toString​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#tostring","content":" ▸ toString(): string  String used for representng this element in game messages when the object is passed directly, e.g. when taking the choice directly from a chooseOnBoard choice.  Returns​  string  Defined in​  boardzilla-core/src/board/element.ts:350  ","version":"Next","tagName":"h3"},{"title":"UI​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#ui","content":" ","version":"Next","tagName":"h2"},{"title":"appearance​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#appearance","content":" ▸ appearance(appearance): void  Define the appearance of this element. Any values provided override previous ones. See also ElementCollection#appearance  Parameters​  Name\tType\tDescriptionappearance\tObject\tPossible values are: appearance.aspectRatio?\tnumber\tThe aspect ratio for this element. This value is a ratio of width over height. All layouts defined in layout will respect this aspect ratio. appearance.className?\tstring\tA class name to add to the dom element appearance.connections?\tObject\tIf the elements immediately within this element are connected using Space#connectTo, this makes those connections visible as connecting lines. Providing a label will place a label over top of this line by calling the provided function with the distance of the connection specified in Space#connectTo and using the retured JSX. If labelScale is provided, the label is scaled by this amount. appearance.connections.color?\tstring\t- appearance.connections.fill?\tstring\t- appearance.connections.label?\t(__namedParameters: { distance: number ; from: Space&lt;any, any&gt; ; to: Space&lt;any, any&gt; }) =&gt; ReactNode\t- appearance.connections.labelScale?\tnumber\t- appearance.connections.style?\t&quot;solid&quot; | &quot;double&quot;\t- appearance.connections.thickness?\tnumber\t- appearance.effects?\t{ attributes: Partial&lt;Pick&lt;GameElement&lt;P, B&gt;, undefined | &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot;&gt;&gt; ; className: string }[]\tProvides a CSS class that will be applied to this element if its attributes change to match the provided ones. appearance.render?\tfalse | (el: GameElement&lt;P, B&gt;) =&gt; null | Element\tA function that takes this element as its only argument and returns JSX for the element. See /styling.md for more on usage. appearance.tooltip?\tfalse | (el: GameElement&lt;P, B&gt;) =&gt; ReactNode\t- appearance.zoomable?\tboolean | (el: GameElement&lt;P, B&gt;) =&gt; boolean\tSets the element to be zoomable to full screen using Boardzilla's zoom feature.  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:1654    ","version":"Next","tagName":"h3"},{"title":"layout​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#layout","content":" ▸ layout&lt;T&gt;(this, applyTo, attributes): void  Apply a layout to some of the elements directly contained within this element. See also ElementCollection#layout  Type parameters​  Name\tTypeT\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionthis\tT\t- applyTo\tstring | GameElement&lt;any, any&gt; | ElementCollection&lt;GameElement&lt;any, any&gt;&gt; | ElementClass&lt;any&gt;\tWhich elements this layout applies to. Provided value can be: - A specific GameElement - The name of an element - A specific set of elements (ElementCollection) - A class of elements If multiple layout declarations would apply to the same element, only one will be used. The order of specificity is as above. If a class is used and mutiple apply, the more specific class will be used. attributes\tPartial&lt;LayoutAttributes&lt;T&gt;&gt;\tA list of attributes describing the layout. All units of measurement are percentages of this elements width and height from 0-100, unless otherwise noted (See margin and gap)  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:1100  ","version":"Next","tagName":"h3"},{"title":"Visibility​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#visibility","content":" ","version":"Next","tagName":"h2"},{"title":"hideFrom​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#hidefrom","content":" ▸ hideFrom(...player): void  Hide this element from the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:728    ","version":"Next","tagName":"h3"},{"title":"hideFromAll​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#hidefromall","content":" ▸ hideFromAll(): void  Hide this element from all players  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:719    ","version":"Next","tagName":"h3"},{"title":"isVisible​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#isvisible","content":" ▸ isVisible(): boolean  Returns whether this element is visible to the current player. Can only be called when in a player context, during an action taken by a player or while the board is viewed by a given player.  Returns​  boolean  Defined in​  boardzilla-core/src/board/element.ts:762    ","version":"Next","tagName":"h3"},{"title":"isVisibleTo​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#isvisibleto","content":" ▸ isVisibleTo(player): boolean  Returns whether this element is visible to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  boolean  Defined in​  boardzilla-core/src/board/element.ts:746    ","version":"Next","tagName":"h3"},{"title":"showOnlyTo​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#showonlyto","content":" ▸ showOnlyTo(player): void  Show this element only to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:691    ","version":"Next","tagName":"h3"},{"title":"showTo​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#showto","content":" ▸ showTo(...player): void  Show this element to the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:704    ","version":"Next","tagName":"h3"},{"title":"showToAll​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#showtoall","content":" ▸ showToAll(): void  Show this element to all players  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:683    ","version":"Next","tagName":"h3"},{"title":"revealWhenHidden​","type":1,"pageTitle":"Class: GameElement<P, B>","url":"/api/classes/GameElement#revealwhenhidden","content":" ▸ revealWhenHidden&lt;T&gt;(this, ...attrs): void  Provide list of attributes that remain visible even when these elements are not visible to players. E.g. In a game with multiple card decks with different backs, identified by Card#deck, the identity of the card when face-down is hidden, but the deck it belongs to is not, since the card art on the back would identify the deck. In this case callingCard.revealWhenHidden('deck') will cause all attributes other than 'deck' to be hidden when the card is face down, while still revealing which deck it is.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypethis\tElementClass&lt;T&gt; ...attrs\tstring &amp; keyof T[]  Returns​  void  Defined in​  boardzilla-core/src/board/element.ts:778 ","version":"Next","tagName":"h3"},{"title":"Class: Piece<P, B>","type":0,"sectionRef":"#","url":"/api/classes/Piece","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#type-parameters","content":" Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  ","version":"Next","tagName":"h2"},{"title":"Hierarchy​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#hierarchy","content":" GameElement&lt;P, B&gt; ↳ Piece ↳↳ Die  ","version":"Next","tagName":"h2"},{"title":"Other​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#other","content":" ","version":"Next","tagName":"h2"},{"title":"_ui​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#_ui","content":" • _ui: ElementUI&lt;Piece&lt;P, B&gt;&gt;  UI  Inherited from​  GameElement._ui  Defined in​  boardzilla-core/src/board/element.ts:1030  ","version":"Next","tagName":"h3"},{"title":"Queries​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#queries","content":" ","version":"Next","tagName":"h2"},{"title":"name​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#name","content":" • name: string  Element name, used to distinguish elements. Elements with the same name are generally considered indistibuishable. Names are also used for easy searching of elements.  Inherited from​  GameElement.name  Defined in​  boardzilla-core/src/board/element.ts:258    ","version":"Next","tagName":"h3"},{"title":"player​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#player","content":" • Optional player: P  Player with which this element is identified. This does not affect behaviour but will mark the element as mine in queries in the context of this player.  Inherited from​  GameElement.player  Defined in​  boardzilla-core/src/board/element.ts:266    ","version":"Next","tagName":"h3"},{"title":"mine​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#mine","content":" • get mine(): boolean  Whether this element belongs to the &quot;current&quot; player. A player is considered the current player if this is called in the context of an action taken by a given player, or if this is called from a given player's view of the board. It is an error to call this method when not in a player context. When querying for elements using ElementFinder such asall and first, mine is available as a search key that accepts a value of true/false  Returns​  boolean  Inherited from​  GameElement.mine  Defined in​  boardzilla-core/src/board/element.ts:674    ","version":"Next","tagName":"h3"},{"title":"adjacencies​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#adjacencies","content":" ▸ adjacencies&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Find all elements adjacent based on row/column placement or based on this element having connections created by Space#connectTo. Uses the same parameters as GameElement#all  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  GameElement.adjacencies  Defined in​  boardzilla-core/src/board/element.ts:568    ","version":"Next","tagName":"h3"},{"title":"all​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#all","content":" ▸ all&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds all elements within this element recursively that match the arguments provided.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;F&gt;\tOptionally provide a class as the first argument as a class filter. This will only match elements which are instances of the provided class ...finders\tElementFinder&lt;F&gt;[]\tAll other parameters are filters. See ElementFinder for more information.  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found. The collection is typed to ElementCollection&lt;className&gt; if one was provided.  Inherited from​  GameElement.all  Defined in​  boardzilla-core/src/board/element.ts:370    ","version":"Next","tagName":"h3"},{"title":"bottom​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#bottom","content":" ▸ bottom&lt;F&gt;(className, ...finders): undefined | F  Alias for last  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  GameElement.bottom  Defined in​  boardzilla-core/src/board/element.ts:487    ","version":"Next","tagName":"h3"},{"title":"bottomN​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#bottomn","content":" ▸ bottomN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for lastN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  GameElement.bottomN  Defined in​  boardzilla-core/src/board/element.ts:501    ","version":"Next","tagName":"h3"},{"title":"container​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#container","content":" ▸ container&lt;T&gt;(className?): undefined | T  Returns this elements parent.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName?\tElementClass&lt;T&gt;\tIf provided, searches up the parent tree to find the first matching element. E.g. if a Token is placed on a Card in a players Tableau. calling token.container(Tableau) can be used to find the grandparent.  Returns​  undefined | T  Inherited from​  GameElement.container  Defined in​  boardzilla-core/src/board/element.ts:620    ","version":"Next","tagName":"h3"},{"title":"first​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#first","content":" ▸ first&lt;F&gt;(className, ...finders): undefined | F  Finds the first element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Inherited from​  GameElement.first  Defined in​  boardzilla-core/src/board/element.ts:386    ","version":"Next","tagName":"h3"},{"title":"firstN​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#firstn","content":" ▸ firstN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the first n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Inherited from​  GameElement.firstN  Defined in​  boardzilla-core/src/board/element.ts:406    ","version":"Next","tagName":"h3"},{"title":"has​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#has","content":" ▸ has&lt;F&gt;(className, ...finders): boolean  Return whether any element within this element recursively matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  boolean  Inherited from​  GameElement.has  Defined in​  boardzilla-core/src/board/element.ts:535    ","version":"Next","tagName":"h3"},{"title":"last​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#last","content":" ▸ last&lt;F&gt;(className, ...finders): undefined | F  Finds the last element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Inherited from​  GameElement.last  Defined in​  boardzilla-core/src/board/element.ts:423    ","version":"Next","tagName":"h3"},{"title":"lastN​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#lastn","content":" ▸ lastN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the last n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Inherited from​  GameElement.lastN  Defined in​  boardzilla-core/src/board/element.ts:443    ","version":"Next","tagName":"h3"},{"title":"others​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#others","content":" ▸ others&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds &quot;sibling&quot; elements (elements that are directly inside the parent of this element) that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  GameElement.others  Defined in​  boardzilla-core/src/board/element.ts:517    ","version":"Next","tagName":"h3"},{"title":"top​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#top","content":" ▸ top&lt;F&gt;(className, ...finders): undefined | F  Alias for first  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  GameElement.top  Defined in​  boardzilla-core/src/board/element.ts:458    ","version":"Next","tagName":"h3"},{"title":"topN​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#topn","content":" ▸ topN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for firstN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  GameElement.topN  Defined in​  boardzilla-core/src/board/element.ts:472  ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#querying","content":" ","version":"Next","tagName":"h2"},{"title":"atPosition​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#atposition","content":" ▸ atPosition(«destructured»): undefined | GameElement&lt;P, B&gt;  Returns the element at row and column within this element  Parameters​  Name\tType«destructured»\tObject › column\tnumber › row\tnumber  Returns​  undefined | GameElement&lt;P, B&gt;  Inherited from​  GameElement.atPosition  Defined in​  boardzilla-core/src/board/element.ts:928  ","version":"Next","tagName":"h3"},{"title":"Structure​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#structure","content":" ","version":"Next","tagName":"h2"},{"title":"constructor​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#constructor","content":" • new Piece&lt;P, B&gt;(ctx): Piece&lt;P, B&gt;  Do not use the constructor directly. Instead Call GameElement#create or GameElement#createMany on the element in which you want to create a new element.  Type parameters​  Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  Parameters​  Name\tTypectx\tPartial&lt;ElementContext&lt;P, any&gt;&gt;  Returns​  Piece&lt;P, B&gt;  Inherited from​  GameElement.constructor  Defined in​  boardzilla-core/src/board/element.ts:319    ","version":"Next","tagName":"h3"},{"title":"board​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#board","content":" • board: B  The Board to which this element belongs  Inherited from​  GameElement.board  Defined in​  boardzilla-core/src/board/element.ts:276    ","version":"Next","tagName":"h3"},{"title":"game​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#game","content":" • game: Game&lt;P, B&gt;  A reference to the Game  Inherited from​  GameElement.game  Defined in​  boardzilla-core/src/board/element.ts:282    ","version":"Next","tagName":"h3"},{"title":"owner​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#owner","content":" • get owner(): undefined | P  The player that owns this element, or the first element that contains this element searching up through the parent hierarchy. This is related to, but different than player. E.g. if a standard playing card is in a player's hand, typically the hand.player will be assigned to that player but the card itself would not have a player. In this case the card.owner() will equal the player in whose hand the card is placed.  Returns​  undefined | P  Inherited from​  GameElement.owner  Defined in​  boardzilla-core/src/board/element.ts:660    ","version":"Next","tagName":"h3"},{"title":"adjacentTo​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#adjacentto","content":" ▸ adjacentTo(element): boolean  If this element is adjacent to some other element, based on row/column placement or based on this element having a connection created by Space#connectTo.  Parameters​  Name\tTypeelement\tGameElement&lt;P, B&gt;  Returns​  boolean  Inherited from​  GameElement.adjacentTo  Defined in​  boardzilla-core/src/board/element.ts:551    ","version":"Next","tagName":"h3"},{"title":"create​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#create","content":" ▸ create&lt;T&gt;(className, name, attributes?): T  Create an element inside this element. This can only be called during the game setup (see createGame. Any game elements that are required must be created before the game starts. Elements that only appear later in the game can be created inside the Board#pile or made invisible.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;T&gt;\tClass to create. This class must be included in the elementClasses in createGame. name\tstring\tSets name attributes?\tPartial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt;\tSets any attributes of the class that are defined in your own class that extend Space, Piece, or Board. Can also include player.  Returns​  T  Example  deck.create(Card, 'ace-of-hearts', { suit: 'H', value: '1' });   Inherited from​  GameElement.create  Defined in​  boardzilla-core/src/board/element.ts:798    ","version":"Next","tagName":"h3"},{"title":"createMany​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#createmany","content":" ▸ createMany&lt;T&gt;(n, className, name, attributes?): ElementCollection&lt;T&gt;  Create n elements inside this element of the same class. This can only be called during the game setup (see createGame. Any game elements that are required must be created before the game starts. Elements that only appear later in the game can be created inside the Board#pileor made invisible.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tNumber to create className\tElementClass&lt;T&gt;\tClass to create. This class must be included in the elementClasses in createGame. name\tstring\tSets name attributes?\tPartial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt; | (n: number) =&gt; Partial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt;\tSets any attributes of the class that are defined in your own class that extend Space, Piece, or Board. Can also include player. If a function is supplied here, a single number argument will be passed with the number of the added element, starting with 1.  Returns​  ElementCollection&lt;T&gt;  Inherited from​  GameElement.createMany  Defined in​  boardzilla-core/src/board/element.ts:836    ","version":"Next","tagName":"h3"},{"title":"isDescendantOf​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#isdescendantof","content":" ▸ isDescendantOf(el): boolean  Whether this element has the given element in its parent hierarchy  Parameters​  Name\tTypeel\tGameElement&lt;any, any&gt;  Returns​  boolean  Inherited from​  GameElement.isDescendantOf  Defined in​  boardzilla-core/src/board/element.ts:936    ","version":"Next","tagName":"h3"},{"title":"isEmpty​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#isempty","content":" ▸ isEmpty(): boolean  Returns whether this element has no elements placed within it.  Returns​  boolean  Inherited from​  GameElement.isEmpty  Defined in​  boardzilla-core/src/board/element.ts:631    ","version":"Next","tagName":"h3"},{"title":"putInto​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#putinto","content":" ▸ putInto(to, options?): void  Move this piece into another element. This triggers any onEnter callbacks in the destination.  Parameters​  Name\tType\tDescriptionto\tGameElement&lt;any, any&gt;\tDestination element options?\tObject\t- options.fromBottom?\tnumber\tPlace the piece into a specific numbered position counting from the last element options.fromTop?\tnumber\tPlace the piece into a specific numbered position counting from the first element options.placement?\tObject\tPlace the piece into a specific row and column of the container's grid. options.placement.column\tnumber\t- options.placement.row\tnumber\t- options.position?\tnumber\tPlace the piece into a specific numbered position relative to the other elements in this space. Positive numbers count from the beginning. Negative numbers count from the end.  Returns​  void  Defined in​  boardzilla-core/src/board/piece.ts:29    ","version":"Next","tagName":"h3"},{"title":"remove​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#remove","content":" ▸ remove(): void  Remove this piece from the playing area and place it into Board#pile  Returns​  void  Defined in​  boardzilla-core/src/board/piece.ts:58    ","version":"Next","tagName":"h3"},{"title":"setOrder​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#setorder","content":" ▸ setOrder(order): void  Set this class to use a different ordering style.  Parameters​  Name\tType\tDescriptionorder\tundefined | &quot;normal&quot; | &quot;stacking&quot;\tordering style - &quot;normal&quot;: Elements placed into this element are put at the end of the list (default) - &quot;stacking&quot;: Elements placed into this element are put at the beginning of the list. This is prefered for elements that stack. E.g. if a stack of cards has order set to stacking the first method will return the last card placed in the stack, rather than the first one placed in the stack.  Returns​  void  Inherited from​  GameElement.setOrder  Defined in​  boardzilla-core/src/board/element.ts:608    ","version":"Next","tagName":"h3"},{"title":"shuffle​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#shuffle","content":" ▸ shuffle(): void  Re-orders the elements directly contained within this element randomly.  Returns​  void  Inherited from​  GameElement.shuffle  Defined in​  boardzilla-core/src/board/element.ts:647    ","version":"Next","tagName":"h3"},{"title":"sortBy​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#sortby","content":" ▸ sortBy&lt;E&gt;(key, direction?): ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Sorts the elements directly contained within this element by some Sorter.  Type parameters​  Name\tTypeE\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypekey\tSorter&lt;E&gt; | Sorter&lt;E&gt;[] direction?\t&quot;desc&quot; | &quot;asc&quot;  Returns​  ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Inherited from​  GameElement.sortBy  Defined in​  boardzilla-core/src/board/element.ts:639    ","version":"Next","tagName":"h3"},{"title":"toString​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#tostring","content":" ▸ toString(): string  String used for representng this element in game messages when the object is passed directly, e.g. when taking the choice directly from a chooseOnBoard choice.  Returns​  string  Inherited from​  GameElement.toString  Defined in​  boardzilla-core/src/board/element.ts:350  ","version":"Next","tagName":"h3"},{"title":"UI​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#ui","content":" ","version":"Next","tagName":"h2"},{"title":"appearance​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#appearance","content":" ▸ appearance(appearance): void  Define the appearance of this element. Any values provided override previous ones. See also ElementCollection#appearance  Parameters​  Name\tType\tDescriptionappearance\tObject\tPossible values are: appearance.aspectRatio?\tnumber\tThe aspect ratio for this element. This value is a ratio of width over height. All layouts defined in layout will respect this aspect ratio. appearance.className?\tstring\tA class name to add to the dom element appearance.connections?\tObject\tIf the elements immediately within this element are connected using Space#connectTo, this makes those connections visible as connecting lines. Providing a label will place a label over top of this line by calling the provided function with the distance of the connection specified in Space#connectTo and using the retured JSX. If labelScale is provided, the label is scaled by this amount. appearance.connections.color?\tstring\t- appearance.connections.fill?\tstring\t- appearance.connections.label?\t(__namedParameters: { distance: number ; from: Space&lt;any, any&gt; ; to: Space&lt;any, any&gt; }) =&gt; ReactNode\t- appearance.connections.labelScale?\tnumber\t- appearance.connections.style?\t&quot;solid&quot; | &quot;double&quot;\t- appearance.connections.thickness?\tnumber\t- appearance.effects?\t{ attributes: Partial&lt;Pick&lt;Piece&lt;P, B&gt;, undefined | &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot;&gt;&gt; ; className: string }[]\tProvides a CSS class that will be applied to this element if its attributes change to match the provided ones. appearance.render?\tfalse | (el: Piece&lt;P, B&gt;) =&gt; null | Element\tA function that takes this element as its only argument and returns JSX for the element. See /styling.md for more on usage. appearance.tooltip?\tfalse | (el: Piece&lt;P, B&gt;) =&gt; ReactNode\t- appearance.zoomable?\tboolean | (el: Piece&lt;P, B&gt;) =&gt; boolean\tSets the element to be zoomable to full screen using Boardzilla's zoom feature.  Returns​  void  Inherited from​  GameElement.appearance  Defined in​  boardzilla-core/src/board/element.ts:1654    ","version":"Next","tagName":"h3"},{"title":"layout​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#layout","content":" ▸ layout&lt;T&gt;(this, applyTo, attributes): void  Apply a layout to some of the elements directly contained within this element. See also ElementCollection#layout  Type parameters​  Name\tTypeT\textends Piece&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionthis\tT\t- applyTo\tstring | GameElement&lt;any, any&gt; | ElementCollection&lt;GameElement&lt;any, any&gt;&gt; | ElementClass&lt;any&gt;\tWhich elements this layout applies to. Provided value can be: - A specific GameElement - The name of an element - A specific set of elements (ElementCollection) - A class of elements If multiple layout declarations would apply to the same element, only one will be used. The order of specificity is as above. If a class is used and mutiple apply, the more specific class will be used. attributes\tPartial&lt;LayoutAttributes&lt;T&gt;&gt;\tA list of attributes describing the layout. All units of measurement are percentages of this elements width and height from 0-100, unless otherwise noted (See margin and gap)  Returns​  void  Inherited from​  GameElement.layout  Defined in​  boardzilla-core/src/board/element.ts:1100  ","version":"Next","tagName":"h3"},{"title":"Visibility​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#visibility","content":" ","version":"Next","tagName":"h2"},{"title":"hideFrom​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#hidefrom","content":" ▸ hideFrom(...player): void  Hide this element from the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Inherited from​  GameElement.hideFrom  Defined in​  boardzilla-core/src/board/element.ts:728    ","version":"Next","tagName":"h3"},{"title":"hideFromAll​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#hidefromall","content":" ▸ hideFromAll(): void  Hide this element from all players  Returns​  void  Inherited from​  GameElement.hideFromAll  Defined in​  boardzilla-core/src/board/element.ts:719    ","version":"Next","tagName":"h3"},{"title":"isVisible​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#isvisible","content":" ▸ isVisible(): boolean  Returns whether this element is visible to the current player. Can only be called when in a player context, during an action taken by a player or while the board is viewed by a given player.  Returns​  boolean  Inherited from​  GameElement.isVisible  Defined in​  boardzilla-core/src/board/element.ts:762    ","version":"Next","tagName":"h3"},{"title":"isVisibleTo​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#isvisibleto","content":" ▸ isVisibleTo(player): boolean  Returns whether this element is visible to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  boolean  Inherited from​  GameElement.isVisibleTo  Defined in​  boardzilla-core/src/board/element.ts:746    ","version":"Next","tagName":"h3"},{"title":"showOnlyTo​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#showonlyto","content":" ▸ showOnlyTo(player): void  Show this element only to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  void  Inherited from​  GameElement.showOnlyTo  Defined in​  boardzilla-core/src/board/element.ts:691    ","version":"Next","tagName":"h3"},{"title":"showTo​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#showto","content":" ▸ showTo(...player): void  Show this element to the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Inherited from​  GameElement.showTo  Defined in​  boardzilla-core/src/board/element.ts:704    ","version":"Next","tagName":"h3"},{"title":"showToAll​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#showtoall","content":" ▸ showToAll(): void  Show this element to all players  Returns​  void  Inherited from​  GameElement.showToAll  Defined in​  boardzilla-core/src/board/element.ts:683    ","version":"Next","tagName":"h3"},{"title":"revealWhenHidden​","type":1,"pageTitle":"Class: Piece<P, B>","url":"/api/classes/Piece#revealwhenhidden","content":" ▸ revealWhenHidden&lt;T&gt;(this, ...attrs): void  Provide list of attributes that remain visible even when these elements are not visible to players. E.g. In a game with multiple card decks with different backs, identified by Card#deck, the identity of the card when face-down is hidden, but the deck it belongs to is not, since the card art on the back would identify the deck. In this case callingCard.revealWhenHidden('deck') will cause all attributes other than 'deck' to be hidden when the card is face down, while still revealing which deck it is.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypethis\tElementClass&lt;T&gt; ...attrs\tstring &amp; keyof T[]  Returns​  void  Inherited from​  GameElement.revealWhenHidden  Defined in​  boardzilla-core/src/board/element.ts:778 ","version":"Next","tagName":"h3"},{"title":"Manage Docs Versions","type":0,"sectionRef":"#","url":"/interface/manage-docs-versions","content":"","keywords":"","version":"Next"},{"title":"Create a docs version​","type":1,"pageTitle":"Manage Docs Versions","url":"/interface/manage-docs-versions#create-a-docs-version","content":" Release a version 1.0 of your project:  npm run docusaurus docs:version 1.0   The docs folder is copied into versioned_docs/version-1.0 and versions.json is created.  Your docs now have 2 versions:  1.0 at http://localhost:3000/docs/ for the version 1.0 docscurrent at http://localhost:3000/docs/next/ for the upcoming, unreleased docs  ","version":"Next","tagName":"h2"},{"title":"Add a Version Dropdown​","type":1,"pageTitle":"Manage Docs Versions","url":"/interface/manage-docs-versions#add-a-version-dropdown","content":" To navigate seamlessly across versions, add a version dropdown.  Modify the docusaurus.config.js file:  docusaurus.config.js module.exports = { themeConfig: { navbar: { items: [ { type: 'docsVersionDropdown', }, ], }, }, };   The docs version dropdown appears in your navbar:    ","version":"Next","tagName":"h2"},{"title":"Update an existing version​","type":1,"pageTitle":"Manage Docs Versions","url":"/interface/manage-docs-versions#update-an-existing-version","content":" It is possible to edit versioned docs in their respective folder:  versioned_docs/version-1.0/hello.md updates http://localhost:3000/docs/hellodocs/hello.md updates http://localhost:3000/docs/next/hello ","version":"Next","tagName":"h2"},{"title":"Class: Space<P, B>","type":0,"sectionRef":"#","url":"/api/classes/Space","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#type-parameters","content":" Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  ","version":"Next","tagName":"h2"},{"title":"Hierarchy​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#hierarchy","content":" GameElement&lt;P, B&gt; ↳ Space ↳↳ Board  ","version":"Next","tagName":"h2"},{"title":"Other​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#other","content":" ","version":"Next","tagName":"h2"},{"title":"_ui​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#_ui","content":" • _ui: ElementUI&lt;Space&lt;P, B&gt;&gt;  UI  Inherited from​  GameElement._ui  Defined in​  boardzilla-core/src/board/element.ts:1030  ","version":"Next","tagName":"h3"},{"title":"Queries​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#queries","content":" ","version":"Next","tagName":"h2"},{"title":"name​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#name","content":" • name: string  Element name, used to distinguish elements. Elements with the same name are generally considered indistibuishable. Names are also used for easy searching of elements.  Inherited from​  GameElement.name  Defined in​  boardzilla-core/src/board/element.ts:258    ","version":"Next","tagName":"h3"},{"title":"player​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#player","content":" • Optional player: P  Player with which this element is identified. This does not affect behaviour but will mark the element as mine in queries in the context of this player.  Inherited from​  GameElement.player  Defined in​  boardzilla-core/src/board/element.ts:266    ","version":"Next","tagName":"h3"},{"title":"mine​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#mine","content":" • get mine(): boolean  Whether this element belongs to the &quot;current&quot; player. A player is considered the current player if this is called in the context of an action taken by a given player, or if this is called from a given player's view of the board. It is an error to call this method when not in a player context. When querying for elements using ElementFinder such asall and first, mine is available as a search key that accepts a value of true/false  Returns​  boolean  Inherited from​  GameElement.mine  Defined in​  boardzilla-core/src/board/element.ts:674    ","version":"Next","tagName":"h3"},{"title":"adjacencies​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#adjacencies","content":" ▸ adjacencies&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Find all elements adjacent based on row/column placement or based on this element having connections created by Space#connectTo. Uses the same parameters as GameElement#all  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  GameElement.adjacencies  Defined in​  boardzilla-core/src/board/element.ts:568    ","version":"Next","tagName":"h3"},{"title":"all​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#all","content":" ▸ all&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds all elements within this element recursively that match the arguments provided.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;F&gt;\tOptionally provide a class as the first argument as a class filter. This will only match elements which are instances of the provided class ...finders\tElementFinder&lt;F&gt;[]\tAll other parameters are filters. See ElementFinder for more information.  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found. The collection is typed to ElementCollection&lt;className&gt; if one was provided.  Inherited from​  GameElement.all  Defined in​  boardzilla-core/src/board/element.ts:370    ","version":"Next","tagName":"h3"},{"title":"bottom​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#bottom","content":" ▸ bottom&lt;F&gt;(className, ...finders): undefined | F  Alias for last  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  GameElement.bottom  Defined in​  boardzilla-core/src/board/element.ts:487    ","version":"Next","tagName":"h3"},{"title":"bottomN​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#bottomn","content":" ▸ bottomN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for lastN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  GameElement.bottomN  Defined in​  boardzilla-core/src/board/element.ts:501    ","version":"Next","tagName":"h3"},{"title":"closest​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#closest","content":" ▸ closest&lt;F&gt;(className, ...finders): undefined | F  Finds the nearest space connected to this space, measured by distance. Uses the same parameters as GameElement#first  Type parameters​  Name\tTypeF\textends Space&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Defined in​  boardzilla-core/src/board/space.ts:131    ","version":"Next","tagName":"h3"},{"title":"container​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#container","content":" ▸ container&lt;T&gt;(className?): undefined | T  Returns this elements parent.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName?\tElementClass&lt;T&gt;\tIf provided, searches up the parent tree to find the first matching element. E.g. if a Token is placed on a Card in a players Tableau. calling token.container(Tableau) can be used to find the grandparent.  Returns​  undefined | T  Inherited from​  GameElement.container  Defined in​  boardzilla-core/src/board/element.ts:620    ","version":"Next","tagName":"h3"},{"title":"first​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#first","content":" ▸ first&lt;F&gt;(className, ...finders): undefined | F  Finds the first element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Inherited from​  GameElement.first  Defined in​  boardzilla-core/src/board/element.ts:386    ","version":"Next","tagName":"h3"},{"title":"firstN​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#firstn","content":" ▸ firstN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the first n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Inherited from​  GameElement.firstN  Defined in​  boardzilla-core/src/board/element.ts:406    ","version":"Next","tagName":"h3"},{"title":"has​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#has","content":" ▸ has&lt;F&gt;(className, ...finders): boolean  Return whether any element within this element recursively matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  boolean  Inherited from​  GameElement.has  Defined in​  boardzilla-core/src/board/element.ts:535    ","version":"Next","tagName":"h3"},{"title":"last​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#last","content":" ▸ last&lt;F&gt;(className, ...finders): undefined | F  Finds the last element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Inherited from​  GameElement.last  Defined in​  boardzilla-core/src/board/element.ts:423    ","version":"Next","tagName":"h3"},{"title":"lastN​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#lastn","content":" ▸ lastN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the last n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Inherited from​  GameElement.lastN  Defined in​  boardzilla-core/src/board/element.ts:443    ","version":"Next","tagName":"h3"},{"title":"others​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#others","content":" ▸ others&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds &quot;sibling&quot; elements (elements that are directly inside the parent of this element) that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  GameElement.others  Defined in​  boardzilla-core/src/board/element.ts:517    ","version":"Next","tagName":"h3"},{"title":"top​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#top","content":" ▸ top&lt;F&gt;(className, ...finders): undefined | F  Alias for first  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  GameElement.top  Defined in​  boardzilla-core/src/board/element.ts:458    ","version":"Next","tagName":"h3"},{"title":"topN​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#topn","content":" ▸ topN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for firstN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  GameElement.topN  Defined in​  boardzilla-core/src/board/element.ts:472    ","version":"Next","tagName":"h3"},{"title":"withinDistance​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#withindistance","content":" ▸ withinDistance(distance): ElementCollection&lt;Space&lt;P, B&gt;&gt;  Finds all spaces connected to this space by a distance no more thandistance  Parameters​  Name\tTypedistance\tnumber  Returns​  ElementCollection&lt;Space&lt;P, B&gt;&gt;  Defined in​  boardzilla-core/src/board/space.ts:154  ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#querying","content":" ","version":"Next","tagName":"h2"},{"title":"atPosition​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#atposition","content":" ▸ atPosition(«destructured»): undefined | GameElement&lt;P, B&gt;  Returns the element at row and column within this element  Parameters​  Name\tType«destructured»\tObject › column\tnumber › row\tnumber  Returns​  undefined | GameElement&lt;P, B&gt;  Inherited from​  GameElement.atPosition  Defined in​  boardzilla-core/src/board/element.ts:928  ","version":"Next","tagName":"h3"},{"title":"Structure​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#structure","content":" ","version":"Next","tagName":"h2"},{"title":"constructor​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#constructor","content":" • new Space&lt;P, B&gt;(ctx): Space&lt;P, B&gt;  Do not use the constructor directly. Instead Call GameElement#create or GameElement#createMany on the element in which you want to create a new element.  Type parameters​  Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  Parameters​  Name\tTypectx\tPartial&lt;ElementContext&lt;P, any&gt;&gt;  Returns​  Space&lt;P, B&gt;  Inherited from​  GameElement.constructor  Defined in​  boardzilla-core/src/board/element.ts:319    ","version":"Next","tagName":"h3"},{"title":"board​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#board","content":" • board: B  The Board to which this element belongs  Inherited from​  GameElement.board  Defined in​  boardzilla-core/src/board/element.ts:276    ","version":"Next","tagName":"h3"},{"title":"game​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#game","content":" • game: Game&lt;P, B&gt;  A reference to the Game  Inherited from​  GameElement.game  Defined in​  boardzilla-core/src/board/element.ts:282    ","version":"Next","tagName":"h3"},{"title":"owner​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#owner","content":" • get owner(): undefined | P  The player that owns this element, or the first element that contains this element searching up through the parent hierarchy. This is related to, but different than player. E.g. if a standard playing card is in a player's hand, typically the hand.player will be assigned to that player but the card itself would not have a player. In this case the card.owner() will equal the player in whose hand the card is placed.  Returns​  undefined | P  Inherited from​  GameElement.owner  Defined in​  boardzilla-core/src/board/element.ts:660    ","version":"Next","tagName":"h3"},{"title":"adjacentTo​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#adjacentto","content":" ▸ adjacentTo(element): boolean  If this element is adjacent to some other element, based on row/column placement or based on this element having a connection created by Space#connectTo.  Parameters​  Name\tTypeelement\tGameElement&lt;P, B&gt;  Returns​  boolean  Inherited from​  GameElement.adjacentTo  Defined in​  boardzilla-core/src/board/element.ts:551    ","version":"Next","tagName":"h3"},{"title":"connectTo​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#connectto","content":" ▸ connectTo(space, distance?): Space&lt;P, B&gt;  Make this space adjacent with another space for the purposes of adjacency and path-finding functions. Using connectTo on a space creates a custom graph of adjacency for the container of this space that overrides the standard adjacency based on the built-in row/column placement.  Parameters​  Name\tType\tDefault value\tDescriptionspace\tSpace&lt;P, B&gt;\tundefined\tSpace to connect to distance\tnumber\t1\tAdd a custom distance to this connection for the purposes of distance-measuring.  Returns​  Space&lt;P, B&gt;  Defined in​  boardzilla-core/src/board/space.ts:89    ","version":"Next","tagName":"h3"},{"title":"createMany​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#createmany","content":" ▸ createMany&lt;T&gt;(n, className, name, attributes?): ElementCollection&lt;T&gt;  Create n elements inside this element of the same class. This can only be called during the game setup (see createGame. Any game elements that are required must be created before the game starts. Elements that only appear later in the game can be created inside the Board#pileor made invisible.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tNumber to create className\tElementClass&lt;T&gt;\tClass to create. This class must be included in the elementClasses in createGame. name\tstring\tSets name attributes?\tPartial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt; | (n: number) =&gt; Partial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt;\tSets any attributes of the class that are defined in your own class that extend Space, Piece, or Board. Can also include player. If a function is supplied here, a single number argument will be passed with the number of the added element, starting with 1.  Returns​  ElementCollection&lt;T&gt;  Inherited from​  GameElement.createMany  Defined in​  boardzilla-core/src/board/element.ts:836    ","version":"Next","tagName":"h3"},{"title":"distanceTo​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#distanceto","content":" ▸ distanceTo(space): undefined | number  Finds the shortest distance to another space, traveling thru multiple connections  Parameters​  Name\tType\tDescriptionspace\tSpace&lt;P, B&gt;\tSpace to measure distance to  Returns​  undefined | number  shortest distance measured by the distance values added to each connection in connectTo  Defined in​  boardzilla-core/src/board/space.ts:111    ","version":"Next","tagName":"h3"},{"title":"isDescendantOf​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#isdescendantof","content":" ▸ isDescendantOf(el): boolean  Whether this element has the given element in its parent hierarchy  Parameters​  Name\tTypeel\tGameElement&lt;any, any&gt;  Returns​  boolean  Inherited from​  GameElement.isDescendantOf  Defined in​  boardzilla-core/src/board/element.ts:936    ","version":"Next","tagName":"h3"},{"title":"isEmpty​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#isempty","content":" ▸ isEmpty(): boolean  Returns whether this element has no elements placed within it.  Returns​  boolean  Inherited from​  GameElement.isEmpty  Defined in​  boardzilla-core/src/board/element.ts:631    ","version":"Next","tagName":"h3"},{"title":"onEnter​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#onenter","content":" ▸ onEnter&lt;T&gt;(type, callback): void  Attach a callback to this space for every element that enters or is created within.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptiontype\tElementClass&lt;T&gt;\tthe class of element that will trigger this callback callback\t(el: T) =&gt; void\tCallback will be called each time an element enters, with the entering element as the only argument.  Returns​  void  Example  deck.onEnter(Card, card =&gt; card.hideFromAll()) // card placed in the deck are automatically turned face down   Defined in​  boardzilla-core/src/board/space.ts:50    ","version":"Next","tagName":"h3"},{"title":"onExit​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#onexit","content":" ▸ onExit&lt;T&gt;(type, callback): void  Attach a callback to this space for every element that is moved out of this space.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptiontype\tElementClass&lt;T&gt;\tthe class of element that will trigger this callback callback\t(el: T) =&gt; void\tCallback will be called each time an element exits, with the exiting element as the only argument.  Returns​  void  Example  deck.onExit(Card, card =&gt; card.showToAll()) // cards drawn from the deck are automatically turned face up   Defined in​  boardzilla-core/src/board/space.ts:66    ","version":"Next","tagName":"h3"},{"title":"setOrder​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#setorder","content":" ▸ setOrder(order): void  Set this class to use a different ordering style.  Parameters​  Name\tType\tDescriptionorder\tundefined | &quot;normal&quot; | &quot;stacking&quot;\tordering style - &quot;normal&quot;: Elements placed into this element are put at the end of the list (default) - &quot;stacking&quot;: Elements placed into this element are put at the beginning of the list. This is prefered for elements that stack. E.g. if a stack of cards has order set to stacking the first method will return the last card placed in the stack, rather than the first one placed in the stack.  Returns​  void  Inherited from​  GameElement.setOrder  Defined in​  boardzilla-core/src/board/element.ts:608    ","version":"Next","tagName":"h3"},{"title":"shuffle​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#shuffle","content":" ▸ shuffle(): void  Re-orders the elements directly contained within this element randomly.  Returns​  void  Inherited from​  GameElement.shuffle  Defined in​  boardzilla-core/src/board/element.ts:647    ","version":"Next","tagName":"h3"},{"title":"sortBy​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#sortby","content":" ▸ sortBy&lt;E&gt;(key, direction?): ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Sorts the elements directly contained within this element by some Sorter.  Type parameters​  Name\tTypeE\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypekey\tSorter&lt;E&gt; | Sorter&lt;E&gt;[] direction?\t&quot;desc&quot; | &quot;asc&quot;  Returns​  ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Inherited from​  GameElement.sortBy  Defined in​  boardzilla-core/src/board/element.ts:639    ","version":"Next","tagName":"h3"},{"title":"toString​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#tostring","content":" ▸ toString(): string  String used for representng this element in game messages when the object is passed directly, e.g. when taking the choice directly from a chooseOnBoard choice.  Returns​  string  Inherited from​  GameElement.toString  Defined in​  boardzilla-core/src/board/element.ts:350  ","version":"Next","tagName":"h3"},{"title":"UI​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#ui","content":" ","version":"Next","tagName":"h2"},{"title":"appearance​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#appearance","content":" ▸ appearance(appearance): void  Define the appearance of this element. Any values provided override previous ones. See also ElementCollection#appearance  Parameters​  Name\tType\tDescriptionappearance\tObject\tPossible values are: appearance.aspectRatio?\tnumber\tThe aspect ratio for this element. This value is a ratio of width over height. All layouts defined in layout will respect this aspect ratio. appearance.className?\tstring\tA class name to add to the dom element appearance.connections?\tObject\tIf the elements immediately within this element are connected using Space#connectTo, this makes those connections visible as connecting lines. Providing a label will place a label over top of this line by calling the provided function with the distance of the connection specified in Space#connectTo and using the retured JSX. If labelScale is provided, the label is scaled by this amount. appearance.connections.color?\tstring\t- appearance.connections.fill?\tstring\t- appearance.connections.label?\t(__namedParameters: { distance: number ; from: Space&lt;any, any&gt; ; to: Space&lt;any, any&gt; }) =&gt; ReactNode\t- appearance.connections.labelScale?\tnumber\t- appearance.connections.style?\t&quot;solid&quot; | &quot;double&quot;\t- appearance.connections.thickness?\tnumber\t- appearance.effects?\t{ attributes: Partial&lt;Pick&lt;Space&lt;P, B&gt;, undefined | &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | &quot;_eventHandlers&quot;&gt;&gt; ; className: string }[]\tProvides a CSS class that will be applied to this element if its attributes change to match the provided ones. appearance.render?\tfalse | (el: Space&lt;P, B&gt;) =&gt; null | Element\tA function that takes this element as its only argument and returns JSX for the element. See /styling.md for more on usage. appearance.tooltip?\tfalse | (el: Space&lt;P, B&gt;) =&gt; ReactNode\t- appearance.zoomable?\tboolean | (el: Space&lt;P, B&gt;) =&gt; boolean\tSets the element to be zoomable to full screen using Boardzilla's zoom feature.  Returns​  void  Inherited from​  GameElement.appearance  Defined in​  boardzilla-core/src/board/element.ts:1654    ","version":"Next","tagName":"h3"},{"title":"layout​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#layout","content":" ▸ layout&lt;T&gt;(this, applyTo, attributes): void  Apply a layout to some of the elements directly contained within this element. See also ElementCollection#layout  Type parameters​  Name\tTypeT\textends Space&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionthis\tT\t- applyTo\tstring | GameElement&lt;any, any&gt; | ElementCollection&lt;GameElement&lt;any, any&gt;&gt; | ElementClass&lt;any&gt;\tWhich elements this layout applies to. Provided value can be: - A specific GameElement - The name of an element - A specific set of elements (ElementCollection) - A class of elements If multiple layout declarations would apply to the same element, only one will be used. The order of specificity is as above. If a class is used and mutiple apply, the more specific class will be used. attributes\tPartial&lt;LayoutAttributes&lt;T&gt;&gt;\tA list of attributes describing the layout. All units of measurement are percentages of this elements width and height from 0-100, unless otherwise noted (See margin and gap)  Returns​  void  Inherited from​  GameElement.layout  Defined in​  boardzilla-core/src/board/element.ts:1100  ","version":"Next","tagName":"h3"},{"title":"Visibility​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#visibility","content":" ","version":"Next","tagName":"h2"},{"title":"hideFrom​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#hidefrom","content":" ▸ hideFrom(...player): void  Hide this element from the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Inherited from​  GameElement.hideFrom  Defined in​  boardzilla-core/src/board/element.ts:728    ","version":"Next","tagName":"h3"},{"title":"hideFromAll​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#hidefromall","content":" ▸ hideFromAll(): void  Hide this element from all players  Returns​  void  Inherited from​  GameElement.hideFromAll  Defined in​  boardzilla-core/src/board/element.ts:719    ","version":"Next","tagName":"h3"},{"title":"isVisible​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#isvisible","content":" ▸ isVisible(): boolean  Returns whether this element is visible to the current player. Can only be called when in a player context, during an action taken by a player or while the board is viewed by a given player.  Returns​  boolean  Inherited from​  GameElement.isVisible  Defined in​  boardzilla-core/src/board/element.ts:762    ","version":"Next","tagName":"h3"},{"title":"isVisibleTo​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#isvisibleto","content":" ▸ isVisibleTo(player): boolean  Returns whether this element is visible to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  boolean  Inherited from​  GameElement.isVisibleTo  Defined in​  boardzilla-core/src/board/element.ts:746    ","version":"Next","tagName":"h3"},{"title":"showOnlyTo​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#showonlyto","content":" ▸ showOnlyTo(player): void  Show this element only to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  void  Inherited from​  GameElement.showOnlyTo  Defined in​  boardzilla-core/src/board/element.ts:691    ","version":"Next","tagName":"h3"},{"title":"showTo​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#showto","content":" ▸ showTo(...player): void  Show this element to the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Inherited from​  GameElement.showTo  Defined in​  boardzilla-core/src/board/element.ts:704    ","version":"Next","tagName":"h3"},{"title":"showToAll​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#showtoall","content":" ▸ showToAll(): void  Show this element to all players  Returns​  void  Inherited from​  GameElement.showToAll  Defined in​  boardzilla-core/src/board/element.ts:683    ","version":"Next","tagName":"h3"},{"title":"revealWhenHidden​","type":1,"pageTitle":"Class: Space<P, B>","url":"/api/classes/Space#revealwhenhidden","content":" ▸ revealWhenHidden&lt;T&gt;(this, ...attrs): void  Provide list of attributes that remain visible even when these elements are not visible to players. E.g. In a game with multiple card decks with different backs, identified by Card#deck, the identity of the card when face-down is hidden, but the deck it belongs to is not, since the card art on the back would identify the deck. In this case callingCard.revealWhenHidden('deck') will cause all attributes other than 'deck' to be hidden when the card is face down, while still revealing which deck it is.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypethis\tElementClass&lt;T&gt; ...attrs\tstring &amp; keyof T[]  Returns​  void  Inherited from​  GameElement.revealWhenHidden  Defined in​  boardzilla-core/src/board/element.ts:778 ","version":"Next","tagName":"h3"},{"title":"Translate your site","type":0,"sectionRef":"#","url":"/interface/translate-your-site","content":"","keywords":"","version":"Next"},{"title":"Configure i18n​","type":1,"pageTitle":"Translate your site","url":"/interface/translate-your-site#configure-i18n","content":" Modify docusaurus.config.js to add support for the fr locale:  docusaurus.config.js module.exports = { i18n: { defaultLocale: 'en', locales: ['en', 'fr'], }, };   ","version":"Next","tagName":"h2"},{"title":"Translate a doc​","type":1,"pageTitle":"Translate your site","url":"/interface/translate-your-site#translate-a-doc","content":" Copy the docs/intro.md file to the i18n/fr folder:  mkdir -p i18n/fr/docusaurus-plugin-content-docs/current/ cp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md   Translate i18n/fr/docusaurus-plugin-content-docs/current/intro.md in French.  ","version":"Next","tagName":"h2"},{"title":"Start your localized site​","type":1,"pageTitle":"Translate your site","url":"/interface/translate-your-site#start-your-localized-site","content":" Start your site on the French locale:  npm run start -- --locale fr   Your localized site is accessible at http://localhost:3000/fr/ and the Getting Started page is translated.  caution In development, you can only use one locale at a same time.  ","version":"Next","tagName":"h2"},{"title":"Add a Locale Dropdown​","type":1,"pageTitle":"Translate your site","url":"/interface/translate-your-site#add-a-locale-dropdown","content":" To navigate seamlessly across languages, add a locale dropdown.  Modify the docusaurus.config.js file:  docusaurus.config.js module.exports = { themeConfig: { navbar: { items: [ { type: 'localeDropdown', }, ], }, }, };   The locale dropdown now appears in your navbar:    ","version":"Next","tagName":"h2"},{"title":"Build your localized site​","type":1,"pageTitle":"Translate your site","url":"/interface/translate-your-site#build-your-localized-site","content":" Build your site for a specific locale:  npm run build -- --locale fr   Or build your site to include all the locales at once:  npm run build  ","version":"Next","tagName":"h2"},{"title":"Class: Board<P, B>","type":0,"sectionRef":"#","url":"/api/classes/Board","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#type-parameters","content":" Name\tTypeP\textends Player&lt;P, B&gt; = any B\textends Board&lt;P, B&gt; = any  ","version":"Next","tagName":"h2"},{"title":"Hierarchy​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#hierarchy","content":" Space&lt;P, B&gt; ↳ Board  ","version":"Next","tagName":"h2"},{"title":"Other​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#other","content":" ","version":"Next","tagName":"h2"},{"title":"pile​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#pile","content":" • pile: GameElement&lt;P, any&gt;  An element containing all game elements that are not currently in play. When elements are removed from the game, they go here, and can be retrieved, using e.g. board.pile.first('removed-element').putInto('destination-area').  Defined in​  boardzilla-core/src/board/board.ts:117    ","version":"Next","tagName":"h3"},{"title":"registerClasses​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#registerclasses","content":" ▸ registerClasses(...classList): void  This method must be called inside createGame with all custom Space and Piece class declared in your game.  Parameters​  Name\tType...classList\tElementClass[]  Returns​  void  Defined in​  boardzilla-core/src/board/board.ts:130  ","version":"Next","tagName":"h3"},{"title":"Queries​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#queries","content":" ","version":"Next","tagName":"h2"},{"title":"name​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#name","content":" • name: string  Element name, used to distinguish elements. Elements with the same name are generally considered indistibuishable. Names are also used for easy searching of elements.  Inherited from​  Space.name  Defined in​  boardzilla-core/src/board/element.ts:258    ","version":"Next","tagName":"h3"},{"title":"player​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#player","content":" • Optional player: P  Player with which this element is identified. This does not affect behaviour but will mark the element as mine in queries in the context of this player.  Inherited from​  Space.player  Defined in​  boardzilla-core/src/board/element.ts:266    ","version":"Next","tagName":"h3"},{"title":"mine​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#mine","content":" • get mine(): boolean  Whether this element belongs to the &quot;current&quot; player. A player is considered the current player if this is called in the context of an action taken by a given player, or if this is called from a given player's view of the board. It is an error to call this method when not in a player context. When querying for elements using ElementFinder such asall and first, mine is available as a search key that accepts a value of true/false  Returns​  boolean  Inherited from​  Space.mine  Defined in​  boardzilla-core/src/board/element.ts:674    ","version":"Next","tagName":"h3"},{"title":"adjacencies​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#adjacencies","content":" ▸ adjacencies&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Find all elements adjacent based on row/column placement or based on this element having connections created by Space#connectTo. Uses the same parameters as GameElement#all  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  Space.adjacencies  Defined in​  boardzilla-core/src/board/element.ts:568    ","version":"Next","tagName":"h3"},{"title":"all​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#all","content":" ▸ all&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds all elements within this element recursively that match the arguments provided.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;F&gt;\tOptionally provide a class as the first argument as a class filter. This will only match elements which are instances of the provided class ...finders\tElementFinder&lt;F&gt;[]\tAll other parameters are filters. See ElementFinder for more information.  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found. The collection is typed to ElementCollection&lt;className&gt; if one was provided.  Inherited from​  Space.all  Defined in​  boardzilla-core/src/board/element.ts:370    ","version":"Next","tagName":"h3"},{"title":"bottom​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#bottom","content":" ▸ bottom&lt;F&gt;(className, ...finders): undefined | F  Alias for last  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  Space.bottom  Defined in​  boardzilla-core/src/board/element.ts:487    ","version":"Next","tagName":"h3"},{"title":"bottomN​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#bottomn","content":" ▸ bottomN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for lastN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  Space.bottomN  Defined in​  boardzilla-core/src/board/element.ts:501    ","version":"Next","tagName":"h3"},{"title":"closest​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#closest","content":" ▸ closest&lt;F&gt;(className, ...finders): undefined | F  Finds the nearest space connected to this space, measured by distance. Uses the same parameters as GameElement#first  Type parameters​  Name\tTypeF\textends Space&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  Space.closest  Defined in​  boardzilla-core/src/board/space.ts:131    ","version":"Next","tagName":"h3"},{"title":"container​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#container","content":" ▸ container&lt;T&gt;(className?): undefined | T  Returns this elements parent.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName?\tElementClass&lt;T&gt;\tIf provided, searches up the parent tree to find the first matching element. E.g. if a Token is placed on a Card in a players Tableau. calling token.container(Tableau) can be used to find the grandparent.  Returns​  undefined | T  Inherited from​  Space.container  Defined in​  boardzilla-core/src/board/element.ts:620    ","version":"Next","tagName":"h3"},{"title":"first​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#first","content":" ▸ first&lt;F&gt;(className, ...finders): undefined | F  Finds the first element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Inherited from​  Space.first  Defined in​  boardzilla-core/src/board/element.ts:386    ","version":"Next","tagName":"h3"},{"title":"firstN​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#firstn","content":" ▸ firstN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the first n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Inherited from​  Space.firstN  Defined in​  boardzilla-core/src/board/element.ts:406    ","version":"Next","tagName":"h3"},{"title":"has​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#has","content":" ▸ has&lt;F&gt;(className, ...finders): boolean  Return whether any element within this element recursively matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  boolean  Inherited from​  Space.has  Defined in​  boardzilla-core/src/board/element.ts:535    ","version":"Next","tagName":"h3"},{"title":"last​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#last","content":" ▸ last&lt;F&gt;(className, ...finders): undefined | F  Finds the last element within this element recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Inherited from​  Space.last  Defined in​  boardzilla-core/src/board/element.ts:423    ","version":"Next","tagName":"h3"},{"title":"lastN​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#lastn","content":" ▸ lastN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Finds the last n elements within this element recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Inherited from​  Space.lastN  Defined in​  boardzilla-core/src/board/element.ts:443    ","version":"Next","tagName":"h3"},{"title":"others​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#others","content":" ▸ others&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  Finds &quot;sibling&quot; elements (elements that are directly inside the parent of this element) that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  Space.others  Defined in​  boardzilla-core/src/board/element.ts:517    ","version":"Next","tagName":"h3"},{"title":"top​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#top","content":" ▸ top&lt;F&gt;(className, ...finders): undefined | F  Alias for first  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Inherited from​  Space.top  Defined in​  boardzilla-core/src/board/element.ts:458    ","version":"Next","tagName":"h3"},{"title":"topN​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#topn","content":" ▸ topN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for firstN  Type parameters​  Name\tTypeF\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Inherited from​  Space.topN  Defined in​  boardzilla-core/src/board/element.ts:472    ","version":"Next","tagName":"h3"},{"title":"withinDistance​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#withindistance","content":" ▸ withinDistance(distance): ElementCollection&lt;Space&lt;P, B&gt;&gt;  Finds all spaces connected to this space by a distance no more thandistance  Parameters​  Name\tTypedistance\tnumber  Returns​  ElementCollection&lt;Space&lt;P, B&gt;&gt;  Inherited from​  Space.withinDistance  Defined in​  boardzilla-core/src/board/space.ts:154  ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#querying","content":" ","version":"Next","tagName":"h2"},{"title":"atPosition​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#atposition","content":" ▸ atPosition(«destructured»): undefined | GameElement&lt;P, B&gt;  Returns the element at row and column within this element  Parameters​  Name\tType«destructured»\tObject › column\tnumber › row\tnumber  Returns​  undefined | GameElement&lt;P, B&gt;  Inherited from​  Space.atPosition  Defined in​  boardzilla-core/src/board/element.ts:928  ","version":"Next","tagName":"h3"},{"title":"Structure​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#structure","content":" ","version":"Next","tagName":"h2"},{"title":"board​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#board","content":" • board: B  The Board to which this element belongs  Inherited from​  Space.board  Defined in​  boardzilla-core/src/board/element.ts:276    ","version":"Next","tagName":"h3"},{"title":"game​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#game","content":" • game: Game&lt;P, B&gt;  A reference to the Game  Inherited from​  Space.game  Defined in​  boardzilla-core/src/board/element.ts:282    ","version":"Next","tagName":"h3"},{"title":"owner​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#owner","content":" • get owner(): undefined | P  The player that owns this element, or the first element that contains this element searching up through the parent hierarchy. This is related to, but different than player. E.g. if a standard playing card is in a player's hand, typically the hand.player will be assigned to that player but the card itself would not have a player. In this case the card.owner() will equal the player in whose hand the card is placed.  Returns​  undefined | P  Inherited from​  Space.owner  Defined in​  boardzilla-core/src/board/element.ts:660    ","version":"Next","tagName":"h3"},{"title":"adjacentTo​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#adjacentto","content":" ▸ adjacentTo(element): boolean  If this element is adjacent to some other element, based on row/column placement or based on this element having a connection created by Space#connectTo.  Parameters​  Name\tTypeelement\tGameElement&lt;P, B&gt;  Returns​  boolean  Inherited from​  Space.adjacentTo  Defined in​  boardzilla-core/src/board/element.ts:551    ","version":"Next","tagName":"h3"},{"title":"connectTo​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#connectto","content":" ▸ connectTo(space, distance?): Board&lt;P, B&gt;  Make this space adjacent with another space for the purposes of adjacency and path-finding functions. Using connectTo on a space creates a custom graph of adjacency for the container of this space that overrides the standard adjacency based on the built-in row/column placement.  Parameters​  Name\tType\tDefault value\tDescriptionspace\tSpace&lt;P, B&gt;\tundefined\tSpace to connect to distance\tnumber\t1\tAdd a custom distance to this connection for the purposes of distance-measuring.  Returns​  Board&lt;P, B&gt;  Inherited from​  Space.connectTo  Defined in​  boardzilla-core/src/board/space.ts:89    ","version":"Next","tagName":"h3"},{"title":"createMany​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#createmany","content":" ▸ createMany&lt;T&gt;(n, className, name, attributes?): ElementCollection&lt;T&gt;  Create n elements inside this element of the same class. This can only be called during the game setup (see createGame. Any game elements that are required must be created before the game starts. Elements that only appear later in the game can be created inside the Board#pileor made invisible.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tNumber to create className\tElementClass&lt;T&gt;\tClass to create. This class must be included in the elementClasses in createGame. name\tstring\tSets name attributes?\tPartial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt; | (n: number) =&gt; Partial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt;\tSets any attributes of the class that are defined in your own class that extend Space, Piece, or Board. Can also include player. If a function is supplied here, a single number argument will be passed with the number of the added element, starting with 1.  Returns​  ElementCollection&lt;T&gt;  Inherited from​  Space.createMany  Defined in​  boardzilla-core/src/board/element.ts:836    ","version":"Next","tagName":"h3"},{"title":"distanceTo​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#distanceto","content":" ▸ distanceTo(space): undefined | number  Finds the shortest distance to another space, traveling thru multiple connections  Parameters​  Name\tType\tDescriptionspace\tSpace&lt;P, B&gt;\tSpace to measure distance to  Returns​  undefined | number  shortest distance measured by the distance values added to each connection in connectTo  Inherited from​  Space.distanceTo  Defined in​  boardzilla-core/src/board/space.ts:111    ","version":"Next","tagName":"h3"},{"title":"isDescendantOf​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#isdescendantof","content":" ▸ isDescendantOf(el): boolean  Whether this element has the given element in its parent hierarchy  Parameters​  Name\tTypeel\tGameElement&lt;any, any&gt;  Returns​  boolean  Inherited from​  Space.isDescendantOf  Defined in​  boardzilla-core/src/board/element.ts:936    ","version":"Next","tagName":"h3"},{"title":"isEmpty​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#isempty","content":" ▸ isEmpty(): boolean  Returns whether this element has no elements placed within it.  Returns​  boolean  Inherited from​  Space.isEmpty  Defined in​  boardzilla-core/src/board/element.ts:631    ","version":"Next","tagName":"h3"},{"title":"onEnter​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#onenter","content":" ▸ onEnter&lt;T&gt;(type, callback): void  Attach a callback to this space for every element that enters or is created within.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptiontype\tElementClass&lt;T&gt;\tthe class of element that will trigger this callback callback\t(el: T) =&gt; void\tCallback will be called each time an element enters, with the entering element as the only argument.  Returns​  void  Example  deck.onEnter(Card, card =&gt; card.hideFromAll()) // card placed in the deck are automatically turned face down   Inherited from​  Space.onEnter  Defined in​  boardzilla-core/src/board/space.ts:50    ","version":"Next","tagName":"h3"},{"title":"onExit​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#onexit","content":" ▸ onExit&lt;T&gt;(type, callback): void  Attach a callback to this space for every element that is moved out of this space.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptiontype\tElementClass&lt;T&gt;\tthe class of element that will trigger this callback callback\t(el: T) =&gt; void\tCallback will be called each time an element exits, with the exiting element as the only argument.  Returns​  void  Example  deck.onExit(Card, card =&gt; card.showToAll()) // cards drawn from the deck are automatically turned face up   Inherited from​  Space.onExit  Defined in​  boardzilla-core/src/board/space.ts:66    ","version":"Next","tagName":"h3"},{"title":"setOrder​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#setorder","content":" ▸ setOrder(order): void  Set this class to use a different ordering style.  Parameters​  Name\tType\tDescriptionorder\tundefined | &quot;normal&quot; | &quot;stacking&quot;\tordering style - &quot;normal&quot;: Elements placed into this element are put at the end of the list (default) - &quot;stacking&quot;: Elements placed into this element are put at the beginning of the list. This is prefered for elements that stack. E.g. if a stack of cards has order set to stacking the first method will return the last card placed in the stack, rather than the first one placed in the stack.  Returns​  void  Inherited from​  Space.setOrder  Defined in​  boardzilla-core/src/board/element.ts:608    ","version":"Next","tagName":"h3"},{"title":"shuffle​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#shuffle","content":" ▸ shuffle(): void  Re-orders the elements directly contained within this element randomly.  Returns​  void  Inherited from​  Space.shuffle  Defined in​  boardzilla-core/src/board/element.ts:647    ","version":"Next","tagName":"h3"},{"title":"sortBy​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#sortby","content":" ▸ sortBy&lt;E&gt;(key, direction?): ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Sorts the elements directly contained within this element by some Sorter.  Type parameters​  Name\tTypeE\textends GameElement&lt;P, B&gt;  Parameters​  Name\tTypekey\tSorter&lt;E&gt; | Sorter&lt;E&gt;[] direction?\t&quot;desc&quot; | &quot;asc&quot;  Returns​  ElementCollection&lt;GameElement&lt;P, B&gt;&gt;  Inherited from​  Space.sortBy  Defined in​  boardzilla-core/src/board/element.ts:639    ","version":"Next","tagName":"h3"},{"title":"toString​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#tostring","content":" ▸ toString(): string  String used for representng this element in game messages when the object is passed directly, e.g. when taking the choice directly from a chooseOnBoard choice.  Returns​  string  Inherited from​  Space.toString  Defined in​  boardzilla-core/src/board/element.ts:350  ","version":"Next","tagName":"h3"},{"title":"UI​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#ui","content":" ","version":"Next","tagName":"h2"},{"title":"appearance​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#appearance","content":" ▸ appearance(appearance): void  Define the appearance of this element. Any values provided override previous ones. See also ElementCollection#appearance  Parameters​  Name\tType\tDescriptionappearance\tObject\tPossible values are: appearance.aspectRatio?\tnumber\tThe aspect ratio for this element. This value is a ratio of width over height. All layouts defined in layout will respect this aspect ratio. appearance.className?\tstring\tA class name to add to the dom element appearance.connections?\tObject\tIf the elements immediately within this element are connected using Space#connectTo, this makes those connections visible as connecting lines. Providing a label will place a label over top of this line by calling the provided function with the distance of the connection specified in Space#connectTo and using the retured JSX. If labelScale is provided, the label is scaled by this amount. appearance.connections.color?\tstring\t- appearance.connections.fill?\tstring\t- appearance.connections.label?\t(__namedParameters: { distance: number ; from: Space&lt;any, any&gt; ; to: Space&lt;any, any&gt; }) =&gt; ReactNode\t- appearance.connections.labelScale?\tnumber\t- appearance.connections.style?\t&quot;solid&quot; | &quot;double&quot;\t- appearance.connections.thickness?\tnumber\t- appearance.effects?\t{ attributes: Partial&lt;Pick&lt;Board&lt;P, B&gt;, undefined | &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | &quot;_eventHandlers&quot; | &quot;pile&quot;&gt;&gt; ; className: string }[]\tProvides a CSS class that will be applied to this element if its attributes change to match the provided ones. appearance.render?\tfalse | (el: Board&lt;P, B&gt;) =&gt; null | Element\tA function that takes this element as its only argument and returns JSX for the element. See /styling.md for more on usage. appearance.tooltip?\tfalse | (el: Board&lt;P, B&gt;) =&gt; ReactNode\t- appearance.zoomable?\tboolean | (el: Board&lt;P, B&gt;) =&gt; boolean\tSets the element to be zoomable to full screen using Boardzilla's zoom feature.  Returns​  void  Inherited from​  Space.appearance  Defined in​  boardzilla-core/src/board/element.ts:1654    ","version":"Next","tagName":"h3"},{"title":"disableDefaultAppearance​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#disabledefaultappearance","content":" ▸ disableDefaultAppearance(): void  Remove all built-in default appearance. If any elements have not been given a custom appearance, this causes them to be hidden.  Returns​  void  Defined in​  boardzilla-core/src/board/board.ts:242    ","version":"Next","tagName":"h3"},{"title":"layout​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#layout","content":" ▸ layout&lt;T&gt;(this, applyTo, attributes): void  Apply a layout to some of the elements directly contained within this element. See also ElementCollection#layout  Type parameters​  Name\tTypeT\textends Board&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionthis\tT\t- applyTo\tstring | GameElement&lt;any, any&gt; | ElementCollection&lt;GameElement&lt;any, any&gt;&gt; | ElementClass&lt;any&gt;\tWhich elements this layout applies to. Provided value can be: - A specific GameElement - The name of an element - A specific set of elements (ElementCollection) - A class of elements If multiple layout declarations would apply to the same element, only one will be used. The order of specificity is as above. If a class is used and mutiple apply, the more specific class will be used. attributes\tPartial&lt;LayoutAttributes&lt;T&gt;&gt;\tA list of attributes describing the layout. All units of measurement are percentages of this elements width and height from 0-100, unless otherwise noted (See margin and gap)  Returns​  void  Inherited from​  Space.layout  Defined in​  boardzilla-core/src/board/element.ts:1100    ","version":"Next","tagName":"h3"},{"title":"layoutAction​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#layoutaction","content":" ▸ layoutAction(action, attributes): void  Apply layout rules to a particular action, controlling where player prompts and choices appear in relation to the board  Parameters​  Name\tType\tDescriptionaction\tstring\tthe name of the action as defined in game#defineActions attributes\tActionLayout\tsee ActionLayout  Returns​  void  Defined in​  boardzilla-core/src/board/board.ts:232    ","version":"Next","tagName":"h3"},{"title":"layoutStep​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#layoutstep","content":" ▸ layoutStep(step, attributes): void  Apply layout rules to a particular step in the flow, controlling where player prompts and choices appear in relation to the board  Parameters​  Name\tType\tDescriptionstep\tstring\tthe name of the step as defined in playerActions attributes\tActionLayout\tsee ActionLayout  Returns​  void  Defined in​  boardzilla-core/src/board/board.ts:218  ","version":"Next","tagName":"h3"},{"title":"Visibility​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#visibility","content":" ","version":"Next","tagName":"h2"},{"title":"hideFrom​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#hidefrom","content":" ▸ hideFrom(...player): void  Hide this element from the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Inherited from​  Space.hideFrom  Defined in​  boardzilla-core/src/board/element.ts:728    ","version":"Next","tagName":"h3"},{"title":"hideFromAll​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#hidefromall","content":" ▸ hideFromAll(): void  Hide this element from all players  Returns​  void  Inherited from​  Space.hideFromAll  Defined in​  boardzilla-core/src/board/element.ts:719    ","version":"Next","tagName":"h3"},{"title":"isVisible​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#isvisible","content":" ▸ isVisible(): boolean  Returns whether this element is visible to the current player. Can only be called when in a player context, during an action taken by a player or while the board is viewed by a given player.  Returns​  boolean  Inherited from​  Space.isVisible  Defined in​  boardzilla-core/src/board/element.ts:762    ","version":"Next","tagName":"h3"},{"title":"isVisibleTo​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#isvisibleto","content":" ▸ isVisibleTo(player): boolean  Returns whether this element is visible to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  boolean  Inherited from​  Space.isVisibleTo  Defined in​  boardzilla-core/src/board/element.ts:746    ","version":"Next","tagName":"h3"},{"title":"showOnlyTo​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#showonlyto","content":" ▸ showOnlyTo(player): void  Show this element only to the given player  Parameters​  Name\tTypeplayer\tnumber | P  Returns​  void  Inherited from​  Space.showOnlyTo  Defined in​  boardzilla-core/src/board/element.ts:691    ","version":"Next","tagName":"h3"},{"title":"showTo​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#showto","content":" ▸ showTo(...player): void  Show this element to the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | P[]  Returns​  void  Inherited from​  Space.showTo  Defined in​  boardzilla-core/src/board/element.ts:704    ","version":"Next","tagName":"h3"},{"title":"showToAll​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#showtoall","content":" ▸ showToAll(): void  Show this element to all players  Returns​  void  Inherited from​  Space.showToAll  Defined in​  boardzilla-core/src/board/element.ts:683    ","version":"Next","tagName":"h3"},{"title":"revealWhenHidden​","type":1,"pageTitle":"Class: Board<P, B>","url":"/api/classes/Board#revealwhenhidden","content":" ▸ revealWhenHidden&lt;T&gt;(this, ...attrs): void  Provide list of attributes that remain visible even when these elements are not visible to players. E.g. In a game with multiple card decks with different backs, identified by Card#deck, the identity of the card when face-down is hidden, but the deck it belongs to is not, since the card art on the back would identify the deck. In this case callingCard.revealWhenHidden('deck') will cause all attributes other than 'deck' to be hidden when the card is face down, while still revealing which deck it is.  Type parameters​  Name\tTypeT\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypethis\tElementClass&lt;T&gt; ...attrs\tstring &amp; keyof T[]  Returns​  void  Inherited from​  Space.revealWhenHidden  Defined in​  boardzilla-core/src/board/element.ts:778 ","version":"Next","tagName":"h3"},{"title":"Installation","type":0,"sectionRef":"#","url":"/introduction/installation","content":"Installation Create an starter game template by running the following command. It will guide you through setting up your game. npx @boardzilla/create-game Change into your newly created directory using cd [game-name].Run npm run dev to start development.Go to http://localhost:8080 to start developing.","keywords":"","version":"Next"},{"title":"Class: ElementCollection<T>","type":0,"sectionRef":"#","url":"/api/classes/ElementCollection","content":"","keywords":"","version":"Next"},{"title":"Type parameters​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#type-parameters","content":" Name\tTypeT\textends GameElement = any  ","version":"Next","tagName":"h2"},{"title":"Hierarchy​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#hierarchy","content":" Array&lt;T&gt; ↳ ElementCollection  ","version":"Next","tagName":"h2"},{"title":"Other​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#other","content":" ","version":"Next","tagName":"h2"},{"title":"[unscopables]​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#unscopables","content":" • Readonly [unscopables]: Object  Is an object whose properties have the value 'true' when they will be absent when used in a 'with' statement.  Type declaration​  Name\tType\tDescription[unscopables]?\tboolean\tIs an object whose properties have the value 'true' when they will be absent when used in a 'with' statement. length?\tboolean\tGets or sets the length of the array. This is a number one higher than the highest index in the array.  Inherited from​  Array.[unscopables]  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts:97    ","version":"Next","tagName":"h3"},{"title":"length​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#length","content":" • length: number  Gets or sets the length of the array. This is a number one higher than the highest index in the array.  Inherited from​  Array.length  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1325    ","version":"Next","tagName":"h3"},{"title":"[iterator]​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#iterator","content":" ▸ [iterator](): IterableIterator&lt;T&gt;  Iterator  Returns​  IterableIterator&lt;T&gt;  Inherited from​  Array.[iterator]  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:58    ","version":"Next","tagName":"h3"},{"title":"at​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#at","content":" ▸ at(index): undefined | T  Takes an integer value and returns the item at that index, allowing for positive and negative integers. Negative integers count back from the last item in the array.  Parameters​  Name\tTypeindex\tnumber  Returns​  undefined | T  Inherited from​  Array.at  Defined in​  boardzilla-core/node_modules/@types/node/globals.d.ts:114    ","version":"Next","tagName":"h3"},{"title":"concat​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#concat","content":" ▸ concat(...items): T[]  Combines two or more arrays. This method returns a new array without modifying any existing arrays.  Parameters​  Name\tType\tDescription...items\tConcatArray&lt;T&gt;[]\tAdditional arrays and/or items to add to the end of the array.  Returns​  T[]  Inherited from​  Array.concat  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1349  ▸ concat(...items): T[]  Combines two or more arrays. This method returns a new array without modifying any existing arrays.  Parameters​  Name\tType\tDescription...items\t(T | ConcatArray&lt;T&gt;)[]\tAdditional arrays and/or items to add to the end of the array.  Returns​  T[]  Inherited from​  Array.concat  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1355    ","version":"Next","tagName":"h3"},{"title":"copyWithin​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#copywithin","content":" ▸ copyWithin(target, start, end?): this  Returns the this object after copying a section of the array identified by start and end to the same array starting at position target  Parameters​  Name\tType\tDescriptiontarget\tnumber\tIf target is negative, it is treated as length+target where length is the length of the array. start\tnumber\tIf start is negative, it is treated as length+start. If end is negative, it is treated as length+end. end?\tnumber\tIf not specified, length of the this object is used as its default value.  Returns​  this  Inherited from​  Array.copyWithin  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:62    ","version":"Next","tagName":"h3"},{"title":"entries​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#entries","content":" ▸ entries(): IterableIterator&lt;[number, T]&gt;  Returns an iterable of key, value pairs for every entry in the array  Returns​  IterableIterator&lt;[number, T]&gt;  Inherited from​  Array.entries  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:63    ","version":"Next","tagName":"h3"},{"title":"every​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#every","content":" ▸ every&lt;S&gt;(predicate, thisArg?): this is S[]  Determines whether all the members of an array satisfy the specified test.  Type parameters​  Name\tTypeS\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionpredicate\t(value: T, index: number, array: T[]) =&gt; value is S\tA function that accepts up to three arguments. The every method calls the predicate function for each element in the array until the predicate returns a value which is coercible to the Boolean value false, or until the end of the array. thisArg?\tany\tAn object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.  Returns​  this is S[]  Inherited from​  Array.every  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1432  ▸ every(predicate, thisArg?): boolean  Determines whether all the members of an array satisfy the specified test.  Parameters​  Name\tType\tDescriptionpredicate\t(value: T, index: number, array: T[]) =&gt; unknown\tA function that accepts up to three arguments. The every method calls the predicate function for each element in the array until the predicate returns a value which is coercible to the Boolean value false, or until the end of the array. thisArg?\tany\tAn object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.  Returns​  boolean  Inherited from​  Array.every  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1441    ","version":"Next","tagName":"h3"},{"title":"fill​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#fill","content":" ▸ fill(value, start?, end?): this  Changes all array elements from start to end index to a static value and returns the modified array  Parameters​  Name\tType\tDescriptionvalue\tT\tvalue to fill array section with start?\tnumber\tindex to start filling the array at. If start is negative, it is treated as length+start where length is the length of the array. end?\tnumber\tindex to stop filling the array at. If end is negative, it is treated as length+end.  Returns​  this  Inherited from​  Array.fill  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:51    ","version":"Next","tagName":"h3"},{"title":"find​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#find","content":" ▸ find&lt;S&gt;(predicate, thisArg?): undefined | S  Returns the value of the first element in the array where predicate is true, and undefined otherwise.  Type parameters​  Name\tTypeS\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionpredicate\t(value: T, index: number, obj: T[]) =&gt; value is S\tfind calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true. If such an element is found, find immediately returns that element value. Otherwise, find returns undefined. thisArg?\tany\tIf provided, it will be used as the this value for each invocation of predicate. If it is not provided, undefined is used instead.  Returns​  undefined | S  Inherited from​  Array.find  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:29    ","version":"Next","tagName":"h3"},{"title":"findIndex​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#findindex","content":" ▸ findIndex(predicate, thisArg?): number  Returns the index of the first element in the array where predicate is true, and -1 otherwise.  Parameters​  Name\tType\tDescriptionpredicate\t(value: T, index: number, obj: T[]) =&gt; unknown\tfind calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true. If such an element is found, findIndex immediately returns that element index. Otherwise, findIndex returns -1. thisArg?\tany\tIf provided, it will be used as the this value for each invocation of predicate. If it is not provided, undefined is used instead.  Returns​  number  Inherited from​  Array.findIndex  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:41    ","version":"Next","tagName":"h3"},{"title":"flat​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#flat","content":" ▸ flat&lt;A, D&gt;(this, depth?): FlatArray&lt;A, D&gt;[]  Returns a new array with all sub-array elements concatenated into it recursively up to the specified depth.  Type parameters​  Name\tTypeA\tA D\textends number = 1  Parameters​  Name\tType\tDescriptionthis\tA\t- depth?\tD\tThe maximum recursion depth  Returns​  FlatArray&lt;A, D&gt;[]  Inherited from​  Array.flat  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2019.array.d.ts:75    ","version":"Next","tagName":"h3"},{"title":"flatMap​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#flatmap","content":" ▸ flatMap&lt;U, This&gt;(callback, thisArg?): U[]  Calls a defined callback function on each element of an array. Then, flattens the result into a new array. This is identical to a map followed by flat with depth 1.  Type parameters​  Name\tTypeU\tU This\tundefined  Parameters​  Name\tType\tDescriptioncallback\t(this: This, value: T, index: number, array: T[]) =&gt; U | readonly U[]\tA function that accepts up to three arguments. The flatMap method calls the callback function one time for each element in the array. thisArg?\tThis\tAn object to which the this keyword can refer in the callback function. If thisArg is omitted, undefined is used as the this value.  Returns​  U[]  Inherited from​  Array.flatMap  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2019.array.d.ts:64    ","version":"Next","tagName":"h3"},{"title":"forEach​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#foreach","content":" ▸ forEach(callbackfn, thisArg?): void  Performs the specified action for each element in an array.  Parameters​  Name\tType\tDescriptioncallbackfn\t(value: T, index: number, array: T[]) =&gt; void\tA function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. thisArg?\tany\tAn object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.  Returns​  void  Inherited from​  Array.forEach  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1456    ","version":"Next","tagName":"h3"},{"title":"includes​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#includes","content":" ▸ includes(searchElement, fromIndex?): boolean  Determines whether an array includes a certain element, returning true or false as appropriate.  Parameters​  Name\tType\tDescriptionsearchElement\tT\tThe element to search for. fromIndex?\tnumber\tThe position in this array at which to begin searching for searchElement.  Returns​  boolean  Inherited from​  Array.includes  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2016.array.include.d.ts:25    ","version":"Next","tagName":"h3"},{"title":"indexOf​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#indexof","content":" ▸ indexOf(searchElement, fromIndex?): number  Returns the index of the first occurrence of a value in an array, or -1 if it is not present.  Parameters​  Name\tType\tDescriptionsearchElement\tT\tThe value to locate in the array. fromIndex?\tnumber\tThe array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.  Returns​  number  Inherited from​  Array.indexOf  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1417    ","version":"Next","tagName":"h3"},{"title":"join​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#join","content":" ▸ join(separator?): string  Adds all the elements of an array into a string, separated by the specified separator string.  Parameters​  Name\tType\tDescriptionseparator?\tstring\tA string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.  Returns​  string  Inherited from​  Array.join  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1360    ","version":"Next","tagName":"h3"},{"title":"keys​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#keys","content":" ▸ keys(): IterableIterator&lt;number&gt;  Returns an iterable of keys in the array  Returns​  IterableIterator&lt;number&gt;  Inherited from​  Array.keys  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:68    ","version":"Next","tagName":"h3"},{"title":"lastIndexOf​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#lastindexof","content":" ▸ lastIndexOf(searchElement, fromIndex?): number  Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.  Parameters​  Name\tType\tDescriptionsearchElement\tT\tThe value to locate in the array. fromIndex?\tnumber\tThe array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.  Returns​  number  Inherited from​  Array.lastIndexOf  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1423    ","version":"Next","tagName":"h3"},{"title":"map​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#map","content":" ▸ map&lt;U&gt;(callbackfn, thisArg?): U[]  Calls a defined callback function on each element of an array, and returns an array that contains the results.  Type parameters​  NameU  Parameters​  Name\tType\tDescriptioncallbackfn\t(value: T, index: number, array: T[]) =&gt; U\tA function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array. thisArg?\tany\tAn object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.  Returns​  U[]  Inherited from​  Array.map  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1462    ","version":"Next","tagName":"h3"},{"title":"pop​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#pop","content":" ▸ pop(): undefined | T  Removes the last element from an array and returns it. If the array is empty, undefined is returned and the array is not modified.  Returns​  undefined | T  Inherited from​  Array.pop  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1338    ","version":"Next","tagName":"h3"},{"title":"push​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#push","content":" ▸ push(...items): number  Appends new elements to the end of an array, and returns the new length of the array.  Parameters​  Name\tType\tDescription...items\tT[]\tNew elements to add to the array.  Returns​  number  Inherited from​  Array.push  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1343    ","version":"Next","tagName":"h3"},{"title":"reduce​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#reduce","content":" ▸ reduce(callbackfn): T  Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.  Parameters​  Name\tType\tDescriptioncallbackfn\t(previousValue: T, currentValue: T, currentIndex: number, array: T[]) =&gt; T\tA function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.  Returns​  T  Inherited from​  Array.reduce  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1480  ▸ reduce&lt;U&gt;(callbackfn, initialValue): U  Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.  Type parameters​  NameU  Parameters​  Name\tType\tDescriptioncallbackfn\t(previousValue: U, currentValue: T, currentIndex: number, array: T[]) =&gt; U\tA function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array. initialValue\tU\tIf initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.  Returns​  U  Inherited from​  Array.reduce  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1487    ","version":"Next","tagName":"h3"},{"title":"reduceRight​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#reduceright","content":" ▸ reduceRight(callbackfn): T  Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.  Parameters​  Name\tType\tDescriptioncallbackfn\t(previousValue: T, currentValue: T, currentIndex: number, array: T[]) =&gt; T\tA function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.  Returns​  T  Inherited from​  Array.reduceRight  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1493  ▸ reduceRight&lt;U&gt;(callbackfn, initialValue): U  Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.  Type parameters​  NameU  Parameters​  Name\tType\tDescriptioncallbackfn\t(previousValue: U, currentValue: T, currentIndex: number, array: T[]) =&gt; U\tA function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array. initialValue\tU\tIf initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.  Returns​  U  Inherited from​  Array.reduceRight  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1500    ","version":"Next","tagName":"h3"},{"title":"reverse​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#reverse","content":" ▸ reverse(): T[]  Reverses the elements in an array in place. This method mutates the array and returns a reference to the same array.  Returns​  T[]  Inherited from​  Array.reverse  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1365    ","version":"Next","tagName":"h3"},{"title":"shift​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#shift","content":" ▸ shift(): undefined | T  Removes the first element from an array and returns it. If the array is empty, undefined is returned and the array is not modified.  Returns​  undefined | T  Inherited from​  Array.shift  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1370    ","version":"Next","tagName":"h3"},{"title":"some​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#some","content":" ▸ some(predicate, thisArg?): boolean  Determines whether the specified callback function returns true for any element of an array.  Parameters​  Name\tType\tDescriptionpredicate\t(value: T, index: number, array: T[]) =&gt; unknown\tA function that accepts up to three arguments. The some method calls the predicate function for each element in the array until the predicate returns a value which is coercible to the Boolean value true, or until the end of the array. thisArg?\tany\tAn object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.  Returns​  boolean  Inherited from​  Array.some  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1450    ","version":"Next","tagName":"h3"},{"title":"sort​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#sort","content":" ▸ sort(compareFn?): this  Sorts an array in place. This method mutates the array and returns a reference to the same array.  Parameters​  Name\tType\tDescriptioncompareFn?\t(a: T, b: T) =&gt; number\tFunction used to determine the order of the elements. It is expected to return a negative value if the first argument is less than the second argument, zero if they're equal, and a positive value otherwise. If omitted, the elements are sorted in ascending, ASCII character order. ts [11,2,22,1].sort((a, b) =&gt; a - b)   Returns​  this  Inherited from​  Array.sort  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1391    ","version":"Next","tagName":"h3"},{"title":"splice​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#splice","content":" ▸ splice(start, deleteCount?): T[]  Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.  Parameters​  Name\tType\tDescriptionstart\tnumber\tThe zero-based location in the array from which to start removing elements. deleteCount?\tnumber\tThe number of elements to remove.  Returns​  T[]  An array containing the elements that were deleted.  Inherited from​  Array.splice  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1398  ▸ splice(start, deleteCount, ...items): T[]  Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.  Parameters​  Name\tType\tDescriptionstart\tnumber\tThe zero-based location in the array from which to start removing elements. deleteCount\tnumber\tThe number of elements to remove. ...items\tT[]\tElements to insert into the array in place of the deleted elements.  Returns​  T[]  An array containing the elements that were deleted.  Inherited from​  Array.splice  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1406    ","version":"Next","tagName":"h3"},{"title":"toLocaleString​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#tolocalestring","content":" ▸ toLocaleString(): string  Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.  Returns​  string  Inherited from​  Array.toLocaleString  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1333    ","version":"Next","tagName":"h3"},{"title":"toString​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#tostring","content":" ▸ toString(): string  Returns a string representation of an array.  Returns​  string  Inherited from​  Array.toString  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1329    ","version":"Next","tagName":"h3"},{"title":"unshift​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#unshift","content":" ▸ unshift(...items): number  Inserts new elements at the start of an array, and returns the new length of the array.  Parameters​  Name\tType\tDescription...items\tT[]\tElements to insert at the start of the array.  Returns​  number  Inherited from​  Array.unshift  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es5.d.ts:1411    ","version":"Next","tagName":"h3"},{"title":"values​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#values","content":" ▸ values(): IterableIterator&lt;T&gt;  Returns an iterable of values in the array  Returns​  IterableIterator&lt;T&gt;  Inherited from​  Array.values  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:73    ","version":"Next","tagName":"h3"},{"title":"from​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#from","content":" ▸ from&lt;T&gt;(arrayLike): T[]  Creates an array from an array-like object.  Type parameters​  NameT  Parameters​  Name\tType\tDescriptionarrayLike\tArrayLike&lt;T&gt;\tAn array-like object to convert to an array.  Returns​  T[]  Inherited from​  Array.from  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:70  ▸ from&lt;T, U&gt;(arrayLike, mapfn, thisArg?): U[]  Creates an array from an iterable object.  Type parameters​  NameT U  Parameters​  Name\tType\tDescriptionarrayLike\tArrayLike&lt;T&gt;\tAn array-like object to convert to an array. mapfn\t(v: T, k: number) =&gt; U\tA mapping function to call on every element of the array. thisArg?\tany\tValue of 'this' used to invoke the mapfn.  Returns​  U[]  Inherited from​  Array.from  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:78  ▸ from&lt;T&gt;(iterable): T[]  Creates an array from an iterable object.  Type parameters​  NameT  Parameters​  Name\tType\tDescriptioniterable\tIterable&lt;T&gt; | ArrayLike&lt;T&gt;\tAn iterable object to convert to an array.  Returns​  T[]  Inherited from​  Array.from  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:81  ▸ from&lt;T, U&gt;(iterable, mapfn, thisArg?): U[]  Creates an array from an iterable object.  Type parameters​  NameT U  Parameters​  Name\tType\tDescriptioniterable\tIterable&lt;T&gt; | ArrayLike&lt;T&gt;\tAn iterable object to convert to an array. mapfn\t(v: T, k: number) =&gt; U\tA mapping function to call on every element of the array. thisArg?\tany\tValue of 'this' used to invoke the mapfn.  Returns​  U[]  Inherited from​  Array.from  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.iterable.d.ts:89    ","version":"Next","tagName":"h3"},{"title":"of​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#of","content":" ▸ of&lt;T&gt;(...items): T[]  Returns a new array from a set of elements.  Type parameters​  NameT  Parameters​  Name\tType\tDescription...items\tT[]\tA set of elements to include in the new array object.  Returns​  T[]  Inherited from​  Array.of  Defined in​  boardzilla-docs/node_modules/typescript/lib/lib.es2015.core.d.ts:84  ","version":"Next","tagName":"h3"},{"title":"Queries​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#queries","content":" ","version":"Next","tagName":"h2"},{"title":"all​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#all","content":" ▸ all&lt;F&gt;(className, ...finders): ElementCollection&lt;F&gt;  As GameElement#all, but finds all elements within this collection and its contained elements recursively.  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionclassName\tElementClass&lt;F&gt;\tOptionally provide a class as the first argument as a class filter. This will only match elements which are instances of the provided class ...finders\tElementFinder&lt;F&gt;[]\tAll other parameters are filters. See ElementFinder for more information.  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found. The collection is typed to ElementCollection&lt;className&gt; if one was provided.  Defined in​  boardzilla-core/src/board/element-collection.ts:72    ","version":"Next","tagName":"h3"},{"title":"areAllEqual​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#areallequal","content":" ▸ areAllEqual(key): boolean  Returns whether all elements in this collection have the same value for key.  Parameters​  Name\tTypekey\tkeyof T  Returns​  boolean  Defined in​  boardzilla-core/src/board/element-collection.ts:466    ","version":"Next","tagName":"h3"},{"title":"bottom​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#bottom","content":" ▸ bottom&lt;F&gt;(className, ...finders): undefined | F  Alias for last  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Defined in​  boardzilla-core/src/board/element-collection.ts:246    ","version":"Next","tagName":"h3"},{"title":"bottomN​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#bottomn","content":" ▸ bottomN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for lastN  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Defined in​  boardzilla-core/src/board/element-collection.ts:260    ","version":"Next","tagName":"h3"},{"title":"first​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#first","content":" ▸ first&lt;F&gt;(className, ...finders): undefined | F  As GameElement#first, except finds the first element within this collection and its contained elements recursively that matches the arguments provided. See GameElement#all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Defined in​  boardzilla-core/src/board/element-collection.ts:142    ","version":"Next","tagName":"h3"},{"title":"firstN​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#firstn","content":" ▸ firstN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  As GameElement#firstN, except finds the first n elements within this collection and its contained elements recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Defined in​  boardzilla-core/src/board/element-collection.ts:163    ","version":"Next","tagName":"h3"},{"title":"last​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#last","content":" ▸ last&lt;F&gt;(className, ...finders): undefined | F  As GameElement#last, expect finds the last element within this collection and its contained elements recursively that matches the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  A matching element, if found  Defined in​  boardzilla-core/src/board/element-collection.ts:181    ","version":"Next","tagName":"h3"},{"title":"lastN​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#lastn","content":" ▸ lastN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  As GameElement#lastN, expect finds the last n elements within this collection and its contained elements recursively that match the arguments provided. See all for parameter details.  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionn\tnumber\tnumber of matches className\tElementClass&lt;F&gt;\t- ...finders\tElementFinder&lt;F&gt;[]\t-  Returns​  ElementCollection&lt;F&gt;  An ElementCollection of as many matching elements as can be found, up to n. The collection is typed to ElementCollection&lt;className&gt;if one was provided.  Defined in​  boardzilla-core/src/board/element-collection.ts:202    ","version":"Next","tagName":"h3"},{"title":"max​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#max","content":" ▸ max&lt;K&gt;(key): undefined | K  Returns the highest value of the provided key(s) found on any element in this collection.  Type parameters​  Name\tTypeK\textends string | number  Parameters​  Name\tType\tDescriptionkey\t{ [K2 in string | number | symbol]: T[K2] extends K ? K2 : never }[keyof T] | (t: T) =&gt; K\ta Sorter's used for comparing and extracting the max.  Returns​  undefined | K  Example  army.create(Soldier, 'a', { strength: 2, initiative: 3 }); army.create(Soldier, 'b', { strength: 3, initiative: 1 }); army.create(Soldier, 'c', { strength: 2, initiative: 2 }); army.all(Solider).max('strength'); // =&gt; 3   Defined in​  boardzilla-core/src/board/element-collection.ts:436    ","version":"Next","tagName":"h3"},{"title":"min​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#min","content":" ▸ min&lt;K&gt;(key): undefined | K  Returns the lowest value of the provided key(s) found on any element in this collection.  Type parameters​  Name\tTypeK\textends string | number  Parameters​  Name\tType\tDescriptionkey\t{ [K2 in string | number | symbol]: T[K2] extends K ? K2 : never }[keyof T] | (t: T) =&gt; K\ta Sorter's used for comparing and extracting the minimum.  Returns​  undefined | K  Example  army.create(Soldier, 'a', { strength: 2, initiative: 3 }); army.create(Soldier, 'b', { strength: 3, initiative: 1 }); army.create(Soldier, 'c', { strength: 2, initiative: 2 }); army.all(Solider).min('initiative'); // =&gt; 1   Defined in​  boardzilla-core/src/board/element-collection.ts:456    ","version":"Next","tagName":"h3"},{"title":"sum​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#sum","content":" ▸ sum(key): number  Returns the sum of all elements in this collection measured by a provided key  Parameters​  Name\tTypekey\tkeyof T | (e: T) =&gt; number  Returns​  number  Example  deck.create(Card, '2', { pips: 2 }); deck.create(Card, '3', { pips: 3 }); deck.all(Card).sum('pips'); // =&gt; 5   Defined in​  boardzilla-core/src/board/element-collection.ts:380    ","version":"Next","tagName":"h3"},{"title":"top​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#top","content":" ▸ top&lt;F&gt;(className, ...finders): undefined | F  Alias for first  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypeclassName\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  undefined | F  Defined in​  boardzilla-core/src/board/element-collection.ts:217    ","version":"Next","tagName":"h3"},{"title":"topN​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#topn","content":" ▸ topN&lt;F&gt;(n, className, ...finders): ElementCollection&lt;F&gt;  Alias for firstN  Type parameters​  Name\tTypeF\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypen\tnumber className\tElementClass&lt;F&gt; ...finders\tElementFinder&lt;F&gt;[]  Returns​  ElementCollection&lt;F&gt;  Defined in​  boardzilla-core/src/board/element-collection.ts:231    ","version":"Next","tagName":"h3"},{"title":"withHighest​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#withhighest","content":" ▸ withHighest(...attributes): undefined | T  Returns the element in this collection with the highest value of the provided key(s).  Parameters​  Name\tType\tDescription...attributes\tSorter&lt;T&gt;[]\tany number of Sorter's used for comparing. If multiple are provided, subsequent ones are used to break ties on earlier ones.  Returns​  undefined | T  Example  army.create(Soldier, 'a', { strength: 2, initiative: 3 }); army.create(Soldier, 'b', { strength: 3, initiative: 1 }); army.create(Soldier, 'c', { strength: 3, initiative: 2 }); army.all(Solider).withHighest('strength', 'initiative'); // =&gt; Soldier 'c'   Defined in​  boardzilla-core/src/board/element-collection.ts:399    ","version":"Next","tagName":"h3"},{"title":"withLowest​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#withlowest","content":" ▸ withLowest(...attributes): undefined | T  Returns the element in this collection with the lowest value of the provided key(s).  Parameters​  Name\tType\tDescription...attributes\tSorter&lt;T&gt;[]\tany number of Sorter's used for comparing. If multiple are provided, subsequent ones are used to break ties on earlier ones.  Returns​  undefined | T  Example  army.create(Soldier, 'a', { strength: 2, initiative: 3 }); army.create(Soldier, 'b', { strength: 3, initiative: 1 }); army.create(Soldier, 'c', { strength: 2, initiative: 2 }); army.all(Solider).withLowest('strength', 'initiative'); // =&gt; Soldier 'c'   Defined in​  boardzilla-core/src/board/element-collection.ts:418  ","version":"Next","tagName":"h3"},{"title":"Structure​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#structure","content":" ","version":"Next","tagName":"h2"},{"title":"putInto​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#putinto","content":" ▸ putInto(to, options?): void  Move all pieces in this collection into another element. See Piece#putInto.  Parameters​  Name\tTypeto\tGameElement&lt;any, any&gt; options?\tObject options.fromBottom?\tnumber options.fromTop?\tnumber options.position?\tnumber  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:487    ","version":"Next","tagName":"h3"},{"title":"remove​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#remove","content":" ▸ remove(): void  Remove all elements in this collection from the playing area and place them into Board#pile  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:476    ","version":"Next","tagName":"h3"},{"title":"sortBy​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#sortby","content":" ▸ sortBy&lt;E&gt;(key, direction?): ElementCollection&lt;T&gt;  Sorts this collection by some Sorter.  Type parameters​  Name\tTypeE\textends GameElement&lt;any, any&gt;  Parameters​  Name\tTypekey\tSorter&lt;E&gt; | Sorter&lt;E&gt;[] direction?\t&quot;desc&quot; | &quot;asc&quot;  Returns​  ElementCollection&lt;T&gt;  Defined in​  boardzilla-core/src/board/element-collection.ts:348    ","version":"Next","tagName":"h3"},{"title":"sortedBy​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#sortedby","content":" ▸ sortedBy(key, direction?): ElementCollection&lt;T&gt;  Returns a copy of this collection sorted by some Sorter.  Parameters​  Name\tType\tDefault valuekey\tSorter&lt;T&gt; | Sorter&lt;T&gt;[]\tundefined direction\t&quot;desc&quot; | &quot;asc&quot;\t&quot;asc&quot;  Returns​  ElementCollection&lt;T&gt;  Defined in​  boardzilla-core/src/board/element-collection.ts:367  ","version":"Next","tagName":"h3"},{"title":"UI​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#ui","content":" ","version":"Next","tagName":"h2"},{"title":"appearance​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#appearance","content":" ▸ appearance(appearance): void  Define the appearance of the elements in this collection. Any values provided override previous ones. See GameElement#appearance.  Parameters​  Name\tTypeappearance\tObject appearance.aspectRatio?\tnumber appearance.className?\tstring appearance.connections?\tObject appearance.connections.color?\tstring appearance.connections.fill?\tstring appearance.connections.label?\t(__namedParameters: { distance: number ; from: Space&lt;any, any&gt; ; to: Space&lt;any, any&gt; }) =&gt; ReactNode appearance.connections.labelScale?\tnumber appearance.connections.style?\t&quot;solid&quot; | &quot;double&quot; appearance.connections.thickness?\tnumber appearance.effects?\t{ attributes: Partial&lt;Pick&lt;T, &quot;name&quot; | &quot;player&quot; | &quot;row&quot; | &quot;column&quot; | { [K in string | number | symbol]: K extends keyof GameElement&lt;any, any&gt; ? never : T[K] extends Function ? never : K }[keyof T]&gt;&gt; ; className: string }[] appearance.render?\tfalse | (el: T) =&gt; null | Element appearance.tooltip?\tfalse | (el: T) =&gt; ReactNode appearance.zoomable?\tboolean | (el: T) =&gt; boolean  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:514    ","version":"Next","tagName":"h3"},{"title":"layout​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#layout","content":" ▸ layout(applyTo, attributes): void  Apply a layout to some of the elements directly contained within the elements in this collection. See GameElement#layout  Parameters​  Name\tTypeapplyTo\tT[&quot;_ui&quot;][&quot;layouts&quot;][number][&quot;applyTo&quot;] attributes\tPartial&lt;LayoutAttributes&lt;GameElement&lt;any, any&gt;&gt;&gt;  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:502  ","version":"Next","tagName":"h3"},{"title":"Visibility​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#visibility","content":" ","version":"Next","tagName":"h2"},{"title":"hideFrom​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#hidefrom","content":" ▸ hideFrom(...player): void  Hide these elements from the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | Player&lt;any, any&gt;[]  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:328    ","version":"Next","tagName":"h3"},{"title":"hideFromAll​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#hidefromall","content":" ▸ hideFromAll(): void  Hide this element from all players  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:317    ","version":"Next","tagName":"h3"},{"title":"showOnlyTo​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#showonlyto","content":" ▸ showOnlyTo(player): void  Show these elements only to the given player  Parameters​  Name\tTypeplayer\tnumber | Player&lt;any, any&gt;  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:285    ","version":"Next","tagName":"h3"},{"title":"showTo​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#showto","content":" ▸ showTo(...player): void  Show these elements to the given players without changing it's visibility to any other players.  Parameters​  Name\tType...player\tnumber[] | Player&lt;any, any&gt;[]  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:300    ","version":"Next","tagName":"h3"},{"title":"showToAll​","type":1,"pageTitle":"Class: ElementCollection<T>","url":"/api/classes/ElementCollection#showtoall","content":" ▸ showToAll(): void  Show these elements to all players  Returns​  void  Defined in​  boardzilla-core/src/board/element-collection.ts:275 ","version":"Next","tagName":"h3"},{"title":"Interface","type":0,"sectionRef":"#","url":"/introduction/interface","content":"Interface blah blah","keywords":"","version":"Next"},{"title":"Rules","type":0,"sectionRef":"#","url":"/introduction/rules","content":"Rules blah blah","keywords":"","version":"Next"},{"title":"Writing Hearts","type":0,"sectionRef":"#","url":"/introduction/writing-hearts","content":"Writing Hearts blah blah","keywords":"","version":"Next"},{"title":"@boardzilla/core","type":0,"sectionRef":"#","url":"/api/modules","content":"","keywords":"","version":"Next"},{"title":"Classes​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#classes","content":" ActionBoardDieElementCollectionGameGameElementPiecePlayerPlayerCollectionSpace  ","version":"Next","tagName":"h2"},{"title":"Actions​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#actions","content":" ","version":"Next","tagName":"h2"},{"title":"Argument​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#argument","content":" Ƭ Argument&lt;P&gt;: SingleArgument&lt;P&gt; | SingleArgument&lt;P&gt;[]  An argument that can be added to an Action. Each value is chosen by player or in some cases passed from a previous action. Arguments can be:  a numbera stringa booleana GameElementa Playeran array of one these in the case of a multi-choice selection  Type parameters​  Name\tTypeP\textends Player  Defined in​  boardzilla-core/src/action/action.ts:29    ","version":"Next","tagName":"h3"},{"title":"FollowUp​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#followup","content":" Ƭ FollowUp&lt;P&gt;: Object  A follow-up action  Type parameters​  Name\tTypeP\textends Player  Type declaration​  Name\tType\tDescriptionargs?\tRecord&lt;string, Argument&lt;P&gt;&gt;\tAn object containing arguments to be passed to the follow-up action. This is useful if there are multiple ways to trigger this follow-up that have variations. name\tstring\t- player?\tP\t-  Defined in​  boardzilla-core/src/action/action.ts:35  ","version":"Next","tagName":"h3"},{"title":"Board​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#board","content":" ","version":"Next","tagName":"h2"},{"title":"ElementFinder​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#elementfinder","content":" Ƭ ElementFinder&lt;T&gt;: (e: T) =&gt; boolean | ElementAttributes&lt;T&gt; &amp; { adjacent?: boolean ; empty?: boolean ; mine?: boolean ; owner?: T[&quot;player&quot;] ; withinDistance?: number } | string  A query filter can be one of 3 different forms:  string: will match elements with this namefunction: A function that accept an element as its argument and returns a boolean indicating whether it is a match, similar to Array#filter.object: will match elements whose properties match the provided properties. For example, deck.all(Card, {suit: 'H'}) would match allCard elements in deck with a suit property equal to &quot;H&quot;. There are some special property names allowed here: mine: true/false whether this element belongs to the player in whose context the query is madeempty true/false whether this element is emptyadjacent true/false whether this element is adjacent by a connection to the element on which the query method was called. E.g. france.other(Country, {adjacent: true}) will matchCountry elements that are connected to france by Space#connectTowithinDistance Similar to adjacent but uses the provided number to determine if a connection is possible between elements whose cost is not greater than the provided value  Type parameters​  Name\tTypeT\textends GameElement = any  Defined in​  boardzilla-core/src/board/element-collection.ts:40    ","version":"Next","tagName":"h3"},{"title":"Sorter​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#sorter","content":" Ƭ Sorter&lt;T&gt;: keyof T | (e: T) =&gt; number | string  Either the name of a property of the object that can be lexically sorted, or a function that will be called with the object to sort and must return a lexically sortable value.  Type parameters​  NameT  Defined in​  boardzilla-core/src/board/element-collection.ts:15    ","version":"Next","tagName":"h3"},{"title":"createBoardClasses​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#createboardclasses","content":" ▸ createBoardClasses&lt;P, B&gt;(): Object  Returns board classes for game with the correct types for board and player.  Type parameters​  Name\tTypeP\textends Player&lt;P, B&gt; B\textends Board&lt;P, B&gt;  Returns​  Object  Name\tTypeDie\t(ctx: Partial&lt;ElementContext&lt;P, any&gt;&gt;) =&gt; Die&lt;P, B&gt; Die.isGameElement\tboolean Die.prototype\tDie&lt;any, any&gt; Die.visibleAttributes\tundefined | string[] Die.revealWhenHidden\t[object Object] GameElement\t(ctx: Partial&lt;ElementContext&lt;P, any&gt;&gt;) =&gt; GameElement&lt;P, B&gt; GameElement.isGameElement\tboolean GameElement.prototype\tGameElement&lt;any, any&gt; GameElement.visibleAttributes\tundefined | string[] GameElement.revealWhenHidden\t[object Object] Piece\t(ctx: Partial&lt;ElementContext&lt;P, any&gt;&gt;) =&gt; Piece&lt;P, B&gt; Piece.isGameElement\tboolean Piece.prototype\tPiece&lt;any, any&gt; Piece.visibleAttributes\tundefined | string[] Piece.revealWhenHidden\t[object Object] Space\t(ctx: Partial&lt;ElementContext&lt;P, any&gt;&gt;) =&gt; Space&lt;P, B&gt; Space.isGameElement\tboolean Space.prototype\tSpace&lt;any, any&gt; Space.visibleAttributes\tundefined | string[] Space.revealWhenHidden\t[object Object]  Example  const {Space, Piece, Die} = createBoardClasses&lt;MyGamePlayer, MyGameBoard&gt;();   Defined in​  boardzilla-core/src/index.ts:37  ","version":"Next","tagName":"h3"},{"title":"Core​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#core","content":" ","version":"Next","tagName":"h2"},{"title":"createGame​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#creategame","content":" ▸ createGame&lt;P, B&gt;(playerClass, boardClass, gameCreator): SetupFunction&lt;P, B&gt;  Create your game  Type parameters​  Name\tTypeP\textends Player&lt;P, B&gt; B\textends Board&lt;P, B&gt;  Parameters​  Name\tType\tDescriptionplayerClass\tObject\tYour player class. This must extend Player. If you do not need any custom Player attributes or behaviour, simply put Player here. This becomes the P type generic used throughout Boardzilla. boardClass\tElementClass&lt;B&gt;\tYour board class. This must extend Board. If you do not need any custom Board attributes or behaviour, simply put Board here. This becomes the B type generic used throughout Boardzilla. gameCreator\t(game: Game&lt;P, B&gt;) =&gt; void\t-  Returns​  SetupFunction&lt;P, B&gt;  Defined in​  boardzilla-core/src/index.ts:80  ","version":"Next","tagName":"h3"},{"title":"Flow​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#flow","content":" ","version":"Next","tagName":"h2"},{"title":"FlowArguments​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#flowarguments","content":" Ƭ FlowArguments: Record&lt;string, any&gt;  Several flow methods accept an argument of this type. This is an object containing keys for every flow function that the game is in the middle of which recorded a value to the current scope. Functions that can add these values are forLoop, forEach, switchCase and playerActions. The name given to these functions will be the key used in the FlowArguments and its value will be the value of the current loop for loops, or the test value for switchCase, or the arguments to the action taken for playerActions.  Example  forLoop({ name: 'x', // x is declared here initial: 0, next: x =&gt; x + 1, while: x =&gt; x &lt; 3, do: forLoop({ name: 'y', initial: 0, next: y =&gt; y + 1, while: y =&gt; y &lt; 2, do: ({ x, y }) =&gt; { // x is available here as the value of the outer loop // and y will be the value of the inner loop } }) })   Defined in​  boardzilla-core/src/flow/flow.ts:43    ","version":"Next","tagName":"h3"},{"title":"FlowDefinition​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#flowdefinition","content":" Ƭ FlowDefinition&lt;P&gt;: FlowStep&lt;P&gt; | FlowStep&lt;P&gt;[]  FlowDefinition's are provided to the game and to all flow function to provide further flow logic inside the given flow. Any of the follow qualifies:  a plain function that accepts FlowArgumentsone of the Game#flowCommandsan array of any combination of the above  Type parameters​  Name\tTypeP\textends Player  Defined in​  boardzilla-core/src/flow/flow.ts:62    ","version":"Next","tagName":"h3"},{"title":"FlowStep​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#flowstep","content":" Ƭ FlowStep&lt;P&gt;: Flow&lt;P&gt; | (args: FlowArguments) =&gt; any  FlowStep's are provided to the game and to all flow function to provide further flow logic inside the given flow. Any of the follow qualifies:  a plain function that accepts FlowArgumentsone of the Game#flowCommands  Type parameters​  Name\tTypeP\textends Player  Defined in​  boardzilla-core/src/flow/flow.ts:52    ","version":"Next","tagName":"h3"},{"title":"Do​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#do","content":" • Const Do: Object  Functions for interrupting flows  Type declaration​  Name\tType\tDescriptionbreak\t() =&gt; LoopInterruptControl\tCall Do.break from anywhere inside a looping flow (loop, whileLoop, forLoop, forEach, eachPlayer) to interrupt the flow, skip the rest of the current loop iteration and exit this loop. This acts like Javascript's break. Example ts // each player can take a card but if the card is a match, it ends this round eachPlayer({ name: 'player', do: ( playerActions({ actions: [ { name: 'takeCard', do: ({ takeCard }) =&gt; if (takeCard.card.isMatch()) Do.break() }, 'pass' ]}), ]}); continue\t() =&gt; LoopInterruptControl\tCall Do.continue from anywhere inside a looping flow (loop, whileLoop, forLoop, forEach, eachPlayer) to interrupt the flow, skip the rest of the current loop iteration and repeat the loop with the next value. This acts like Javascript's continue. Example ts // each player can decide to shout, and if so, may subsequently apologize eachPlayer({ name: 'player', do: [ playerActions({ actions: [ { name: 'shout', do: Do.continue }, // if shouting, skip to the next player 'pass' ]}), playerActions({ actions: [ 'apologize', 'pass' ] }), ]}); repeat\t() =&gt; LoopInterruptControl\tCall Do.repeat from anywhere inside a looping flow (loop, whileLoop, forLoop, forEach, eachPlayer) to interrupt the flow, skip the rest of the current loop iteration and repeat the current loop with the same value. Example ts // each player can shout as many times as they like eachPlayer({ name: 'player', do: ( playerActions({ actions: [ { name: 'shout', do: Do.repeat }, 'pass' ]}), ]});   Defined in​  boardzilla-core/src/flow/enums.ts:6    ","version":"Next","tagName":"h3"},{"title":"eachPlayer​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#eachplayer","content":" ▸ eachPlayer&lt;P&gt;(options): default&lt;P&gt;  Create a loop that iterates over each player. This is the same as forEach with the additional behaviour of setting the current player on each iteration of the loop.  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionoptions\tObject\t- options.continueUntil?\t(p: P) =&gt; boolean\tIf specified, rather than loop through each player for a certain number of turns, the loop will continue until the provided condition is true. This function accepts the player for the current loop as its only argument. options.do\tFlowDefinition&lt;P&gt;\tThe part that gets repeated. This can contain any number of nested Flow functions. If this value is instead one of Do.repeat, Do.break or Do.continue, or a function that returns one of these, the current loop can be interupted. options.name\tstring\tThe current player will be added to the FlowArguments under a key with this name. options.nextPlayer?\t(p: P) =&gt; P\tDeclare a method to select the next player. If not specified this will follow turn order. See PlayerCollection#sortBy for more information. options.startingPlayer?\tP | (a: FlowArguments) =&gt; P\tDeclare the player to start the loop. If not specified, this will be the first player in turn order. options.turns?\tnumber\tIf specified, loop through each play this many times. Default is 1.  Returns​  default&lt;P&gt;  Example  eachPlayer({ name: 'biddingPlayer', do: // each player in turn has a chance to bid playerActions({ actions: [ 'bid', 'pass' ] }) });   Defined in​  boardzilla-core/src/flow/index.ts:197    ","version":"Next","tagName":"h3"},{"title":"everyPlayer​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#everyplayer","content":" ▸ everyPlayer&lt;P&gt;(options): default&lt;P&gt;  Create a flow for a set of players that can be done by all players simulataneously in any order. This is similiar to eachPlayer except that the players can act in any order.  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionoptions\tObject\t- options.do\tFlowDefinition&lt;P&gt;\tThe part that each player can perform. This can contain any number of nested Flow functions. Each player will go through the defined flows individually and may be at difference stages. The flow will complete when all players have completed this flow. If this value is instead one of Do.repeat, Do.break or Do.continue, or a function that returns one of these, the current loop can be interupted, regardless of what the other players have done. options.name?\tstring\tThe player acting will be added to the FlowArguments under a key with this name for flows within this do. options.players?\tP[]\tDeclare the players to perform this do. If not specified, this will be all players.  Returns​  default&lt;P&gt;  Example  everyPlayer({ name: 'passCardPlayer', do: ( // each player selects a card from hand or passes playerActions({ actions: [ 'selectCard', 'pass' ]}), ]});   Defined in​  boardzilla-core/src/flow/index.ts:282    ","version":"Next","tagName":"h3"},{"title":"forEach​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#foreach","content":" ▸ forEach&lt;P, T&gt;(options): default&lt;P, T&gt;  Create a loop that iterates over an array. This functions like a standardArray#forEach method.  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt; T\textends undefined | null | string | number | boolean | Player&lt;any, any&gt; | GameElement&lt;P, any&gt; | Serializable&lt;P&gt;[] | { [key: string]: Serializable&lt;P&gt;; }  Parameters​  Name\tType\tDescriptionoptions\tObject\t- options.collection\t(a: FlowArguments) =&gt; T[] | T[]\tA collection of values to loop over. This can be declared as an array or as a method that accept the FlowArguments used up to this point in the flow and return the collection Array. options.do\tFlowDefinition&lt;P&gt;\tThe part that gets repeated. This can contain any number of nested Flow functions. If this value is instead one of Do.repeat, Do.break or Do.continue, or a function that returns one of these, the current loop can be interupted. options.name\tstring\tThe current value of colleciton will be added to the FlowArguments under a key with this name.  Returns​  default&lt;P, T&gt;  Example  forEach({ name: 'card', collection: deck.all(Card), do: [ // show each card from the deck to player in turn ({ card }) =&gt; card.showTo(player), playerActions({ actions: [ 'chooseCard', 'pass', ]}), ]});   Defined in​  boardzilla-core/src/flow/index.ts:160    ","version":"Next","tagName":"h3"},{"title":"forLoop​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#forloop","content":" ▸ forLoop&lt;P, T&gt;(options): default&lt;P, T&gt;  Create a loop that sets a value and continues until that value meets some condition. This functions like a standard for loop.  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt; T\tSerializable&lt;P&gt;  Parameters​  Name\tType\tDescriptionoptions\tObject\t- options.do\tFlowDefinition&lt;P&gt;\tThe part that gets repeated. This can contain any number of nested Flow functions. If this value is instead one of Do.repeat, Do.break or Do.continue, or a function that returns one of these, the current loop can be interupted. options.initial\tT | (a: FlowArguments) =&gt; T\tThe initial value of the loop variable options.name\tstring\tThe current value of the loop variable will be added to the FlowArguments under a key with this name. options.next\t(a: T) =&gt; T\tA function that will be run on each loop and must return the new value of the loop variable options.while\t(a: T) =&gt; boolean\tA condition function that must return true for the loop to continue. If this evaluates to false when the loop begins, it will be skipped entirely. The condition will be evaluates at the start of each loop to determine whether it should continue.  Returns​  default&lt;P, T&gt;  Example  forLoop({ name: 'x', initial: 0, next: x =&gt; x + 1, while: x =&gt; x &lt; 3, do: ({ x }) =&gt; { // do something 3 times } })   Defined in​  boardzilla-core/src/flow/index.ts:130    ","version":"Next","tagName":"h3"},{"title":"ifElse​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#ifelse","content":" ▸ ifElse&lt;P&gt;(options): default&lt;P&gt;  Provides a branching flow on a condition. This operates like a standardif... else  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionoptions\tObject\t- options.do\tFlowDefinition&lt;P&gt;\tThe part that gets run if the condition is true. This can contain any number of nested Flow functions. If this value is instead one of Do.repeat, Do.break or Do.continue, or a function that returns one of these, the current loop can be interupted. options.else?\tFlowDefinition&lt;P&gt;\tAs do, but runs if the condition is false. Optional. options.if\t(r: Record&lt;any, any&gt;) =&gt; boolean\t- options.name?\tstring\t-  Returns​  default&lt;P&gt;  Defined in​  boardzilla-core/src/flow/index.ts:215    ","version":"Next","tagName":"h3"},{"title":"loop​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#loop","content":" ▸ loop&lt;P&gt;(...block): default&lt;P&gt;  Create a loop that continues until Do.break is called  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt;  Parameters​  Name\tType...block\tFlowStep&lt;P&gt;[]  Returns​  default&lt;P&gt;  Example  loop(playerActions({ actions: [ 'takeOneFromBag', { name: 'done': do: Do.break } ]}));   Defined in​  boardzilla-core/src/flow/index.ts:93    ","version":"Next","tagName":"h3"},{"title":"playerActions​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#playeractions","content":" ▸ playerActions&lt;P&gt;(options): default&lt;P&gt;  Stop the flow and wait for a player to act.  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionoptions\tObject\t- options.actions\t(string | { do?: FlowDefinition&lt;P&gt; ; name: string })[]\tAn object of possible actions. Each key is an action name defined in the actions of createGame. The value is a further flow defintion for the game to run if this action is taken. This can contain any number of nested Flow functions. If no further action is needed, this can be null. options.name?\tstring\tA unique name for this player action. If provided, this can be used for the UI to determine placement of messages for this action in Board#layoutStep. options.player?\tP | (args: Record&lt;string, any&gt;) =&gt; P\tWhich player can perform this action. If not provided, this defaults to the current player options.players?\tP[] | (args: Record&lt;string, any&gt;) =&gt; P[]\t- options.prompt?\tstring | (args: Record&lt;string, any&gt;) =&gt; string\tA prompting message for the player taking the action to decide between their choices. options.skipIf?\t&quot;always&quot; | &quot;never&quot; | &quot;only-one&quot;\tOne of 'always', 'never' or 'only-one' (Default 'always'). - only-one: If there is only valid choice in the choices given, the game will skip this choice, prompting the player for subsequent choices, if any, or completing the action otherwise. - always: Rather than present this choice directly, the player will be prompted with choices from the next choice in each action here, essentially expanding the choices ahead of time to save the player a step. - never: Always present this choice, even if the choice is forced  Returns​  default&lt;P&gt;  Defined in​  boardzilla-core/src/flow/index.ts:50    ","version":"Next","tagName":"h3"},{"title":"switchCase​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#switchcase","content":" ▸ switchCase&lt;P, T&gt;(options): default&lt;P, T&gt;  Provides a branching flow on a condition with multiple outcomes. This operates like a standard switch... case  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt; T\textends undefined | null | string | number | boolean | Player&lt;any, any&gt; | GameElement&lt;P, any&gt; | Serializable&lt;P&gt;[] | { [key: string]: Serializable&lt;P&gt;; }  Parameters​  Name\tType\tDescriptionoptions\tObject\t- options.cases\tSwitchCaseCases&lt;P, T&gt;\tAn array of conditions that will test whether they meet the conditions based on the evaluated switch and execute their do block. The case block can contain an eq which will test for equality with a provided value, or test which will test the value using a provided function that must return a boolean. Only the first one that meets the condition will run. The do can contain any number of nested Flow functions. options.default?\tFlowDefinition&lt;P&gt;\tIf no case qualifies, a default case can be provided. options.name?\tstring\tIf a name is provided, the value that results from evaluating switch will be added to the FlowArguments under a key with this name. options.switch\tT | (a: FlowArguments) =&gt; T\tExpression to evaluate for determining which case should run. This function accepts all FlowArguments.  Returns​  default&lt;P, T&gt;  Example  switchCase({ name: 'switch', switch: () =&gt; deck.top(Card)?.suit, cases: [ { eq: 'D', do: () =&gt; { /* ... diamonds */ }, { eq: 'H', do: () =&gt; { /* ... hearts */ }, { eq: 'S', do: () =&gt; { /* ... spades */ }, { eq: 'C', do: () =&gt; { /* ... clubs */ } ], default: () =&gt; { /* ... there is no card */ } })   Defined in​  boardzilla-core/src/flow/index.ts:253    ","version":"Next","tagName":"h3"},{"title":"union​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#union","content":" ▸ union(...queries): ElementCollection  Returns an ElementCollection by combining a list of GameElement's or ElementCollection's,  Parameters​  Name\tType...queries\t(undefined | GameElement&lt;any, any&gt; | ElementCollection&lt;any&gt;)[]  Returns​  ElementCollection  Defined in​  boardzilla-core/src/board/utils.ts:10    ","version":"Next","tagName":"h3"},{"title":"whileLoop​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#whileloop","content":" ▸ whileLoop&lt;P&gt;(options): default&lt;P&gt;  Create a loop that continues until some condition is true. This functions like a standard while loop.  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionoptions\tObject\t- options.do\tFlowDefinition&lt;P&gt;\tThe part that gets repeated. This can contain any number of nested Flow functions. If this value is instead one of Do.break, Do.break or Do.continue, or a function that returns one of these, the current loop can be interupted. options.while\t(a: FlowArguments) =&gt; boolean\tEither a simple boolean value or a condition function that must return true for the loop to continue. If this evaluates to false when the loop begins, it will be skipped entirely. The condition will be evaluated at the start of each loop to determine whether it should continue.  Returns​  default&lt;P&gt;  Example  whileLoop({ while: () =&gt; !bag.isEmpty(), do: ( playerActions({ actions: { takeOneFromBag: null, }}), )});   Defined in​  boardzilla-core/src/flow/index.ts:75  ","version":"Next","tagName":"h3"},{"title":"UI​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#ui","content":" ","version":"Next","tagName":"h2"},{"title":"ActionLayout​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#actionlayout","content":" Ƭ ActionLayout: { bottom?: number ; element: GameElement ; gap?: number ; height?: number ; left?: number ; noAnchor?: string[] ; position?: &quot;inset&quot; | &quot;beside&quot; | &quot;stack&quot; ; right?: number ; top?: number ; width?: number } &amp; { position?: &quot;inset&quot; } &amp; { gap?: never ; left?: number ; right?: never } | { gap?: never ; left?: never ; right?: number } &amp; { bottom?: never ; gap?: never ; top?: number } | { bottom?: number ; gap?: never ; top?: never } | { bottom?: never ; gap?: number ; left?: never ; position: &quot;beside&quot; | &quot;stack&quot; ; right?: never ; top?: never }  Type for layout of player controls  Defined in​  boardzilla-core/src/board/board.ts:18    ","version":"Next","tagName":"h3"},{"title":"Box​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#box","content":" Ƭ Box: Object  A Box size and position relative to a container  Type declaration​  Name\tTypeheight\tnumber left\tnumber top\tnumber width\tnumber  Defined in​  boardzilla-core/src/board/element.ts:53    ","version":"Next","tagName":"h3"},{"title":"LayoutAttributes​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#layoutattributes","content":" Ƭ LayoutAttributes&lt;T&gt;: Object  List of attributes used to create a new layout in {#link GameElement#layout}.  Type parameters​  Name\tTypeT\textends GameElement  Type declaration​  Name\tType\tDescriptionalignment\t&quot;top&quot; | &quot;bottom&quot; | &quot;left&quot; | &quot;right&quot; | &quot;top left&quot; | &quot;bottom left&quot; | &quot;top right&quot; | &quot;bottom right&quot; | &quot;center&quot;\tIf more room is provided than needed, this determines how the elements will align themselves within the area. area?\tBox\tA box defining the layout's bounds within this element. Unless scaling is &quot;none&quot;, no elements will ever overflow this area. If unspecified, the entire area is used, i.e. { left: 0, top: 0, width: 100, height: 100 } aspectRatio?\tnumber\tAspect ratio for each element placed in this layout. This value is a ratio of width over height. Elements will adhere to this ratio unless they have their own specified aspectRatio in their GameElement#appearance. This value is ignored if size is provided. columns?\tnumber | { max?: number ; min: number } | { max: number ; min?: number }\tColumns, as per rows direction\t&quot;square&quot; | &quot;ltr&quot; | &quot;rtl&quot; | &quot;rtl-btt&quot; | &quot;ltr-btt&quot; | &quot;ttb&quot; | &quot;ttb-rtl&quot; | &quot;btt&quot; | &quot;btt-rtl&quot;\tSpecifies the direction in which elements placed here should fill up the rows and columns of the layout. Rows or columns will increase to their specified maximum as needed. Therefore if, for example, direction is &quot;ltr&quot; and columns has no maximum, there will never be a second row added. Values are: - square: fill rows and columns equally to maintain as square a grid as possible (default) - ltr: fill columns left to right, then rows top to bottom once maximum columns reached - rtl: fill columns right to left, then rows top to bottom once maximum columns reached - ltr-btt: fill columns left to right, then rows bottom to top once maximum columns reached - rtl-btt: fill columns right to left, then rows bottom to top once maximum columns reached - ttb: fill rows top to bottom, then columns left to right once maximum rows reached - btt: fill rows bottom to top, then columns left to right once maximum rows reached - ttb-rtl: fill rows top to bottom, then columns right to left once maximum rows reached - btt-rtl: fill rows bottom to top, then columns right to left once maximum rows reached drawer?\t{ closeDirection: &quot;up&quot; | &quot;down&quot; | &quot;left&quot; | &quot;right&quot; ; closeIf?: (actions: { args: Record&lt;string, Argument&lt;Player&gt;&gt; ; name: string }[]) =&gt; boolean ; closedTab?: (el: T) =&gt; React.ReactNode | false ; openIf?: (actions: { args: Record&lt;string, Argument&lt;Player&gt;&gt; ; name: string }[]) =&gt; boolean ; tab: (el: T) =&gt; React.ReactNode | false }\tSpecifies that this layout should inhabit a drawer, a collapsible area that can be hidden to save overall space on the board. drawer.closeDirection\t&quot;up&quot; | &quot;down&quot; | &quot;left&quot; | &quot;right&quot;\t- drawer.closeIf?\t(actions: { args: Record&lt;string, Argument&lt;Player&gt;&gt; ; name: string }[]) =&gt; boolean\t- drawer.closedTab?\t(el: T) =&gt; React.ReactNode | false\t- drawer.openIf?\t(actions: { args: Record&lt;string, Argument&lt;Player&gt;&gt; ; name: string }[]) =&gt; boolean\t- drawer.tab\t(el: T) =&gt; React.ReactNode | false\t- gap?\tnumber | { x: number ; y: number }\tIf provided, this places a gap between elements. If scaling is 'fill', this is considered a maximum but may shrink or even become negative in order to fill the area. This value is an absolute percentage of the board's size so that gaps specified on different layouts with the same value will exactly match haphazardly?\tnumber\tA number specifying an amount of randomness added to the layout to provide a more natural looking placement limit?\tnumber\tIf specified, no more than limit items will be visible. This is useful for displaying e.g. decks of cards where showing only 2 or 3 cards provides a deck-like appearance without needed to render more cards underneath that aren't visible. margin?\tnumber | { bottom: number ; left: number ; right: number ; top: number }\tInstead of providing area, providing a margin defines the bounding box in terms of a margin around the edges of this element. This value is an absolute percentage of the board's size so that margins specified on different layouts with the same value will exactly match. maxOverlap?\tnumber\tIf scaling is &quot;fill&quot;, this will limit the total amount of overlap if elements are squished together in their space before they will start to shrink to fit. This is useful for e.g. cards that can overlap but that must leave a certain amount visible to clearly identify the card. offsetColumn?\tVector\tInstead of gap, providing an offsetColumn/offsetRow specifies that the contained elements must offset one another by a specified amount as a percentage of the elements size, i.e. offsetColumn=100 is equivalent to a gap of 0. This allows non-orthogonal grids like hex or diamond. If one of offsetColumn/offsetRow is provided but not the other, the unspecified one will be 90° to the one specified. Like gap, if scaling is set to fill, these offsets may squish to fill space. offsetRow?\tVector\tAs offsetColumn rows?\tnumber | { max?: number ; min: number } | { max: number ; min?: number }\tThe number of rows to allot for placing elements in this layout. If a number is provided, this is fixed. If min/max values are provided, the layout will allot at least min and up to max as needed. If min is omitted, a minimum of 1 is implied. If max is omitted, as many are used as needed. Default is {min: 1, max: Infinity}. scaling\t&quot;fit&quot; | &quot;fill&quot; | &quot;none&quot;\tScaling strategy for the elements placed in this layout. - none: Elements use the size value and do not scale. If no size is provided, this behaves like fit (default) - fit: Elements scale up or down to fit within the area alloted without squshing - fill: Elements scale up or down to completely fill the area, squishing themselves together as needed along one dimension. showBoundingBox?\tstring\tSet to true for debugging. Creates a visible box on screen around the defined area, tagged with the provided string. size?\t{ height: number ; width: number }\tSize alloted for each element placed in this layout. Unless scaling is &quot;none&quot;, a size provided here will be used only to define an aspect ratio but may scale up or down to fit as needed. As such, when using any scaling other than &quot;none&quot;, providing an aspectRatio instead is sufficient. size.height\tnumber\t- size.width\tnumber\t- slots?\tBox[]\tIf supplied, this overrides all other attributes to define a set of strictly defined boxes for placing each element. Any elements that exceed the number of slots provided are not displayed. sticky?\tboolean\tSet to true to prevent these elements from automatically changing position within the container grid.  Defined in​  boardzilla-core/src/board/element.ts:102    ","version":"Next","tagName":"h3"},{"title":"Vector​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#vector","content":" Ƭ Vector: Object  An (x, y) Vector  Type declaration​  Name\tTypex\tnumber y\tnumber  Defined in​  boardzilla-core/src/board/element.ts:58    ","version":"Next","tagName":"h3"},{"title":"choiceSetting​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#choicesetting","content":" ▸ choiceSetting(label, choices): (__namedParameters: SetupComponentProps) =&gt; Element  Provide a game setting that can be selected from a list of options.  Parameters​  Name\tType\tDescriptionlabel\tstring\tText label to appear next to the option list choices\tRecord&lt;string, string&gt;\tList of choices as key-value pairs, where the value will be the text choice for the host and the key will the result of calling Game#setting  Returns​  fn  ▸ («destructured»): Element  Parameters​  Name\tType«destructured»\tSetupComponentProps  Returns​  Element  Defined in​  boardzilla-core/src/ui/setup/components/settingComponents.tsx:30    ","version":"Next","tagName":"h3"},{"title":"numberSetting​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#numbersetting","content":" ▸ numberSetting(label, min, max): (__namedParameters: SetupComponentProps) =&gt; Element  Provide a game setting that can be selected as a number.  Parameters​  Name\tType\tDescriptionlabel\tstring\tText label to appear next to the number select min\tnumber\tThe minimum number allowed max\tnumber\tThe maximum number allowed  Returns​  fn  ▸ («destructured»): Element  Parameters​  Name\tType«destructured»\tSetupComponentProps  Returns​  Element  Defined in​  boardzilla-core/src/ui/setup/components/settingComponents.tsx:65    ","version":"Next","tagName":"h3"},{"title":"render​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#render","content":" ▸ render&lt;P, B&gt;(setup, options): void  The core function called to customize the game's UI.  Type parameters​  Name\tTypeP\textends Player&lt;any, any&gt; B\textends Board&lt;any, any&gt;  Parameters​  Name\tType\tDescriptionsetup\tSetupFunction&lt;P, B&gt;\t- options\tObject options.boardSizes?\t(screenX: number, screenY: number, mobile: boolean) =&gt; BoardSize\tA function that determines what board size to use based on the player's device and viewport. The function will take the following arguments: - screenX: The player's view port width - screenY: The player's view port height - mobile: true if using a mobile device The function should return a string indicating the layout to use, this will be cached and sent to the layout function. options.layout?\t(board: B, player: P, boardSize: string) =&gt; void\tA function for declaring all UI customization in the game. Typically this will include calls to GameElement#layout, GameElement#appearance, Board#layoutStep and Board#layoutAction. options.settings?\tRecord&lt;string, (p: SetupComponentProps) =&gt; Element&gt;\tDefine your game's settings that the host can customize. This is an object consisting of custom settings. The key is a name for this setting that can be used in Game#setting to retrieve the setting's value for this game. The object is the result of calling one of the setting functions toggleSetting, numberSetting, textSetting or choiceSetting.  Returns​  void  Defined in​  boardzilla-core/src/ui/index.tsx:608    ","version":"Next","tagName":"h3"},{"title":"textSetting​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#textsetting","content":" ▸ textSetting(label): (__namedParameters: SetupComponentProps) =&gt; Element  Provide a game setting that can be entered as text.  Parameters​  Name\tType\tDescriptionlabel\tstring\tText label to appear next to the text box  Returns​  fn  ▸ («destructured»): Element  Parameters​  Name\tType«destructured»\tSetupComponentProps  Returns​  Element  Defined in​  boardzilla-core/src/ui/setup/components/settingComponents.tsx:51    ","version":"Next","tagName":"h3"},{"title":"toggleSetting​","type":1,"pageTitle":"@boardzilla/core","url":"/api/modules#togglesetting","content":" ▸ toggleSetting(label): (__namedParameters: SetupComponentProps) =&gt; Element  Provide a game setting that can be turned on or off.  Parameters​  Name\tType\tDescriptionlabel\tstring\tText label to appear next to the toggle  Returns​  fn  ▸ («destructured»): Element  Parameters​  Name\tType«destructured»\tSetupComponentProps  Returns​  Element  Defined in​  boardzilla-core/src/ui/setup/components/settingComponents.tsx:9 ","version":"Next","tagName":"h3"},{"title":"Manage Docs Versions","type":0,"sectionRef":"#","url":"/testing/testing-your-game","content":"Manage Docs Versions","keywords":"","version":"Next"}],"options":{"id":"default"}}