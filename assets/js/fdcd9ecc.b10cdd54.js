"use strict";(self.webpackChunkboardzilla_docs=self.webpackChunkboardzilla_docs||[]).push([[977],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>h});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},k="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},N=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,m=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),k=p(a),N=l,h=k["".concat(m,".").concat(N)]||k[N]||s[N]||r;return a?n.createElement(h,i(i({ref:t},o),{},{components:a})):n.createElement(h,i({ref:t},o))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=N;var d={};for(var m in t)hasOwnProperty.call(t,m)&&(d[m]=t[m]);d.originalType=e,d[k]="string"==typeof e?e:l,i[1]=d;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},8331:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const r={id:"GameElement",title:"Class: GameElement<P>",sidebar_label:"GameElement",sidebar_position:5,custom_edit_url:null},i=void 0,d={unversionedId:"api/classes/GameElement",id:"api/classes/GameElement",title:"Class: GameElement<P>",description:"Abstract base class for all Board elements. Use Space or Piece as the base for subclassing your own elements.",source:"@site/docs/api/classes/GameElement.md",sourceDirName:"api/classes",slug:"/api/classes/GameElement",permalink:"/api/classes/GameElement",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"GameElement",title:"Class: GameElement<P>",sidebar_label:"GameElement",sidebar_position:5,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Flow",permalink:"/api/classes/Flow"},next:{title:"Piece",permalink:"/api/classes/Piece"}},m={},p=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Hierarchy",id:"hierarchy",level:2},{value:"Other",id:"other",level:2},{value:"_ctx",id:"_ctx",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"_t",id:"_t",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"_ui",id:"_ui",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"_visible",id:"_visible",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"hiddenAttributes",id:"hiddenattributes",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"isGameElement",id:"isgameelement",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"_otherFinder",id:"_otherfinder",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"atBranch",id:"atbranch",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"atID",id:"atid",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"branch",id:"branch",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"createChildrenFromJSON",id:"createchildrenfromjson",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"createElement",id:"createelement",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"doneMoving",id:"donemoving",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"getArea",id:"getarea",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"getLayoutItems",id:"getlayoutitems",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"getMoveTransform",id:"getmovetransform",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"hidden",id:"hidden",level:3},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"resetUI",id:"resetui",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"toJSON",id:"tojson",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"Queries",id:"queries",level:2},{value:"name",id:"name",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"player",id:"player",level:3},{value:"Defined in",id:"defined-in-20",level:4},{value:"mine",id:"mine",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"all",id:"all",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"bottom",id:"bottom",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"bottomN",id:"bottomn",level:3},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"container",id:"container",level:3},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"first",id:"first",level:3},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"firstN",id:"firstn",level:3},{value:"Type parameters",id:"type-parameters-12",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"Type parameters",id:"type-parameters-13",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"has",id:"has",level:3},{value:"Type parameters",id:"type-parameters-14",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"Type parameters",id:"type-parameters-15",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"last",id:"last",level:3},{value:"Type parameters",id:"type-parameters-16",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"Type parameters",id:"type-parameters-17",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"lastN",id:"lastn",level:3},{value:"Type parameters",id:"type-parameters-18",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"Type parameters",id:"type-parameters-19",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"others",id:"others",level:3},{value:"Type parameters",id:"type-parameters-20",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"Type parameters",id:"type-parameters-21",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"top",id:"top",level:3},{value:"Type parameters",id:"type-parameters-22",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"Type parameters",id:"type-parameters-23",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"topN",id:"topn",level:3},{value:"Type parameters",id:"type-parameters-24",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"Type parameters",id:"type-parameters-25",level:4},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"Structure",id:"structure",level:2},{value:"constructor",id:"constructor",level:3},{value:"Type parameters",id:"type-parameters-26",level:4},{value:"Parameters",id:"parameters-30",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"board",id:"board",level:3},{value:"Defined in",id:"defined-in-46",level:4},{value:"create",id:"create",level:3},{value:"Type parameters",id:"type-parameters-27",level:4},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"createMany",id:"createmany",level:3},{value:"Type parameters",id:"type-parameters-28",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"isDescendantOf",id:"isdescendantof",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"isEmpty",id:"isempty",level:3},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"owner",id:"owner",level:3},{value:"Returns",id:"returns-41",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"setOrder",id:"setorder",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"shuffle",id:"shuffle",level:3},{value:"Returns",id:"returns-43",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"sortBy",id:"sortby",level:3},{value:"Type parameters",id:"type-parameters-29",level:4},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"UI",id:"ui",level:2},{value:"absoluteTransform",id:"absolutetransform",level:3},{value:"Returns",id:"returns-45",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"appearance",id:"appearance",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"applyLayouts",id:"applylayouts",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"layout",id:"layout",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"relativeTransformToBoard",id:"relativetransformtoboard",level:3},{value:"Returns",id:"returns-49",level:4},{value:"Defined in",id:"defined-in-59",level:4},{value:"Visibility",id:"visibility",level:2},{value:"hideFrom",id:"hidefrom",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-50",level:4},{value:"Defined in",id:"defined-in-60",level:4},{value:"hideFromAll",id:"hidefromall",level:3},{value:"Returns",id:"returns-51",level:4},{value:"Defined in",id:"defined-in-61",level:4},{value:"isVisible",id:"isvisible",level:3},{value:"Returns",id:"returns-52",level:4},{value:"Defined in",id:"defined-in-62",level:4},{value:"isVisibleTo",id:"isvisibleto",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-53",level:4},{value:"Defined in",id:"defined-in-63",level:4},{value:"showOnlyTo",id:"showonlyto",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-54",level:4},{value:"Defined in",id:"defined-in-64",level:4},{value:"showTo",id:"showto",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-55",level:4},{value:"Defined in",id:"defined-in-65",level:4},{value:"showToAll",id:"showtoall",level:3},{value:"Returns",id:"returns-56",level:4},{value:"Defined in",id:"defined-in-66",level:4},{value:"hide",id:"hide",level:3},{value:"Type parameters",id:"type-parameters-30",level:4},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-57",level:4},{value:"Defined in",id:"defined-in-67",level:4}],o={toc:p},k="wrapper";function s(e){let{components:t,...a}=e;return(0,l.kt)(k,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Abstract base class for all Board elements. Use ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/Space"},"Space")," or ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/Piece"},"Piece")," as the base for subclassing your own elements."),(0,l.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"P")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,l.kt)("inlineCode",{parentName:"a"},"Player")))))),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"GameElement"))),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/Space"},(0,l.kt)("inlineCode",{parentName:"a"},"Space"))),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/Piece"},(0,l.kt)("inlineCode",{parentName:"a"},"Piece"))))),(0,l.kt)("h2",{id:"other"},"Other"),(0,l.kt)("h3",{id:"_ctx"},"_","ctx"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"_","ctx"),": ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#elementcontext"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementContext")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("p",null,"ctx shared for all elements in the tree"),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L54"},"boardzilla-core/game/board/element.ts:54")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"_t"},"_","t"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"_","t"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")),(0,l.kt)("p",null,"tree info"),(0,l.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"children")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"graph?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"UndirectedGraph"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"Attributes"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Attributes"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Attributes"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"id")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"order?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'"normal"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"stacking"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"parent?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"setId")),(0,l.kt)("td",{parentName:"tr",align:"left"},"(",(0,l.kt)("inlineCode",{parentName:"td"},"id"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,l.kt)("inlineCode",{parentName:"td"},"void"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"was?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string"))))),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L60"},"boardzilla-core/game/board/element.ts:60")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"_ui"},"_","ui"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"_","ui"),": ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#elementui"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementUI")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L680"},"boardzilla-core/game/board/element.ts:680")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"_visible"},"_","visible"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"_","visible"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")),(0,l.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"default")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"except?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"),"[]")))),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L71"},"boardzilla-core/game/board/element.ts:71")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"hiddenattributes"},"hiddenAttributes"),(0,l.kt)("p",null,"\u25aa ",(0,l.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,l.kt)("strong",{parentName:"p"},"hiddenAttributes"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L80"},"boardzilla-core/game/board/element.ts:80")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isgameelement"},"isGameElement"),(0,l.kt)("p",null,"\u25aa ",(0,l.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,l.kt)("strong",{parentName:"p"},"isGameElement"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"true")),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L77"},"boardzilla-core/game/board/element.ts:77")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"_otherfinder"},"_","otherFinder"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"_otherFinder"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),">","[]")))),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L295"},"boardzilla-core/game/board/element.ts:295")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"atbranch"},"atBranch"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"atBranch"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"b"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("p",null,"Returns the element at the given position returned by ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#branch"},"branch")),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"b")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string"))))),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L580"},"boardzilla-core/game/board/element.ts:580")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"atid"},"atID"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"atID"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"id"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("p",null,"Returns the element for the given id"),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"id")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))))),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L596"},"boardzilla-core/game/board/element.ts:596")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"branch"},"branch"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"branch"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"Returns a string identifying the tree position of the element suitable for\nanonymous reference"),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L565"},"boardzilla-core/game/board/element.ts:565")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"createchildrenfromjson"},"createChildrenFromJSON"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"createChildrenFromJSON"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"childrenJSON"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"branch"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"childrenJSON")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementjson"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementJSON")),"[]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"branch")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string"))))),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L639"},"boardzilla-core/game/board/element.ts:639")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"createelement"},"createElement"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"createElement"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"attrs?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"T")),(0,l.kt)("p",null,"Base element creation method"),(0,l.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attrs?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"Pick"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"T"),", ",(0,l.kt)("inlineCode",{parentName:"td"},'"name"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"player"')," ","|"," { ","[K in string ","|"," number ","|"," symbol]",": K extends keyof GameElement<P",">"," ? never : T","[K]"," extends Function ? never : K }","[keyof ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),"]",">",">")))),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"T")),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L546"},"boardzilla-core/game/board/element.ts:546")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"donemoving"},"doneMoving"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"doneMoving"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"returns-6"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L1303"},"boardzilla-core/game/board/element.ts:1303")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getarea"},"getArea"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getArea"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"attributes"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box"))),(0,l.kt)("p",null,"calculate working area"),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Object"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.area?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.margin?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")," ","|"," { ",(0,l.kt)("inlineCode",{parentName:"td"},"bottom"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"left"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"right"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"top"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number"),"  }")))),(0,l.kt)("h4",{id:"returns-7"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box"))),(0,l.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L1235"},"boardzilla-core/game/board/element.ts:1235")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getlayoutitems"},"getLayoutItems"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getLayoutItems"),"(): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">","[][]"),(0,l.kt)("h4",{id:"returns-8"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">","[][]"),(0,l.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L1212"},"boardzilla-core/game/board/element.ts:1212")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getmovetransform"},"getMoveTransform"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getMoveTransform"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," { ",(0,l.kt)("inlineCode",{parentName:"p"},"scaleX"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"p"},"scaleY"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"p"},"translateX"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"p"},"translateY"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"  }"),(0,l.kt)("h4",{id:"returns-9"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," { ",(0,l.kt)("inlineCode",{parentName:"p"},"scaleX"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"p"},"scaleY"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"p"},"translateX"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"p"},"translateY"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"  }"),(0,l.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L1289"},"boardzilla-core/game/board/element.ts:1289")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"hidden"},"hidden"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"hidden"),"(): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"returns-10"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L483"},"boardzilla-core/game/board/element.ts:483")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"resetui"},"resetUI"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"resetUI"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"returns-11"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L686"},"boardzilla-core/game/board/element.ts:686")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"tojson"},"toJSON"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"toJSON"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"seenBy?"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#elementjson"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementJSON"))),(0,l.kt)("p",null,"JSON representation"),(0,l.kt)("h4",{id:"parameters-6"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"seenBy?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"optional player position viewing the board")))),(0,l.kt)("h4",{id:"returns-12"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/modules#elementjson"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementJSON"))),(0,l.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L613"},"boardzilla-core/game/board/element.ts:613")),(0,l.kt)("h2",{id:"queries"},"Queries"),(0,l.kt)("h3",{id:"name"},"name"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"name"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"Element name, used in queries to quickly refer to a given element"),(0,l.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L34"},"boardzilla-core/game/board/element.ts:34")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"player"},"player"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"player"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"P")),(0,l.kt)("p",null,"Player with which this element is identified. This does not affect\nbehaviour but will mark the element as ",(0,l.kt)("inlineCode",{parentName:"p"},"mine")," in queries in the context of\nthis player."),(0,l.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L42"},"boardzilla-core/game/board/element.ts:42")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"mine"},"mine"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," ",(0,l.kt)("strong",{parentName:"p"},"mine"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,'Returns whether this element belongs to the "current" player. A player is\nconsidered the current player if this is called in the context of an action\ntaken by a given player, or if this is called from a given player\'s view of\nthe board. It is an error to call this method when not in a player\ncontext. When querying for elements using ',(0,l.kt)("a",{parentName:"p",href:"/api/modules#elementfinder"},"ElementFinder")," such as\n",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"all")," and ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#first"},"first"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#mine"},"mine")," is available as a search key\nthat accepts a value of true/false"),(0,l.kt)("h4",{id:"returns-13"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L375"},"boardzilla-core/game/board/element.ts:375")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"all"},"all"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"all"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("p",null,"Finds all elements within this element recursively that match the arguments\nprovided."),(0,l.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-7"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Optionally provide a class as the first argument as a class filter. This will only match elements which are instances of the provided class")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"All other parameters are filters. See ",(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},"ElementFinder")," for more information.")))),(0,l.kt)("h4",{id:"returns-14"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},"ElementCollection")," of as many matching elements as can be\nfound. The collection is typed to ",(0,l.kt)("inlineCode",{parentName:"p"},"ElementCollection<className>")," if one was\nprovided."),(0,l.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L128"},"boardzilla-core/game/board/element.ts:128")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"all"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-8"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-15"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L129"},"boardzilla-core/game/board/element.ts:129")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"bottom"},"bottom"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"bottom"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"F")),(0,l.kt)("p",null,"Alias for ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#last"},"last")),(0,l.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-9"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-16"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"F")),(0,l.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L239"},"boardzilla-core/game/board/element.ts:239")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"bottom"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"type-parameters-6"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-10"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-17"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L240"},"boardzilla-core/game/board/element.ts:240")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"bottomn"},"bottomN"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"bottomN"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("p",null,"Alias for ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#lastn"},"lastN")),(0,l.kt)("h4",{id:"type-parameters-7"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-11"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-18"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L252"},"boardzilla-core/game/board/element.ts:252")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"bottomN"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("h4",{id:"type-parameters-8"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-12"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-19"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L253"},"boardzilla-core/game/board/element.ts:253")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"container"},"container"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"container"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"T")),(0,l.kt)("p",null,"Returns this elements parent."),(0,l.kt)("h4",{id:"type-parameters-9"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-13"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"If provided, searches up the parent tree to find the first matching element. E.g. if a Token is placed on a Card in a players Tableau. calling ",(0,l.kt)("inlineCode",{parentName:"td"},"token.container(Tableau)")," can be used to find the grandparent.")))),(0,l.kt)("h4",{id:"returns-20"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"T")),(0,l.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L318"},"boardzilla-core/game/board/element.ts:318")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"first"},"first"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"first"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"F")),(0,l.kt)("p",null,"Finds the first element within this element recursively that matches the arguments\nprovided. See ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"all")," for parameter details."),(0,l.kt)("h4",{id:"type-parameters-10"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-14"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-21"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"F")),(0,l.kt)("p",null,"A matching element, if found"),(0,l.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L143"},"boardzilla-core/game/board/element.ts:143")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"first"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"type-parameters-11"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-15"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-22"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L144"},"boardzilla-core/game/board/element.ts:144")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"firstn"},"firstN"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"firstN"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("p",null,"Finds the first ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," elements within this element recursively that match the arguments\nprovided. See ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"all")," for parameter details."),(0,l.kt)("h4",{id:"type-parameters-12"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-16"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"number of matches")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,l.kt)("h4",{id:"returns-23"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},"ElementCollection")," of as many matching elements as can be\nfound, up to ",(0,l.kt)("inlineCode",{parentName:"p"},"n"),". The collection is typed to ",(0,l.kt)("inlineCode",{parentName:"p"},"ElementCollection<className>"),"\nif one was provided."),(0,l.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L162"},"boardzilla-core/game/board/element.ts:162")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"firstN"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"type-parameters-13"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-17"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-24"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L163"},"boardzilla-core/game/board/element.ts:163")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"has"},"has"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"has"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Return whether any element within this element recursively matches the arguments\nprovided. See ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"all")," for parameter details."),(0,l.kt)("h4",{id:"type-parameters-14"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-18"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-25"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L284"},"boardzilla-core/game/board/element.ts:284")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"has"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"type-parameters-15"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-19"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-26"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L285"},"boardzilla-core/game/board/element.ts:285")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"last"},"last"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"last"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"F")),(0,l.kt)("p",null,"Finds the last element within this element recursively that matches the arguments\nprovided. See ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"all")," for parameter details."),(0,l.kt)("h4",{id:"type-parameters-16"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-20"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-27"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"F")),(0,l.kt)("p",null,"A matching element, if found"),(0,l.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L178"},"boardzilla-core/game/board/element.ts:178")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"last"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"type-parameters-17"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-21"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-28"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L179"},"boardzilla-core/game/board/element.ts:179")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"lastn"},"lastN"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"lastN"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("p",null,"Finds the last ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," elements within this element recursively that match the arguments\nprovided. See ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"all")," for parameter details."),(0,l.kt)("h4",{id:"type-parameters-18"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-22"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"number of matches")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,l.kt)("h4",{id:"returns-29"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},"ElementCollection")," of as many matching elements as can be\nfound, up to ",(0,l.kt)("inlineCode",{parentName:"p"},"n"),". The collection is typed to ",(0,l.kt)("inlineCode",{parentName:"p"},"ElementCollection<className>"),"\nif one was provided."),(0,l.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L197"},"boardzilla-core/game/board/element.ts:197")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"lastN"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("h4",{id:"type-parameters-19"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-23"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-30"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L198"},"boardzilla-core/game/board/element.ts:198")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"others"},"others"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"others"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("p",null,'Finds "sibling" elements (elements that are directly inside the parent of this element) that match the arguments\nprovided. See ',(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"all")," for parameter details."),(0,l.kt)("h4",{id:"type-parameters-20"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-24"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-31"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L267"},"boardzilla-core/game/board/element.ts:267")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"others"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"type-parameters-21"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-25"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-32"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L268"},"boardzilla-core/game/board/element.ts:268")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"top"},"top"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"top"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"F")),(0,l.kt)("p",null,"Alias for ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#first"},"first")),(0,l.kt)("h4",{id:"type-parameters-22"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-26"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-33"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"F")),(0,l.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L212"},"boardzilla-core/game/board/element.ts:212")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"top"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"type-parameters-23"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-27"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-34"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L213"},"boardzilla-core/game/board/element.ts:213")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"topn"},"topN"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"topN"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("p",null,"Alias for ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#firstn"},"firstN")),(0,l.kt)("h4",{id:"type-parameters-24"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-28"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,l.kt)("h4",{id:"returns-35"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,l.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L225"},"boardzilla-core/game/board/element.ts:225")),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"topN"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"type-parameters-25"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"F")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-29"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...finders")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">","[]")))),(0,l.kt)("h4",{id:"returns-36"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L226"},"boardzilla-core/game/board/element.ts:226")),(0,l.kt)("h2",{id:"structure"},"Structure"),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"new GameElement"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"ctx"),")"),(0,l.kt)("p",null,"Do not use the constructor directly. Instead Call ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#create"},"GameElement#create")," or ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#createmany"},"GameElement#createMany")," on the element in\nwhich you want to create a new element."),(0,l.kt)("h4",{id:"type-parameters-26"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"P")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,l.kt)("inlineCode",{parentName:"a"},"Player")))))),(0,l.kt)("h4",{id:"parameters-30"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ctx")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementcontext"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementContext")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">")))),(0,l.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L88"},"boardzilla-core/game/board/element.ts:88")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"board"},"board"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"board"),": ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/Board"},(0,l.kt)("inlineCode",{parentName:"a"},"Board")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">"),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/Board"},"Board")," to which this element belongs"),(0,l.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L48"},"boardzilla-core/game/board/element.ts:48")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"create"},"create"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"create"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"attributes?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"T")),(0,l.kt)("p",null,"Create an element inside this element. This can only be called during the\ngame setup (see ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#creategame"},"createGame"),". Any game elements that are required\nmust be created before the game starts. Elements that only appear later in\nthe game can be created inside the ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/Board#pile"},"Board#pile")," or made invisible."),(0,l.kt)("h4",{id:"type-parameters-27"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-31"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Class to create. This class must be included in the ",(0,l.kt)("inlineCode",{parentName:"td"},"elementClasses")," in ",(0,l.kt)("a",{parentName:"td",href:"/api/modules#creategame"},"createGame"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement#name"},"name"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"Pick"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"T"),", ",(0,l.kt)("inlineCode",{parentName:"td"},'"name"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"player"')," ","|"," { ","[K in string ","|"," number ","|"," symbol]",": K extends keyof GameElement<P",">"," ? never : T","[K]"," extends Function ? never : K }","[keyof ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),"]",">",">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Sets any attributes of the class that are defined in your own class that extend ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Space"},"Space"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Piece"},"Piece"),", or ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Board"},"Board"),". Can also include ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement#player"},"player"),".")))),(0,l.kt)("h4",{id:"returns-37"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"T")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"deck.create(Card, 'ace-of-hearts', { suit: 'H', value: '1' });\n")),(0,l.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L511"},"boardzilla-core/game/board/element.ts:511")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"createmany"},"createMany"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"createMany"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"attributes?"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,l.kt)("p",null,"Create n identical elements inside this element. This can only be called\nduring the game setup (see ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#creategame"},"createGame"),". Any game elements that are\nrequired must be created before the game starts. Elements that only appear\nlater in the game can be created inside the ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/Board#pile"},"Board#pile")," or made\ninvisible."),(0,l.kt)("h4",{id:"type-parameters-28"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-32"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"n")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Number to create")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"className")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Class to create. This class must be included in the ",(0,l.kt)("inlineCode",{parentName:"td"},"elementClasses")," in ",(0,l.kt)("a",{parentName:"td",href:"/api/modules#creategame"},"createGame"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement#name"},"name"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"Pick"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"T"),", ",(0,l.kt)("inlineCode",{parentName:"td"},'"name"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"player"')," ","|"," { ","[K in string ","|"," number ","|"," symbol]",": K extends keyof GameElement<P",">"," ? never : T","[K]"," extends Function ? never : K }","[keyof ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),"]",">",">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Sets any attributes of the class that are defined in your own class that extend ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Space"},"Space"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Piece"},"Piece"),", or ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Board"},"Board"),". Can also include ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement#player"},"player"),".")))),(0,l.kt)("h4",{id:"returns-38"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,l.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L538"},"boardzilla-core/game/board/element.ts:538")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isdescendantof"},"isDescendantOf"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"isDescendantOf"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"el"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether this element has the given element in its parent hierarchy"),(0,l.kt)("h4",{id:"parameters-33"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"el")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"returns-39"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L604"},"boardzilla-core/game/board/element.ts:604")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isempty"},"isEmpty"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"isEmpty"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Returns whether this element has any elements placed within it."),(0,l.kt)("h4",{id:"returns-40"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L329"},"boardzilla-core/game/board/element.ts:329")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"owner"},"owner"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"owner"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"P")),(0,l.kt)("p",null,"Returns the player that owns this element, or the first element that\ncontains this element searching up through the parent hierarchy. This is\nrelated to, but different than ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#player"},"player"),". E.g. if a common card is in\na player's hand, typically the ",(0,l.kt)("inlineCode",{parentName:"p"},"hand.player")," will be assigned to that\nplayer but the card does not have a ",(0,l.kt)("inlineCode",{parentName:"p"},"player"),". The card.owner() will return\nthe player in whose hand the card is placed. Similarly, if an army is in\nanother player's country, the ",(0,l.kt)("inlineCode",{parentName:"p"},"army.owner()")," will be the player controlling\nthat army (i.e. same as ",(0,l.kt)("inlineCode",{parentName:"p"},"army.player"),") rather than the player who owns the\ncountry in which it's placed."),(0,l.kt)("h4",{id:"returns-41"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"p"},"P")),(0,l.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L361"},"boardzilla-core/game/board/element.ts:361")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"setorder"},"setOrder"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"setOrder"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"order"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Set this class to use a different ordering style."),(0,l.kt)("h4",{id:"parameters-34"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"order")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"normal"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"stacking"')),(0,l.kt)("td",{parentName:"tr",align:"left"},'ordering style - "normal": Elements placed into this element are put at the end of the list (default) - "stacking": Elements placed into this element are put at the beginning of the list. This is prefered for elements that stack. E.g. when placing a card into a stack of cards, if ',(0,l.kt)("inlineCode",{parentName:"td"},"order")," is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"stacking")," the ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement#first"},"first")," method will return the card just placed, i.e. it will be considered to be on the top of the stack")))),(0,l.kt)("h4",{id:"returns-42"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L306"},"boardzilla-core/game/board/element.ts:306")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"shuffle"},"shuffle"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"shuffle"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Re-orders the elements directly contained within this element randomly."),(0,l.kt)("h4",{id:"returns-43"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L345"},"boardzilla-core/game/board/element.ts:345")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"sortby"},"sortBy"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"sortBy"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"E"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"direction?"),"): ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("p",null,"Sorts the elements directly contained within this element by some Sorter."),(0,l.kt)("h4",{id:"type-parameters-29"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"E")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-35"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"key")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Sorter"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"E"),">"," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"Sorter"),"<",(0,l.kt)("inlineCode",{parentName:"td"},"E"),">","[]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"direction?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'"desc"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"asc"'))))),(0,l.kt)("h4",{id:"returns-44"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),">",">"),(0,l.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L337"},"boardzilla-core/game/board/element.ts:337")),(0,l.kt)("h2",{id:"ui"},"UI"),(0,l.kt)("h3",{id:"absolutetransform"},"absoluteTransform"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"absoluteTransform"),"(): ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box"))),(0,l.kt)("p",null,"Viewport relative to a square perfectly containing the board. The ",(0,l.kt)("inlineCode",{parentName:"p"},"left"),"\nand ",(0,l.kt)("inlineCode",{parentName:"p"},"top")," values are from 0-100. The x and y values in this method are on\nthe same scale, unlike ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#relativetransformtoboard"},"relativeTransformToBoard"),"."),(0,l.kt)("h4",{id:"returns-45"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box"))),(0,l.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L708"},"boardzilla-core/game/board/element.ts:708")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"appearance"},"appearance"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"appearance"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"appearance"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Define the appearance of this element. Any values provided override previous ones."),(0,l.kt)("h4",{id:"parameters-36"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Possible values are:")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.aspectRatio?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The aspect ratio for this element. This value is a ratio of width over height. All layouts defined in ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement#layout"},"layout")," will respect this aspect ratio.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.className?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"A class name to add to the dom element")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.connections?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},"If the elements immediately within this element are connected using ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Space#connectto"},"Space#connectTo"),", this makes those connections visible as connecting lines. Providing a ",(0,l.kt)("inlineCode",{parentName:"td"},"label")," will place a label over top of this line by calling the provided function with the distance of the connection specified in ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Space#connectto"},"Space#connectTo")," and using the retured JSX. If ",(0,l.kt)("inlineCode",{parentName:"td"},"labelScale")," is provided, the label is scaled by this amount.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.connections.color?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.connections.fill?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.connections.label?")),(0,l.kt)("td",{parentName:"tr",align:"left"},"(",(0,l.kt)("inlineCode",{parentName:"td"},"arg"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"any"),") => ",(0,l.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"Element")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.connections.labelScale?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.connections.style?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'"double"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"solid"')),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.connections.thickness?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.render?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false")," ","|"," (",(0,l.kt)("inlineCode",{parentName:"td"},"el"),": ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",") => ",(0,l.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"Element")),(0,l.kt)("td",{parentName:"tr",align:"left"},"A function that takes this element as its only argument and returns JSX for the element. See /styling.md for more on usage.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"appearance.zoomable?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")," ","|"," (",(0,l.kt)("inlineCode",{parentName:"td"},"el"),": ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",") => ",(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,l.kt)("h4",{id:"returns-46"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L1284"},"boardzilla-core/game/board/element.ts:1284")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"applylayouts"},"applyLayouts"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"applyLayouts"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"force?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"recalc all elements computedStyle"),(0,l.kt)("h4",{id:"parameters-37"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"force")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false"))))),(0,l.kt)("h4",{id:"returns-47"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L879"},"boardzilla-core/game/board/element.ts:879")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"layout"},"layout"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"layout"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"applyTo"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"attributes"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Apply a layout to some of the elements directly contained within this element"),(0,l.kt)("h4",{id:"parameters-38"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"applyTo")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">"," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/ElementCollection"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">"," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">",">"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Which elements this layout applies to. Provided value can be: - A specific ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},"GameElement")," - The name of an element - A specific set of elements (",(0,l.kt)("a",{parentName:"td",href:"/api/classes/ElementCollection"},"ElementCollection"),") - A class of elements If multiple layout declarations would apply to the same element, only one will be used. The order of specificity is as above. If a class is used and mutiple apply, the more specific class will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},"A list of attributes describing the layout. All units of measurement are percentages of this elements width and height from 0-100, unless otherwise noted (",(0,l.kt)("inlineCode",{parentName:"td"},"margin")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"gap"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.alignment?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'"center"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"left"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"top"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"bottom"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"right"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"top left"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"bottom left"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"top right"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"bottom right"')),(0,l.kt)("td",{parentName:"tr",align:"left"},"If more room is provided than needed, this determines how the elements will align themselves within.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.area?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"A box defining the layout's bounds within this element. If unspecified, the entire area is used, i.e. ",(0,l.kt)("inlineCode",{parentName:"td"},"{ left: 0, top: 0, width: 100, height: 100 }"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.aspectRatio?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Aspect ratio for each element placed in this layout. This value is a ratio of width over height. Elements will adhere to this ratio unless they have their own specified ",(0,l.kt)("inlineCode",{parentName:"td"},"aspectRatio")," in their ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement#appearance"},"appearance"),". This value is ignored is ",(0,l.kt)("inlineCode",{parentName:"td"},"size")," is provided.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.columns?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")," ","|"," { ",(0,l.kt)("inlineCode",{parentName:"td"},"max?"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"min"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number"),"  } ","|"," { ",(0,l.kt)("inlineCode",{parentName:"td"},"max"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"min?"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number"),"  }"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Columns, as per ",(0,l.kt)("inlineCode",{parentName:"td"},"rows"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.direction?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'"ltr"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"rtl"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"square"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"rtl-btt"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"ltr-btt"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"ttb"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"ttb-rtl"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"btt"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"btt-rtl"')),(0,l.kt)("td",{parentName:"tr",align:"left"},"Specifies the direction in which elements placed here should fill up the rows and columns of the layout. Rows or columns will increase to their specified maximum as needed. Therefore if, for example, ",(0,l.kt)("inlineCode",{parentName:"td"},"direction")," is ",(0,l.kt)("inlineCode",{parentName:"td"},'"ltr"')," and ",(0,l.kt)("inlineCode",{parentName:"td"},"columns")," has no maximum, there will never be a second row added. Values are: - ",(0,l.kt)("em",{parentName:"td"},"square"),": fill rows and columns equally to maintain as square a grid as possible (default) - ",(0,l.kt)("em",{parentName:"td"},"ltr"),": fill columns left to right, then rows top to bottom once maximum columns reached - ",(0,l.kt)("em",{parentName:"td"},"rtl"),": fill columns right to left, then rows top to bottom once maximum columns reached - ",(0,l.kt)("em",{parentName:"td"},"ltr-btt"),": fill columns left to right, then rows bottom to top once maximum columns reached - ",(0,l.kt)("em",{parentName:"td"},"rtl-btt"),": fill columns right to left, then rows bottom to top once maximum columns reached - ",(0,l.kt)("em",{parentName:"td"},"ttb"),": fill rows top to bottom, then columns left to right once maximum rows reached - ",(0,l.kt)("em",{parentName:"td"},"btt"),": fill rows bottom to top, then columns left to right once maximum rows reached - ",(0,l.kt)("em",{parentName:"td"},"ttb-rtl"),": fill rows top to bottom, then columns right to left once maximum rows reached - ",(0,l.kt)("em",{parentName:"td"},"btt-rtl"),": fill rows bottom to top, then columns right to left once maximum rows reached")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.gap?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")," ","|"," { ",(0,l.kt)("inlineCode",{parentName:"td"},"x"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"y"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number"),"  }"),(0,l.kt)("td",{parentName:"tr",align:"left"},"If provided, this places a gap between elements. If scaling is 'fill', this is considered a maximum but may shrink or even become negative in order to fill the area. This value is an absolute percentage of the board's size so that gaps specified on different layouts with the same value will exactly match")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.haphazardly?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"A number specifying an amount of randomness added to the layout to provide a more natural looking placement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.limit?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"If specified, no more than ",(0,l.kt)("inlineCode",{parentName:"td"},"limit")," items will be visible. This is useful for displaying e.g. decks of cards where showing only 2 or 3 cards provides a deck-like appearance without needed to render more cards underneath that aren't visible.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.margin?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")," ","|"," { ",(0,l.kt)("inlineCode",{parentName:"td"},"bottom"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"left"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"right"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"top"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number"),"  }"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Instead of providing ",(0,l.kt)("inlineCode",{parentName:"td"},"area"),", providing a ",(0,l.kt)("inlineCode",{parentName:"td"},"margin")," defines the bounding box in terms of a margin around the edges of this element. This value is an absolute percentage of the board's size so that margins specified on different layouts with the same value will exactly match")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.offsetColumn?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#vector"},(0,l.kt)("inlineCode",{parentName:"a"},"Vector"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Instead of ",(0,l.kt)("inlineCode",{parentName:"td"},"gap"),", providing an ",(0,l.kt)("inlineCode",{parentName:"td"},"offsetColumn"),"/",(0,l.kt)("inlineCode",{parentName:"td"},"offsetRow")," specifies that the contained elements must offset one another by a specified amount as a percentage of the elements size, i.e. ",(0,l.kt)("inlineCode",{parentName:"td"},"offsetColumn=100")," is equivalent to a ",(0,l.kt)("inlineCode",{parentName:"td"},"gap")," of 0. This allows non-orthogonal grids like hex or diamond. If one of ",(0,l.kt)("inlineCode",{parentName:"td"},"offsetColumn"),"/",(0,l.kt)("inlineCode",{parentName:"td"},"offsetRow")," is provided but not the other, the unspecified one will be 90\xb0 to the one specified. Like ",(0,l.kt)("inlineCode",{parentName:"td"},"gap"),", if ",(0,l.kt)("inlineCode",{parentName:"td"},"scaling")," is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"fill"),", these offsets may squish to fill space.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.offsetRow?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#vector"},(0,l.kt)("inlineCode",{parentName:"a"},"Vector"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"As above")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.rows?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")," ","|"," { ",(0,l.kt)("inlineCode",{parentName:"td"},"max?"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"min"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number"),"  } ","|"," { ",(0,l.kt)("inlineCode",{parentName:"td"},"max"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,l.kt)("inlineCode",{parentName:"td"},"min?"),": ",(0,l.kt)("inlineCode",{parentName:"td"},"number"),"  }"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The number of rows to allot for placing elements in this layout. If a number is provided, this is fixed. If min/max values are provided, the layout will allot at least ",(0,l.kt)("inlineCode",{parentName:"td"},"min")," and up to ",(0,l.kt)("inlineCode",{parentName:"td"},"max")," as needed. If ",(0,l.kt)("inlineCode",{parentName:"td"},"min")," is omitted, a minimum of 1 is implied. If ",(0,l.kt)("inlineCode",{parentName:"td"},"max")," is omitted, as many are used as needed. Default is ",(0,l.kt)("inlineCode",{parentName:"td"},"{min: 1, max: Infinity}"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.scaling?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'"fill"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"none"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"fit"')),(0,l.kt)("td",{parentName:"tr",align:"left"},"Scaling strategy for the elements placed in this layout. - ",(0,l.kt)("em",{parentName:"td"},"none"),": Elements use the ",(0,l.kt)("inlineCode",{parentName:"td"},"size")," value and do not scale. If no ",(0,l.kt)("inlineCode",{parentName:"td"},"size")," is provided, this behaves like ",(0,l.kt)("inlineCode",{parentName:"td"},"fit")," (default) - ",(0,l.kt)("em",{parentName:"td"},"fit"),": elements scale up or down to fit within the area alloted without squshing - ",(0,l.kt)("em",{parentName:"td"},"fill"),": elements scale up or down to completely fill the area, squishing themselves together as needed along one dimension.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.size?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Size alloted for each element placed in this layout. Unless ",(0,l.kt)("inlineCode",{parentName:"td"},"scaling")," is ",(0,l.kt)("inlineCode",{parentName:"td"},'"none"'),", a ",(0,l.kt)("inlineCode",{parentName:"td"},"size")," provided here will be used only to define an aspect ratio but may scale up or down to fit as needed. As such, when using any ",(0,l.kt)("inlineCode",{parentName:"td"},"scaling")," other than ",(0,l.kt)("inlineCode",{parentName:"td"},'"none"'),", providing an ",(0,l.kt)("inlineCode",{parentName:"td"},"aspectRatio")," instead is sufficient.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.size.height")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.size.width")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"attributes.slots?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box")),"[]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"If supplied, this overrides all other attributes to define a set of strictly defined boxes for placing each element. Any elements that exceed the number of slots provided are not displayed.")))),(0,l.kt)("h4",{id:"returns-48"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L827"},"boardzilla-core/game/board/element.ts:827")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"relativetransformtoboard"},"relativeTransformToBoard"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"relativeTransformToBoard"),"(): ",(0,l.kt)("a",{parentName:"p",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box"))),(0,l.kt)("p",null,"Viewport relative to the board. The ",(0,l.kt)("inlineCode",{parentName:"p"},"left")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"top")," values are percentages\nfrom 0-100, where ",(0,l.kt)("inlineCode",{parentName:"p"},"left: 100")," is the right edge of the board and ",(0,l.kt)("inlineCode",{parentName:"p"},"top: 100"),"\nthe bottom. The x and y values in this method are therefore not necessarily\non the same scale, unlike ",(0,l.kt)("a",{parentName:"p",href:"/api/classes/GameElement#absolutetransform"},"absoluteTransform"),"."),(0,l.kt)("h4",{id:"returns-49"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/modules#box"},(0,l.kt)("inlineCode",{parentName:"a"},"Box"))),(0,l.kt)("h4",{id:"defined-in-59"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L719"},"boardzilla-core/game/board/element.ts:719")),(0,l.kt)("h2",{id:"visibility"},"Visibility"),(0,l.kt)("h3",{id:"hidefrom"},"hideFrom"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"hideFrom"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"...player"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Hide this element from the given players without changing it's visibility to\nany other players."),(0,l.kt)("h4",{id:"parameters-39"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...player")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"),"[] ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,l.kt)("inlineCode",{parentName:"a"},"Player")),"[]")))),(0,l.kt)("h4",{id:"returns-50"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-60"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L429"},"boardzilla-core/game/board/element.ts:429")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"hidefromall"},"hideFromAll"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"hideFromAll"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Hide this element only to the given player"),(0,l.kt)("h4",{id:"returns-51"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-61"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L420"},"boardzilla-core/game/board/element.ts:420")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isvisible"},"isVisible"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"isVisible"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Returns whether this element is visible to the current player. Can only be\ncalled when in a player context, during an action taken by a player or\nwhile the board is viewed by a given player."),(0,l.kt)("h4",{id:"returns-52"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-62"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L463"},"boardzilla-core/game/board/element.ts:463")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isvisibleto"},"isVisibleTo"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"isVisibleTo"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"player"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Returns whether this element is visible to the given player"),(0,l.kt)("h4",{id:"parameters-40"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"player")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,l.kt)("inlineCode",{parentName:"a"},"Player")))))),(0,l.kt)("h4",{id:"returns-53"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-63"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L447"},"boardzilla-core/game/board/element.ts:447")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"showonlyto"},"showOnlyTo"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"showOnlyTo"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"player"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Show this element only to the given player"),(0,l.kt)("h4",{id:"parameters-41"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"player")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,l.kt)("inlineCode",{parentName:"a"},"Player")))))),(0,l.kt)("h4",{id:"returns-54"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-64"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L392"},"boardzilla-core/game/board/element.ts:392")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"showto"},"showTo"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"showTo"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"...player"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Show this element to the given players without changing it's visibility to\nany other players."),(0,l.kt)("h4",{id:"parameters-42"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...player")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"),"[] ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,l.kt)("inlineCode",{parentName:"a"},"Player")),"[]")))),(0,l.kt)("h4",{id:"returns-55"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-65"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L405"},"boardzilla-core/game/board/element.ts:405")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"showtoall"},"showToAll"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"showToAll"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Show this element to all players"),(0,l.kt)("h4",{id:"returns-56"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-66"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L384"},"boardzilla-core/game/board/element.ts:384")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"hide"},"hide"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,l.kt)("strong",{parentName:"p"},"hide"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,l.kt)("inlineCode",{parentName:"p"},"this"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"...attrs"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Provide list of attributes that are obscured when instances of this element\nclass are hidden. E.g. In a game with multiple card decks with different\nbacks, the identity of the card is hiddem, but the deck it belongs to is\nnot. In this case, Card may have attributes: suit; pip; deck and calling:\n",(0,l.kt)("inlineCode",{parentName:"p"},"Card.hide('suit', 'pip')")," will cause suit and pip to be invisible when the\ncard is flipped, while still revealing which deck it is."),(0,l.kt)("h4",{id:"type-parameters-30"},"Type parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"P")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,l.kt)("inlineCode",{parentName:"a"},"Player")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"T")),(0,l.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,l.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,l.kt)("inlineCode",{parentName:"a"},"GameElement")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),">")))),(0,l.kt)("h4",{id:"parameters-43"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"this")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/api/modules#elementclass"},(0,l.kt)("inlineCode",{parentName:"a"},"ElementClass")),"<",(0,l.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"...attrs")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")," & keyof ",(0,l.kt)("inlineCode",{parentName:"td"},"T"),"[]")))),(0,l.kt)("h4",{id:"returns-57"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-67"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aghull/boardzilla-core/blob/775500f/game/board/element.ts#L477"},"boardzilla-core/game/board/element.ts:477")))}s.isMDXComponent=!0}}]);