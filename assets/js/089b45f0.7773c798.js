"use strict";(self.webpackChunkboardzilla_docs=self.webpackChunkboardzilla_docs||[]).push([[2230],{6287:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=a(5893),t=a(1151);const s={sidebar_position:4},l="Player",i={id:"game/players",title:"Player",description:"The Player is a core class that represents a user",source:"@site/docs/game/players.md",sourceDirName:"game",slug:"/game/players",permalink:"/game/players",draft:!1,unlisted:!1,editUrl:"https://github.com/boardzilla/boardzilla-docs/tree/main/docs/game/players.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Board Structure",permalink:"/game/board"},next:{title:"Actions",permalink:"/game/actions"}},o={},c=[{value:"Player Collection",id:"player-collection",level:2},{value:"Current player",id:"current-player",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"player",children:"Player"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.a,{href:"../api/classes/Player",children:(0,n.jsx)(r.code,{children:"Player"})})," is a core class that represents a user\nplaying the game. Each game will have its own player class that contains any\nspecial properties and methods particular to the game, such as ",(0,n.jsx)(r.code,{children:"player.score()"}),"\nor ",(0,n.jsx)(r.code,{children:"player.isDealer"}),". Boardzilla will manage seating the players to start the\ngame, and show each player what actions they can perform. The player object will\nbe passed back to you in your actions when the players perform them."]}),"\n",(0,n.jsx)(r.h2,{id:"player-collection",children:"Player Collection"}),"\n",(0,n.jsxs)(r.p,{children:["The current list of players is always available as\n",(0,n.jsx)(r.a,{href:"../api/classes/Game#players",children:(0,n.jsx)(r.code,{children:"game.players"})})," which returns an Array-like of\nplayers with other special methods added. The array is in the order the players\nwill normally act, but can be re-ordered with\n",(0,n.jsx)(r.a,{href:"../api/classes/PlayerCollection#sortby",children:(0,n.jsx)(r.code,{children:"sortBy"})}),"."]}),"\n",(0,n.jsx)(r.admonition,{title:"player order vs table position",type:"warning",children:(0,n.jsxs)(r.p,{children:["Player order is not always the same as the seating order around the\ntable. Boardzilla will begin the game with players in order based on seating,\nbut if the order is changed, then ",(0,n.jsx)(r.code,{children:"game.players"})," will be in turn order, but\nlooking at ",(0,n.jsx)(r.a,{href:"../api/classes/Player#position",children:(0,n.jsx)(r.code,{children:"player.position"})})," or\n",(0,n.jsx)(r.a,{href:"../api/classes/Game#inpositionorder",children:(0,n.jsx)(r.code,{children:"game.players.inPositionOrder()"})})," will tell\nyou what the seating order is."]})}),"\n",(0,n.jsx)(r.h2,{id:"current-player",children:"Current player"}),"\n",(0,n.jsx)(r.p,{children:"Boardzilla has a concept of a current player, that is currently allowed to\nact. If not otherwise specified, when presenting possible player actions, they\nare presented for the current player, and no other player can act until their\nturn."}),"\n",(0,n.jsxs)(r.p,{children:["You can set the current player, with\n",(0,n.jsx)(r.a,{href:"../api/classes/Player#setcurrent",children:(0,n.jsx)(r.code,{children:"player.setCurrent()"})}),". Typically however,\nwhen letting each player take turns, simply using the\n",(0,n.jsx)(r.a,{href:"flow#eachplayer",children:(0,n.jsx)(r.code,{children:"eachPlayer"})})," will automatically set the current player."]}),"\n",(0,n.jsxs)(r.p,{children:["It is possible for ",(0,n.jsx)(r.strong,{children:"multiple"})," players to be considered current, in which case\nthese player can act simultaneously. You can set multiple players by calling\n",(0,n.jsx)(r.a,{href:"../api/classes/PlayerCollection#setcurrent",children:(0,n.jsx)(r.code,{children:"game.players.setCurrent()"})})," with an array."]})]})}function h(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,r,a)=>{a.d(r,{Z:()=>i,a:()=>l});var n=a(7294);const t={},s=n.createContext(t);function l(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);