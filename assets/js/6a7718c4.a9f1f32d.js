"use strict";(self.webpackChunkboardzilla_docs=self.webpackChunkboardzilla_docs||[]).push([[392],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},N=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),s=m(a),N=r,h=s["".concat(p,".").concat(N)]||s[N]||k[N]||l;return a?n.createElement(h,i(i({ref:t},o),{},{components:a})):n.createElement(h,i({ref:t},o))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=N;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d[s]="string"==typeof e?e:r,i[1]=d;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},14:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={id:"Space",title:"Class: Space<P, B>",sidebar_label:"Space",sidebar_position:5,custom_edit_url:null},i=void 0,d={unversionedId:"api/classes/Space",id:"api/classes/Space",title:"Class: Space<P, B>",description:"Spaces are areas of the board. The spaces of your board are declared during",source:"@site/docs/api/classes/Space.md",sourceDirName:"api/classes",slug:"/api/classes/Space",permalink:"/api/classes/Space",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"Space",title:"Class: Space<P, B>",sidebar_label:"Space",sidebar_position:5,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"PlayerCollection",permalink:"/api/classes/PlayerCollection"},next:{title:"Table of Contents",permalink:"/api/modules"}},p={},m=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Hierarchy",id:"hierarchy",level:2},{value:"Other",id:"other",level:2},{value:"_ui",id:"_ui",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Queries",id:"queries",level:2},{value:"name",id:"name",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"player",id:"player",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"mine",id:"mine",level:3},{value:"Returns",id:"returns",level:4},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"adjacencies",id:"adjacencies",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"all",id:"all",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"bottom",id:"bottom",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"bottomN",id:"bottomn",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"closest",id:"closest",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"container",id:"container",level:3},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"first",id:"first",level:3},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"firstN",id:"firstn",level:3},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"has",id:"has",level:3},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"last",id:"last",level:3},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Inherited from",id:"inherited-from-12",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"lastN",id:"lastn",level:3},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Inherited from",id:"inherited-from-13",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"others",id:"others",level:3},{value:"Type parameters",id:"type-parameters-12",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Inherited from",id:"inherited-from-14",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"top",id:"top",level:3},{value:"Type parameters",id:"type-parameters-13",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Inherited from",id:"inherited-from-15",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"topN",id:"topn",level:3},{value:"Type parameters",id:"type-parameters-14",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Inherited from",id:"inherited-from-16",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"withinDistance",id:"withindistance",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"Querying",id:"querying",level:2},{value:"atPosition",id:"atposition",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Inherited from",id:"inherited-from-17",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"Structure",id:"structure",level:2},{value:"constructor",id:"constructor",level:3},{value:"Type parameters",id:"type-parameters-15",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Inherited from",id:"inherited-from-18",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"board",id:"board",level:3},{value:"Inherited from",id:"inherited-from-19",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"game",id:"game",level:3},{value:"Inherited from",id:"inherited-from-20",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"owner",id:"owner",level:3},{value:"Returns",id:"returns-18",level:4},{value:"Inherited from",id:"inherited-from-21",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"adjacentTo",id:"adjacentto",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Inherited from",id:"inherited-from-22",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"connectTo",id:"connectto",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"createMany",id:"createmany",level:3},{value:"Type parameters",id:"type-parameters-16",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Inherited from",id:"inherited-from-23",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"distanceTo",id:"distanceto",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"isDescendantOf",id:"isdescendantof",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Inherited from",id:"inherited-from-24",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"isEmpty",id:"isempty",level:3},{value:"Returns",id:"returns-24",level:4},{value:"Inherited from",id:"inherited-from-25",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"onEnter",id:"onenter",level:3},{value:"Type parameters",id:"type-parameters-17",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"onExit",id:"onexit",level:3},{value:"Type parameters",id:"type-parameters-18",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"setOrder",id:"setorder",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Inherited from",id:"inherited-from-26",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"shuffle",id:"shuffle",level:3},{value:"Returns",id:"returns-28",level:4},{value:"Inherited from",id:"inherited-from-27",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"sortBy",id:"sortby",level:3},{value:"Type parameters",id:"type-parameters-19",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Inherited from",id:"inherited-from-28",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"toString",id:"tostring",level:3},{value:"Returns",id:"returns-30",level:4},{value:"Inherited from",id:"inherited-from-29",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"UI",id:"ui",level:2},{value:"appearance",id:"appearance",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Inherited from",id:"inherited-from-30",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"layout",id:"layout",level:3},{value:"Type parameters",id:"type-parameters-20",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Inherited from",id:"inherited-from-31",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"Visibility",id:"visibility",level:2},{value:"hideFrom",id:"hidefrom",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Inherited from",id:"inherited-from-32",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"hideFromAll",id:"hidefromall",level:3},{value:"Returns",id:"returns-34",level:4},{value:"Inherited from",id:"inherited-from-33",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"isVisible",id:"isvisible",level:3},{value:"Returns",id:"returns-35",level:4},{value:"Inherited from",id:"inherited-from-34",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"isVisibleTo",id:"isvisibleto",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Inherited from",id:"inherited-from-35",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"showOnlyTo",id:"showonlyto",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Inherited from",id:"inherited-from-36",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"showTo",id:"showto",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Inherited from",id:"inherited-from-37",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"showToAll",id:"showtoall",level:3},{value:"Returns",id:"returns-39",level:4},{value:"Inherited from",id:"inherited-from-38",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"revealWhenHidden",id:"revealwhenhidden",level:3},{value:"Type parameters",id:"type-parameters-21",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Inherited from",id:"inherited-from-39",level:4},{value:"Defined in",id:"defined-in-45",level:4}],o={toc:m},s="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Spaces are areas of the board. The spaces of your board are declared during\nsetup in ",(0,r.kt)("a",{parentName:"p",href:"/api/modules#creategame"},"createGame")," and never change during play."),(0,r.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"P")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,r.kt)("inlineCode",{parentName:"a"},"Player")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">"," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"B")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Board"},(0,r.kt)("inlineCode",{parentName:"a"},"Board")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">"," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">"),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Space"))),(0,r.kt)("p",{parentName:"li"},"\u21b3\u21b3 ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Board"},(0,r.kt)("inlineCode",{parentName:"a"},"Board"))))),(0,r.kt)("h2",{id:"other"},"Other"),(0,r.kt)("h3",{id:"_ui"},"_","ui"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"_","ui"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ElementUI"),"\\<",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">",">"),(0,r.kt)("p",null,"UI"),(0,r.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#_ui"},"_ui")),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L1029"},"boardzilla-core/src/board/element.ts:1029")),(0,r.kt)("h2",{id:"queries"},"Queries"),(0,r.kt)("h3",{id:"name"},"name"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"name"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Element name, used to distinguish elements. Elements with the same name are\ngenerally considered indistibuishable. Names are also used for easy\nsearching of elements."),(0,r.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#name"},"name")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L258"},"boardzilla-core/src/board/element.ts:258")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"player"},"player"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"player"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"P")),(0,r.kt)("p",null,"Player with which this element is identified. This does not affect\nbehaviour but will mark the element as ",(0,r.kt)("inlineCode",{parentName:"p"},"mine")," in queries in the context of\nthis player."),(0,r.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#player"},"player")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L266"},"boardzilla-core/src/board/element.ts:266")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mine"},"mine"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"mine"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether this element belongs to the player viewing the board. A player is\nconsidered to be currently viewing the board if this is called in the\ncontext of an action taken by a given player. It is an error to call this\nmethod when not in the context of a player action. When querying for\nelements using ",(0,r.kt)("a",{parentName:"p",href:"/api/modules#elementfinder"},"ElementFinder")," such as ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#all"},"all")," and ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#first"},"first"),",\n",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#mine"},"mine")," is available as a search key that accepts a value of\ntrue/false"),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,r.kt)("p",null,"GameElement.mine"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L673"},"boardzilla-core/src/board/element.ts:673")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"adjacencies"},"adjacencies"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"adjacencies"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"Find all elements adjacent based on row/column placement or based on this\nelement having connections created by Space#connectTo. Uses the same\nparameters as ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"GameElement#all")),(0,r.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#adjacencies"},"adjacencies")),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L568"},"boardzilla-core/src/board/element.ts:568")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"all"},"all"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"all"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"Finds all elements within this element recursively that match the arguments\nprovided."),(0,r.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optionally provide a class as the first argument as a class filter. This will only match elements which are instances of the provided class")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"All other parameters are filters. See ",(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},"ElementFinder")," for more information.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},"ElementCollection")," of as many matching elements as can be\nfound. The collection is typed to ",(0,r.kt)("inlineCode",{parentName:"p"},"ElementCollection<className>")," if one was\nprovided."),(0,r.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#all"},"all")),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L370"},"boardzilla-core/src/board/element.ts:370")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bottom"},"bottom"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"bottom"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("p",null,"Alias for ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#last"},"last")),(0,r.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#bottom"},"bottom")),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L487"},"boardzilla-core/src/board/element.ts:487")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bottomn"},"bottomN"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"bottomN"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"Alias for ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#lastn"},"lastN")),(0,r.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"n")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#bottomn"},"bottomN")),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L501"},"boardzilla-core/src/board/element.ts:501")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"closest"},"closest"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"closest"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("p",null,"Finds the nearest space connected to this space, measured by distance. Uses\nthe same parameters as ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#first"},"GameElement#first")),(0,r.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/space.ts#L131"},"boardzilla-core/src/board/space.ts:131")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"container"},"container"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"container"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"T")),(0,r.kt)("p",null,"Returns this elements parent."),(0,r.kt)("h4",{id:"type-parameters-6"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"If provided, searches up the parent tree to find the first matching element. E.g. if a Token is placed on a Card in a players Tableau. calling ",(0,r.kt)("inlineCode",{parentName:"td"},"token.container(Tableau)")," can be used to find the grandparent.")))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"T")),(0,r.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#container"},"container")),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L620"},"boardzilla-core/src/board/element.ts:620")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"first"},"first"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"first"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("p",null,"Finds the first element within this element recursively that matches the arguments\nprovided. See ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#all"},"all")," for parameter details."),(0,r.kt)("h4",{id:"type-parameters-7"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("p",null,"A matching element, if found"),(0,r.kt)("h4",{id:"inherited-from-9"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#first"},"first")),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L386"},"boardzilla-core/src/board/element.ts:386")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"firstn"},"firstN"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"firstN"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"Finds the first ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," elements within this element recursively that match the arguments\nprovided. See ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#all"},"all")," for parameter details."),(0,r.kt)("h4",{id:"type-parameters-8"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"n")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"number of matches")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},"ElementCollection")," of as many matching elements as can be\nfound, up to ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),". The collection is typed to ",(0,r.kt)("inlineCode",{parentName:"p"},"ElementCollection<className>"),"\nif one was provided."),(0,r.kt)("h4",{id:"inherited-from-10"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#firstn"},"firstN")),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L406"},"boardzilla-core/src/board/element.ts:406")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"has"},"has"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"has"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Return whether any element within this element recursively matches the arguments\nprovided. See ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#all"},"all")," for parameter details."),(0,r.kt)("h4",{id:"type-parameters-9"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"inherited-from-11"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#has"},"has")),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L535"},"boardzilla-core/src/board/element.ts:535")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"last"},"last"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"last"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("p",null,"Finds the last element within this element recursively that matches the arguments\nprovided. See ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#all"},"all")," for parameter details."),(0,r.kt)("h4",{id:"type-parameters-10"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("p",null,"A matching element, if found"),(0,r.kt)("h4",{id:"inherited-from-12"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#last"},"last")),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L423"},"boardzilla-core/src/board/element.ts:423")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lastn"},"lastN"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"lastN"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"Finds the last ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," elements within this element recursively that match the arguments\nprovided. See ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#all"},"all")," for parameter details."),(0,r.kt)("h4",{id:"type-parameters-11"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"n")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"number of matches")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},"ElementCollection")," of as many matching elements as can be\nfound, up to ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),". The collection is typed to ",(0,r.kt)("inlineCode",{parentName:"p"},"ElementCollection<className>"),"\nif one was provided."),(0,r.kt)("h4",{id:"inherited-from-13"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#lastn"},"lastN")),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L443"},"boardzilla-core/src/board/element.ts:443")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"others"},"others"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"others"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,'Finds "sibling" elements (elements that are directly inside the parent of this element) that match the arguments\nprovided. See ',(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#all"},"all")," for parameter details."),(0,r.kt)("h4",{id:"type-parameters-12"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("h4",{id:"inherited-from-14"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#others"},"others")),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L517"},"boardzilla-core/src/board/element.ts:517")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"top"},"top"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"top"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("p",null,"Alias for ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#first"},"first")),(0,r.kt)("h4",{id:"type-parameters-13"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"F")),(0,r.kt)("h4",{id:"inherited-from-15"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#top"},"top")),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L458"},"boardzilla-core/src/board/element.ts:458")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"topn"},"topN"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"topN"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...finders"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("p",null,"Alias for ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#firstn"},"firstN")),(0,r.kt)("h4",{id:"type-parameters-14"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"F")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"n")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...finders")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#elementfinder"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementFinder")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"F"),">","[]")))),(0,r.kt)("h4",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"F"),">"),(0,r.kt)("h4",{id:"inherited-from-16"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#topn"},"topN")),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L472"},"boardzilla-core/src/board/element.ts:472")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"withindistance"},"withinDistance"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"withinDistance"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">",">"),(0,r.kt)("p",null,"Finds all spaces connected to this space by a distance no more than\n",(0,r.kt)("inlineCode",{parentName:"p"},"distance")),(0,r.kt)("h4",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">",">"),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/space.ts#L154"},"boardzilla-core/src/board/space.ts:154")),(0,r.kt)("h2",{id:"querying"},"Querying"),(0,r.kt)("h3",{id:"atposition"},"atPosition"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"atPosition"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"\xabdestructured\xbb"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">"),(0,r.kt)("p",null,"Returns the element at row and column within this element"),(0,r.kt)("h4",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"\xabdestructured\xbb")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"\u203a\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"column")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"\u203a\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"row")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">"),(0,r.kt)("h4",{id:"inherited-from-17"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#atposition"},"atPosition")),(0,r.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L927"},"boardzilla-core/src/board/element.ts:927")),(0,r.kt)("h2",{id:"structure"},"Structure"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new Space"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"ctx"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">"),(0,r.kt)("p",null,"Do not use the constructor directly. Instead Call ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#create"},"GameElement#create")," or ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#createmany"},"GameElement#createMany")," on the element in\nwhich you want to create a new element."),(0,r.kt)("h4",{id:"type-parameters-15"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"P")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Player"},(0,r.kt)("inlineCode",{parentName:"a"},"Player")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">"," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"B")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Board"},(0,r.kt)("inlineCode",{parentName:"a"},"Board")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">"," = ",(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h4",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ctx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"ElementContext"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">",">")))),(0,r.kt)("h4",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">"),(0,r.kt)("h4",{id:"inherited-from-18"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#constructor"},"constructor")),(0,r.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L319"},"boardzilla-core/src/board/element.ts:319")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"board"},"board"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"board"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"B")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Board"},"Board")," to which this element belongs"),(0,r.kt)("h4",{id:"inherited-from-19"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#board"},"board")),(0,r.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L276"},"boardzilla-core/src/board/element.ts:276")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"game"},"game"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"game"),": ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Game"},(0,r.kt)("inlineCode",{parentName:"a"},"Game")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">"),(0,r.kt)("p",null,"A reference to the ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Game"},"Game")),(0,r.kt)("h4",{id:"inherited-from-20"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#game"},"game")),(0,r.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L282"},"boardzilla-core/src/board/element.ts:282")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"owner"},"owner"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"owner"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"P")),(0,r.kt)("p",null,"The player that owns this element, or the first element that contains this\nelement searching up through the parent hierarchy. This is related to, but\ndifferent than ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#player"},"player"),". E.g. if a standard playing card is in a\nplayer's hand, typically the ",(0,r.kt)("inlineCode",{parentName:"p"},"hand.player")," will be assigned to that player\nbut the card itself would not have a ",(0,r.kt)("inlineCode",{parentName:"p"},"player"),". In this case the\ncard.owner() will equal the player in whose hand the card is placed."),(0,r.kt)("h4",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"P")),(0,r.kt)("h4",{id:"inherited-from-21"},"Inherited from"),(0,r.kt)("p",null,"GameElement.owner"),(0,r.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L660"},"boardzilla-core/src/board/element.ts:660")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"adjacentto"},"adjacentTo"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"adjacentTo"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"element"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"If this element is adjacent to some other element, based on row/column\nplacement or based on this element having a connection created by\nSpace#connectTo."),(0,r.kt)("h4",{id:"parameters-17"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"element")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"inherited-from-22"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#adjacentto"},"adjacentTo")),(0,r.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L551"},"boardzilla-core/src/board/element.ts:551")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"connectto"},"connectTo"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"connectTo"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"space"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"distance?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">"),(0,r.kt)("p",null,"Make this space adjacent with another space for the purposes of adjacency\nand path-finding functions. Using ",(0,r.kt)("inlineCode",{parentName:"p"},"connectTo")," on a space creates a custom\ngraph of adjacency for the container of this space that overrides the\nstandard adjacency based on the built-in row/column placement."),(0,r.kt)("h4",{id:"parameters-18"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"space")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},"Space")," to connect to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Add a custom distance to this connection for the purposes of distance-measuring.")))),(0,r.kt)("h4",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">"),(0,r.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/space.ts#L89"},"boardzilla-core/src/board/space.ts:89")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createmany"},"createMany"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"createMany"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"className"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"attributes?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,r.kt)("p",null,"Create n elements inside this element of the same class. This can only be\ncalled during the game setup (see ",(0,r.kt)("a",{parentName:"p",href:"/api/modules#creategame"},"createGame"),". Any game elements\nthat are required must be created before the game starts. Elements that\nonly appear later in the game can be created inside the ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Board#pile"},"Board#pile"),"\nor made invisible."),(0,r.kt)("h4",{id:"type-parameters-16"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"parameters-19"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"n")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number to create")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"className")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Class to create. This class must be included in the ",(0,r.kt)("inlineCode",{parentName:"td"},"elementClasses")," in ",(0,r.kt)("a",{parentName:"td",href:"/api/modules#creategame"},"createGame"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement#name"},"name"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"attributes?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"Pick"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"name"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"player"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"row"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"column"')," ","|"," ","{"," ","[K in string ","|"," number ","|"," symbol]",": K extends keyof GameElement\\<any, any",">"," ? never : T","[K]"," extends Function ? never : K }","[keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),"]",">",">"," ","|"," (",(0,r.kt)("inlineCode",{parentName:"td"},"n"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"Pick"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"name"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"player"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"row"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"column"')," ","|"," ","{"," ","[K in string ","|"," number ","|"," symbol]",": K extends keyof GameElement\\<any, any",">"," ? never : T","[K]"," extends Function ? never : K }","[keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),"]",">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets any attributes of the class that are defined in your own class that extend ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},"Space"),", ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Piece"},"Piece"),", or ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Board"},"Board"),". Can also include ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space#player"},"player"),". If a function is supplied here, a single number argument will be passed with the number of the added element, starting with 1.")))),(0,r.kt)("h4",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">"),(0,r.kt)("h4",{id:"inherited-from-23"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#createmany"},"createMany")),(0,r.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L835"},"boardzilla-core/src/board/element.ts:835")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"distanceto"},"distanceTo"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"distanceTo"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"space"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Finds the shortest distance to another space, traveling thru multiple\nconnections"),(0,r.kt)("h4",{id:"parameters-20"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"space")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},"Space")," to measure distance to")))),(0,r.kt)("h4",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"shortest distance measured by the ",(0,r.kt)("inlineCode",{parentName:"p"},"distance")," values added to each\nconnection in ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/Space#connectto"},"connectTo")),(0,r.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/space.ts#L111"},"boardzilla-core/src/board/space.ts:111")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isdescendantof"},"isDescendantOf"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isDescendantOf"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"el"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether this element has the given element in its parent hierarchy"),(0,r.kt)("h4",{id:"parameters-21"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"el")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"inherited-from-24"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#isdescendantof"},"isDescendantOf")),(0,r.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L935"},"boardzilla-core/src/board/element.ts:935")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isempty"},"isEmpty"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isEmpty"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Returns whether this element has no elements placed within it."),(0,r.kt)("h4",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"inherited-from-25"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#isempty"},"isEmpty")),(0,r.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L631"},"boardzilla-core/src/board/element.ts:631")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"onenter"},"onEnter"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"onEnter"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"callback"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Attach a callback to this space for every element that enters or is created\nwithin."),(0,r.kt)("h4",{id:"type-parameters-17"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"parameters-22"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"the class of element that will trigger this callback")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"callback")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"el"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Callback will be called each time an element enters, with the entering element as the only argument.")))),(0,r.kt)("h4",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"deck.onEnter(Card, card => card.hideFromAll()) // card placed in the deck are automatically turned face down\n")),(0,r.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/space.ts#L50"},"boardzilla-core/src/board/space.ts:50")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"onexit"},"onExit"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"onExit"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"callback"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Attach a callback to this space for every element that is moved out of this\nspace."),(0,r.kt)("h4",{id:"type-parameters-18"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"parameters-23"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"the class of element that will trigger this callback")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"callback")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"el"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Callback will be called each time an element exits, with the exiting element as the only argument.")))),(0,r.kt)("h4",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"deck.onExit(Card, card => card.showToAll()) // cards drawn from the deck are automatically turned face up\n")),(0,r.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/space.ts#L66"},"boardzilla-core/src/board/space.ts:66")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setorder"},"setOrder"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"setOrder"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"order"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Set this class to use a different ordering style."),(0,r.kt)("h4",{id:"parameters-24"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"order")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"normal"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"stacking"')),(0,r.kt)("td",{parentName:"tr",align:"left"},'ordering style - "normal": Elements placed into this element are put at the end of the list (default) - "stacking": Elements placed into this element are put at the beginning of the list. This is prefered for elements that stack. E.g. if a stack of cards has ',(0,r.kt)("inlineCode",{parentName:"td"},"order")," set to ",(0,r.kt)("inlineCode",{parentName:"td"},"stacking")," the ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space#first"},"first")," method will return the last card placed in the stack, rather than the first one placed in the stack.")))),(0,r.kt)("h4",{id:"returns-27"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-26"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#setorder"},"setOrder")),(0,r.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L608"},"boardzilla-core/src/board/element.ts:608")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"shuffle"},"shuffle"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"shuffle"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Re-orders the elements directly contained within this element randomly."),(0,r.kt)("h4",{id:"returns-28"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-27"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#shuffle"},"shuffle")),(0,r.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L647"},"boardzilla-core/src/board/element.ts:647")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sortby"},"sortBy"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"sortBy"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"E"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"direction?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">",">"),(0,r.kt)("p",null,"Sorts the elements directly contained within this element by some ",(0,r.kt)("a",{parentName:"p",href:"/api/modules#sorter"},"Sorter"),"."),(0,r.kt)("h4",{id:"type-parameters-19"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"E")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-25"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"key")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/modules#sorter"},(0,r.kt)("inlineCode",{parentName:"a"},"Sorter")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"E"),">"," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/api/modules#sorter"},(0,r.kt)("inlineCode",{parentName:"a"},"Sorter")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"E"),">","[]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"direction?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"desc"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"asc"'))))),(0,r.kt)("h4",{id:"returns-29"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"B"),">",">"),(0,r.kt)("h4",{id:"inherited-from-28"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#sortby"},"sortBy")),(0,r.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L639"},"boardzilla-core/src/board/element.ts:639")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tostring"},"toString"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toString"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"String used for representng this element in game messages when the object\nis passed directly, e.g. when taking the choice directly from a\nchooseOnBoard choice."),(0,r.kt)("h4",{id:"returns-30"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"inherited-from-29"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#tostring"},"toString")),(0,r.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L350"},"boardzilla-core/src/board/element.ts:350")),(0,r.kt)("h2",{id:"ui"},"UI"),(0,r.kt)("h3",{id:"appearance"},"appearance"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"appearance"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"appearance"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Define the appearance of this element. Any values provided override\nprevious ones. See also ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection#appearance"},"ElementCollection#appearance")),(0,r.kt)("h4",{id:"parameters-26"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Possible values are:")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.aspectRatio?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The aspect ratio for this element. This value is a ratio of width over height. All layouts defined in ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space#layout"},"layout")," will respect this aspect ratio.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.className?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A class name to add to the dom element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.connections?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"If the elements immediately within this element are connected using ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space#connectto"},"Space#connectTo"),", this makes those connections visible as connecting lines. Providing a ",(0,r.kt)("inlineCode",{parentName:"td"},"label")," will place a label over top of this line by calling the provided function with the distance of the connection specified in ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space#connectto"},"Space#connectTo")," and using the retured JSX. If ",(0,r.kt)("inlineCode",{parentName:"td"},"labelScale")," is provided, the label is scaled by this amount.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.connections.color?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.connections.fill?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.connections.label?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"__namedParameters"),": ","{"," ",(0,r.kt)("inlineCode",{parentName:"td"},"distance"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"from"),": ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">"," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"to"),": ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">","  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"ReactNode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.connections.labelScale?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.connections.style?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"solid"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"double"')),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.connections.thickness?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.effects?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{"," ",(0,r.kt)("inlineCode",{parentName:"td"},"attributes"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"Pick"),"\\<",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">",", ",(0,r.kt)("inlineCode",{parentName:"td"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"name"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"player"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"row"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"column"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"_eventHandlers"'),">",">"," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"className"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"  }[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Provides a CSS class that will be applied to this element if its attributes change to match the provided ones.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.render?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false")," ","|"," (",(0,r.kt)("inlineCode",{parentName:"td"},"el"),": ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">",") => ",(0,r.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"Element")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function that takes this element as its only argument and returns JSX for the element. See /styling.md for more on usage.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.tooltip?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false")," ","|"," (",(0,r.kt)("inlineCode",{parentName:"td"},"el"),": ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">",") => ",(0,r.kt)("inlineCode",{parentName:"td"},"ReactNode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"appearance.zoomable?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")," ","|"," (",(0,r.kt)("inlineCode",{parentName:"td"},"el"),": ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">",") => ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets the element to be zoomable to full screen using Boardzilla's zoom feature.")))),(0,r.kt)("h4",{id:"returns-31"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-30"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#appearance"},"appearance")),(0,r.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L1653"},"boardzilla-core/src/board/element.ts:1653")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"layout"},"layout"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"layout"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"this"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"applyTo"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"attributes"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Apply a layout to some of the elements directly contained within this\nelement. See also ",(0,r.kt)("a",{parentName:"p",href:"/api/classes/ElementCollection#layout"},"ElementCollection#layout")),(0,r.kt)("h4",{id:"type-parameters-20"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/Space"},(0,r.kt)("inlineCode",{parentName:"a"},"Space")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"B"),">")))),(0,r.kt)("h4",{id:"parameters-27"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"this")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"applyTo")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">"," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/ElementCollection"},(0,r.kt)("inlineCode",{parentName:"a"},"ElementCollection")),"\\<",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">",">"," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Which elements this layout applies to. Provided value can be: - A specific ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},"GameElement")," - The name of an element - A specific set of elements (",(0,r.kt)("a",{parentName:"td",href:"/api/classes/ElementCollection"},"ElementCollection"),") - A class of elements If multiple layout declarations would apply to the same element, only one will be used. The order of specificity is as above. If a class is used and mutiple apply, the more specific class will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"attributes")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"\\<",(0,r.kt)("a",{parentName:"td",href:"/api/modules#layoutattributes"},(0,r.kt)("inlineCode",{parentName:"a"},"LayoutAttributes")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of attributes describing the layout. All units of measurement are percentages of this elements width and height from 0-100, unless otherwise noted (See ",(0,r.kt)("inlineCode",{parentName:"td"},"margin")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"gap"),")")))),(0,r.kt)("h4",{id:"returns-32"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-31"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#layout"},"layout")),(0,r.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L1099"},"boardzilla-core/src/board/element.ts:1099")),(0,r.kt)("h2",{id:"visibility"},"Visibility"),(0,r.kt)("h3",{id:"hidefrom"},"hideFrom"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"hideFrom"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"...player"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Hide this element from the given players without changing it's visibility to\nany other players."),(0,r.kt)("h4",{id:"parameters-28"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...player")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"P"),"[]")))),(0,r.kt)("h4",{id:"returns-33"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-32"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#hidefrom"},"hideFrom")),(0,r.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L727"},"boardzilla-core/src/board/element.ts:727")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"hidefromall"},"hideFromAll"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"hideFromAll"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Hide this element from all players"),(0,r.kt)("h4",{id:"returns-34"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-33"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#hidefromall"},"hideFromAll")),(0,r.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L718"},"boardzilla-core/src/board/element.ts:718")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isvisible"},"isVisible"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isVisible"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Returns whether this element is visible to the current player. Can only be\ncalled when in a player context, during an action taken by a player or\nwhile the board is viewed by a given player."),(0,r.kt)("h4",{id:"returns-35"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"inherited-from-34"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#isvisible"},"isVisible")),(0,r.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L761"},"boardzilla-core/src/board/element.ts:761")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isvisibleto"},"isVisibleTo"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isVisibleTo"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"player"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Returns whether this element is visible to the given player"),(0,r.kt)("h4",{id:"parameters-29"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"player")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"P"))))),(0,r.kt)("h4",{id:"returns-36"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"inherited-from-35"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#isvisibleto"},"isVisibleTo")),(0,r.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L745"},"boardzilla-core/src/board/element.ts:745")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"showonlyto"},"showOnlyTo"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"showOnlyTo"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"player"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Show this element only to the given player"),(0,r.kt)("h4",{id:"parameters-30"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"player")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"P"))))),(0,r.kt)("h4",{id:"returns-37"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-36"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#showonlyto"},"showOnlyTo")),(0,r.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L690"},"boardzilla-core/src/board/element.ts:690")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"showto"},"showTo"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"showTo"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"...player"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Show this element to the given players without changing it's visibility to\nany other players."),(0,r.kt)("h4",{id:"parameters-31"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...player")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"),"[] ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"P"),"[]")))),(0,r.kt)("h4",{id:"returns-38"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-37"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#showto"},"showTo")),(0,r.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L703"},"boardzilla-core/src/board/element.ts:703")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"showtoall"},"showToAll"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"showToAll"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Show this element to all players"),(0,r.kt)("h4",{id:"returns-39"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-38"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#showtoall"},"showToAll")),(0,r.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L682"},"boardzilla-core/src/board/element.ts:682")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"revealwhenhidden"},"revealWhenHidden"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"revealWhenHidden"),"\\<",(0,r.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"this"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"...attrs"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Provide list of attributes that remain visible even when these elements are\nnot visible to players. E.g. In a game with multiple card decks with\ndifferent backs, identified by Card#deck, the identity of the card when\nface-down is hidden, but the deck it belongs to is not, since the card art\non the back would identify the deck. In this case calling\n",(0,r.kt)("inlineCode",{parentName:"p"},"Card.revealWhenHidden('deck')")," will cause all attributes other than 'deck'\nto be hidden when the card is face down, while still revealing which deck\nit is."),(0,r.kt)("h4",{id:"type-parameters-21"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"T")),(0,r.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,r.kt)("a",{parentName:"td",href:"/api/classes/GameElement"},(0,r.kt)("inlineCode",{parentName:"a"},"GameElement")),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"parameters-32"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"this")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ElementClass"),"\\<",(0,r.kt)("inlineCode",{parentName:"td"},"T"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"...attrs")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," & keyof ",(0,r.kt)("inlineCode",{parentName:"td"},"T"),"[]")))),(0,r.kt)("h4",{id:"returns-40"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"inherited-from-39"},"Inherited from"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement"},"GameElement"),".",(0,r.kt)("a",{parentName:"p",href:"/api/classes/GameElement#revealwhenhidden"},"revealWhenHidden")),(0,r.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/boardzilla/boardzilla-core/blob/41757ea/src/board/element.ts#L777"},"boardzilla-core/src/board/element.ts:777")))}k.isMDXComponent=!0}}]);